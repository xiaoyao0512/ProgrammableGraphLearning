arg =  BMI_1024C_1024I.c
arg =  -lm
arg =  -Wmain-return-type
 clang --verbose -pthread -lm -Wmain-return-type BMI_1024C_1024I.c -emit-llvm -c -o BMI_1024C_1024I.o
clang version 3.8.1 (tags/RELEASE_381/final)
Target: x86_64-unknown-linux-gnu
Thread model: posix
InstalledDir: /usr/local/bin
Found candidate GCC installation: /usr/lib/gcc/x86_64-linux-gnu/5.5.0
Found candidate GCC installation: /usr/lib/gcc/x86_64-linux-gnu/7.5.0
Selected GCC installation: /usr/lib/gcc/x86_64-linux-gnu/7.5.0
Candidate multilib: .;@m64
Selected multilib: .;@m64
clang-3.8: warning: -lm: 'linker' input unused
 "/usr/local/bin/clang-3.8" -cc1 -triple x86_64-unknown-linux-gnu -emit-llvm-bc -emit-llvm-uselists -disable-free -disable-llvm-verifier -main-file-name BMI_1024C_1024I.c -mrelocation-model static -mthread-model posix -mdisable-fp-elim -fmath-errno -masm-verbose -mconstructor-aliases -munwind-tables -fuse-init-array -target-cpu x86-64 -v -dwarf-column-info -debugger-tuning=gdb -coverage-file /home/yao/ICML/scripts/BMI_1024C_1024I.o -resource-dir /usr/local/bin/../lib/clang/3.8.1 -internal-isystem /usr/local/include -internal-isystem /usr/local/bin/../lib/clang/3.8.1/include -internal-externc-isystem /usr/include/x86_64-linux-gnu -internal-externc-isystem /include -internal-externc-isystem /usr/include -Wmain-return-type -fdebug-compilation-dir /home/yao/ICML/scripts -ferror-limit 19 -fmessage-length 0 -pthread -fobjc-runtime=gcc -fdiagnostics-show-option -o BMI_1024C_1024I.o -x c BMI_1024C_1024I.c
clang -cc1 version 3.8.1 based upon LLVM 3.8.1 default target x86_64-unknown-linux-gnu
ignoring nonexistent directory "/include"
#include "..." search starts here:
#include <...> search starts here:
 /usr/local/include
 /usr/local/bin/../lib/clang/3.8.1/include
 /usr/include/x86_64-linux-gnu
 /usr/include
End of search list.
BMI_1024C_1024I.c:2322:1: warning: return type of 'main' is not 'int' [-Wmain-return-type]
void main(){
^
BMI_1024C_1024I.c:2322:1: note: change return type to 'int'
void main(){
^~~~
int
1 warning generated.

HIHIHIHIHI
/tmp/tmp7lSspx
 mkdir -p /tmp/tmp7lSspx

 llvm-link  BMI_1024C_1024I.o  -o a.out.link.bc

 opt -load=/home/yao/ICML/llvm-contech/lib/LLVMContech.so -Contech a.out.link.bc -o a.out_ct.link.bc -ContechState /home/yao/ICML/scripts/output/contechStateFile.temp
current function name: sqroot
#BasicBlock: 0
  %1 = alloca double, align 8
  %u = alloca %union.anon, align 8
  store double %x, double* %1, align 8
  %2 = load double, double* %1, align 8
  %3 = bitcast %union.anon* %u to double*
  store double %2, double* %3, align 8
  %4 = bitcast %union.anon* %u to i32*
  %5 = load i32, i32* %4, align 8
  %6 = ashr i32 %5, 1
  %7 = add nsw i32 536870912, %6
  %8 = sub nsw i32 %7, 4194304
  %9 = bitcast %union.anon* %u to i32*
  store i32 %8, i32* %9, align 8
  %10 = bitcast %union.anon* %u to double*
  %11 = load double, double* %10, align 8
  %12 = load double, double* %1, align 8
  %13 = bitcast %union.anon* %u to double*
  %14 = load double, double* %13, align 8
  %15 = fdiv double %12, %14
  %16 = fadd double %11, %15
  %17 = bitcast %union.anon* %u to double*
  store double %16, double* %17, align 8
  %18 = bitcast %union.anon* %u to double*
  %19 = load double, double* %18, align 8
  %20 = fmul double 2.500000e-01, %19
  %21 = load double, double* %1, align 8
  %22 = bitcast %union.anon* %u to double*
  %23 = load double, double* %22, align 8
  %24 = fdiv double %21, %23
  %25 = fadd double %20, %24
  %26 = bitcast %union.anon* %u to double*
  store double %25, double* %26, align 8
  %27 = bitcast %union.anon* %u to double*
  %28 = load double, double* %27, align 8
  ret double %28
current function name: abs1
#BasicBlock: 1
  %1 = alloca double, align 8
  %2 = alloca double, align 8
  store double %x, double* %2, align 8
  %3 = load double, double* %2, align 8
  %4 = fcmp olt double %3, 0.000000e+00
  br i1 %4, label %5, label %8
#BasicBlock: 2
  %7 = load double, double* %2, align 8
  %8 = fmul double -1.000000e+00, %7
  store double %8, double* %1, align 8
  br label %11
#BasicBlock: 3
  %11 = load double, double* %2, align 8
  store double %11, double* %1, align 8
  br label %12
#BasicBlock: 4
  %14 = load double, double* %1, align 8
  ret double %14
current function name: ln
#BasicBlock: 5
  %1 = alloca double, align 8
  %old_sum = alloca double, align 8
  %xmlxpl = alloca double, align 8
  %xmlxpl_2 = alloca double, align 8
  %denom = alloca double, align 8
  %frac = alloca double, align 8
  %term = alloca double, align 8
  %sum = alloca double, align 8
  store double %x, double* %1, align 8
  store double 0.000000e+00, double* %old_sum, align 8
  %2 = load double, double* %1, align 8
  %3 = fsub double %2, 1.000000e+00
  %4 = load double, double* %1, align 8
  %5 = fadd double %4, 1.000000e+00
  %6 = fdiv double %3, %5
  store double %6, double* %xmlxpl, align 8
  %7 = load double, double* %xmlxpl, align 8
  %8 = load double, double* %xmlxpl, align 8
  %9 = fmul double %7, %8
  store double %9, double* %xmlxpl_2, align 8
  store double 1.000000e+00, double* %denom, align 8
  %10 = load double, double* %xmlxpl, align 8
  store double %10, double* %frac, align 8
  %11 = load double, double* %frac, align 8
  store double %11, double* %term, align 8
  %12 = load double, double* %term, align 8
  store double %12, double* %sum, align 8
  br label %13
#BasicBlock: 6
  %15 = load double, double* %sum, align 8
  %16 = load double, double* %old_sum, align 8
  %17 = fcmp une double %15, %16
  br i1 %17, label %18, label %30
#BasicBlock: 7
  %20 = load double, double* %sum, align 8
  store double %20, double* %old_sum, align 8
  %21 = load double, double* %denom, align 8
  %22 = fadd double %21, 2.000000e+00
  store double %22, double* %denom, align 8
  %23 = load double, double* %xmlxpl_2, align 8
  %24 = load double, double* %frac, align 8
  %25 = fmul double %24, %23
  store double %25, double* %frac, align 8
  %26 = load double, double* %frac, align 8
  %27 = load double, double* %denom, align 8
  %28 = fdiv double %26, %27
  %29 = load double, double* %sum, align 8
  %30 = fadd double %29, %28
  store double %30, double* %sum, align 8
  br label %14
#BasicBlock: 8
  %33 = load double, double* %sum, align 8
  %34 = fmul double 2.000000e+00, %33
  ret double %34
current function name: expo
#BasicBlock: 9
  %1 = alloca double, align 8
  %z = alloca double, align 8
  %i = alloca i32, align 4
  store double %x, double* %1, align 8
  %2 = load double, double* %1, align 8
  %3 = fdiv double %2, 1.024000e+03
  %4 = fadd double 1.000000e+00, %3
  store double %4, double* %z, align 8
  store i32 0, i32* %i, align 4
  br label %5
#BasicBlock: 10
  %7 = load i32, i32* %i, align 4
  %8 = icmp slt i32 %7, 1023
  br i1 %8, label %9, label %18
#BasicBlock: 11
  %11 = load double, double* %z, align 8
  %12 = load double, double* %1, align 8
  %13 = fdiv double %12, 1.024000e+03
  %14 = fadd double 1.000000e+00, %13
  %15 = fmul double %11, %14
  store double %15, double* %z, align 8
  br label %16
#BasicBlock: 12
  %18 = load i32, i32* %i, align 4
  %19 = add nsw i32 %18, 1
  store i32 %19, i32* %i, align 4
  br label %6
#BasicBlock: 13
  %22 = load double, double* %z, align 8
  ret double %22
current function name: power
#BasicBlock: 14
  %1 = alloca double, align 8
  %2 = alloca double, align 8
  %3 = alloca i32, align 4
  store double %num, double* %2, align 8
  store i32 %pw, i32* %3, align 4
  %4 = load i32, i32* %3, align 4
  %5 = icmp ne i32 %4, 0
  br i1 %5, label %6, label %14
#BasicBlock: 15
  %8 = load double, double* %2, align 8
  %9 = load double, double* %2, align 8
  %10 = load i32, i32* %3, align 4
  %11 = sub nsw i32 %10, 1
  %12 = call double @power(double %9, i32 %11)
  br label %13
#BasicBlock: 16
  %15 = fmul double %8, %13
  store double %15, double* %1, align 8
  br label %17
#BasicBlock: 17
  store double 1.000000e+00, double* %1, align 8
  br label %18
#BasicBlock: 18
  %20 = load double, double* %1, align 8
  ret double %20
current function name: powe
#BasicBlock: 19
  %1 = alloca double, align 8
  %2 = alloca double, align 8
  %z = alloca double, align 8
  %lnz = alloca double, align 8
  store double %x, double* %1, align 8
  store double %n, double* %2, align 8
  store double 0.000000e+00, double* %z, align 8
  store double 0.000000e+00, double* %lnz, align 8
  %3 = load double, double* %2, align 8
  %4 = load double, double* %1, align 8
  %5 = call double @ln(double %4)
  br label %6
#BasicBlock: 20
  %8 = fmul double %3, %6
  store double %8, double* %lnz, align 8
  %9 = load double, double* %lnz, align 8
  %10 = call double @expo(double %9)
  br label %11
#BasicBlock: 21
  store double %11, double* %z, align 8
  %13 = load double, double* %z, align 8
  ret double %13
current function name: sp_gamma
#BasicBlock: 22
  %1 = alloca double, align 8
  %a = alloca i32, align 4
  %k = alloca i32, align 4
  %accm = alloca double, align 8
  %k1_factrl = alloca double, align 8
  store double %z, double* %1, align 8
  store i32 12, i32* %a, align 4
  %2 = load double*, double** @sp_gamma.c, align 8
  %3 = icmp eq double* %2, null
  br i1 %3, label %4, label %42
#BasicBlock: 23
  store double 1.000000e+00, double* %k1_factrl, align 8
  store double* getelementptr inbounds ([12 x double], [12 x double]* @sp_gamma.c_space, i32 0, i32 0), double** @sp_gamma.c, align 8
  %6 = call double @sqroot(double 0x401921FB54442EEA)
  br label %7
#BasicBlock: 24
  %9 = load double*, double** @sp_gamma.c, align 8
  %10 = getelementptr inbounds double, double* %9, i64 0
  store double %7, double* %10, align 8
  store i32 1, i32* %k, align 4
  br label %11
#BasicBlock: 25
  %13 = load i32, i32* %k, align 4
  %14 = icmp slt i32 %13, 12
  br i1 %14, label %15, label %44
#BasicBlock: 26
  %17 = load i32, i32* %k, align 4
  %18 = sub nsw i32 12, %17
  %19 = sitofp i32 %18 to double
  %20 = call double @expo(double %19)
  br label %21
#BasicBlock: 27
  %23 = load i32, i32* %k, align 4
  %24 = sub nsw i32 12, %23
  %25 = sitofp i32 %24 to double
  %26 = load i32, i32* %k, align 4
  %27 = sitofp i32 %26 to double
  %28 = fsub double %27, 5.000000e-01
  %29 = call double @powe(double %25, double %28)
  br label %30
#BasicBlock: 28
  %32 = fmul double %21, %30
  %33 = load double, double* %k1_factrl, align 8
  %34 = fdiv double %32, %33
  %35 = load i32, i32* %k, align 4
  %36 = sext i32 %35 to i64
  %37 = load double*, double** @sp_gamma.c, align 8
  %38 = getelementptr inbounds double, double* %37, i64 %36
  store double %34, double* %38, align 8
  %39 = load i32, i32* %k, align 4
  %40 = sub nsw i32 0, %39
  %41 = sitofp i32 %40 to double
  %42 = load double, double* %k1_factrl, align 8
  %43 = fmul double %42, %41
  store double %43, double* %k1_factrl, align 8
  br label %44
#BasicBlock: 29
  %46 = load i32, i32* %k, align 4
  %47 = add nsw i32 %46, 1
  store i32 %47, i32* %k, align 4
  br label %12
#BasicBlock: 30
  br label %50
#BasicBlock: 31
  %52 = load double*, double** @sp_gamma.c, align 8
  %53 = getelementptr inbounds double, double* %52, i64 0
  %54 = load double, double* %53, align 8
  store double %54, double* %accm, align 8
  store i32 1, i32* %k, align 4
  br label %55
#BasicBlock: 32
  %57 = load i32, i32* %k, align 4
  %58 = icmp slt i32 %57, 12
  br i1 %58, label %59, label %75
#BasicBlock: 33
  %61 = load i32, i32* %k, align 4
  %62 = sext i32 %61 to i64
  %63 = load double*, double** @sp_gamma.c, align 8
  %64 = getelementptr inbounds double, double* %63, i64 %62
  %65 = load double, double* %64, align 8
  %66 = load double, double* %1, align 8
  %67 = load i32, i32* %k, align 4
  %68 = sitofp i32 %67 to double
  %69 = fadd double %66, %68
  %70 = fdiv double %65, %69
  %71 = load double, double* %accm, align 8
  %72 = fadd double %71, %70
  store double %72, double* %accm, align 8
  br label %73
#BasicBlock: 34
  %75 = load i32, i32* %k, align 4
  %76 = add nsw i32 %75, 1
  store i32 %76, i32* %k, align 4
  br label %56
#BasicBlock: 35
  %79 = load double, double* %1, align 8
  %80 = fadd double %79, 1.200000e+01
  %81 = fsub double -0.000000e+00, %80
  %82 = call double @expo(double %81)
  br label %83
#BasicBlock: 36
  %85 = load double, double* %1, align 8
  %86 = fadd double %85, 1.200000e+01
  %87 = load double, double* %1, align 8
  %88 = fadd double %87, 5.000000e-01
  %89 = call double @powe(double %86, double %88)
  br label %90
#BasicBlock: 37
  %92 = fmul double %83, %90
  %93 = load double, double* %accm, align 8
  %94 = fmul double %93, %92
  store double %94, double* %accm, align 8
  %95 = load double, double* %accm, align 8
  %96 = load double, double* %1, align 8
  %97 = fdiv double %95, %96
  ret double %97
current function name: conv
#BasicBlock: 38
  %1 = alloca double*, align 8
  %2 = alloca double*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca double*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %6 = alloca i8*, align 8
  %kmin = alloca i32, align 4
  %kmax = alloca i32, align 4
  %k = alloca i32, align 4
  store double* %x, double** %1, align 8
  store double* %h, double** %2, align 8
  store i32 %m, i32* %3, align 4
  store i32 %n, i32* %4, align 4
  store double* %Result, double** %5, align 8
  %7 = load i32, i32* %3, align 4
  %8 = load i32, i32* %4, align 4
  %9 = add nsw i32 %7, %8
  %10 = zext i32 %9 to i64
  %11 = call i8* @llvm.stacksave()
  br label %12
Builtin - llvm.stacksave
#BasicBlock: 39
  store i8* %12, i8** %6, align 8
  %14 = alloca double, i64 %11, align 16
  %15 = load i32, i32* %3, align 4
  %16 = load i32, i32* %4, align 4
  %17 = add nsw i32 %15, %16
  %18 = zext i32 %17 to i64
  %19 = alloca double, i64 %18, align 16
  %20 = load i32, i32* %3, align 4
  %21 = load i32, i32* %4, align 4
  %22 = add nsw i32 %20, %21
  %23 = sub nsw i32 %22, 1
  %24 = zext i32 %23 to i64
  %25 = alloca double, i64 %24, align 16
  store i32 0, i32* %i, align 4
  br label %26
#BasicBlock: 40
  %28 = load i32, i32* %i, align 4
  %29 = load i32, i32* %3, align 4
  %30 = icmp slt i32 %28, %29
  br i1 %30, label %31, label %43
#BasicBlock: 41
  %33 = load i32, i32* %i, align 4
  %34 = sext i32 %33 to i64
  %35 = load double*, double** %1, align 8
  %36 = getelementptr inbounds double, double* %35, i64 %34
  %37 = load double, double* %36, align 8
  %38 = load i32, i32* %i, align 4
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds double, double* %14, i64 %39
  store double %37, double* %40, align 8
  br label %41
#BasicBlock: 42
  %43 = load i32, i32* %i, align 4
  %44 = add nsw i32 %43, 1
  store i32 %44, i32* %i, align 4
  br label %27
#BasicBlock: 43
  store i32 0, i32* %i, align 4
  br label %47
#BasicBlock: 44
  %49 = load i32, i32* %i, align 4
  %50 = load i32, i32* %4, align 4
  %51 = icmp slt i32 %49, %50
  br i1 %51, label %52, label %64
#BasicBlock: 45
  %54 = load i32, i32* %i, align 4
  %55 = sext i32 %54 to i64
  %56 = load double*, double** %2, align 8
  %57 = getelementptr inbounds double, double* %56, i64 %55
  %58 = load double, double* %57, align 8
  %59 = load i32, i32* %i, align 4
  %60 = sext i32 %59 to i64
  %61 = getelementptr inbounds double, double* %19, i64 %60
  store double %58, double* %61, align 8
  br label %62
#BasicBlock: 46
  %64 = load i32, i32* %i, align 4
  %65 = add nsw i32 %64, 1
  store i32 %65, i32* %i, align 4
  br label %48
#BasicBlock: 47
  %68 = load i32, i32* %3, align 4
  store i32 %68, i32* %i, align 4
  br label %69
#BasicBlock: 48
  %71 = load i32, i32* %i, align 4
  %72 = load i32, i32* %3, align 4
  %73 = load i32, i32* %4, align 4
  %74 = add nsw i32 %72, %73
  %75 = sub nsw i32 %74, 1
  %76 = icmp sle i32 %71, %75
  br i1 %76, label %77, label %84
#BasicBlock: 49
  %79 = load i32, i32* %i, align 4
  %80 = sext i32 %79 to i64
  %81 = getelementptr inbounds double, double* %14, i64 %80
  store double 0.000000e+00, double* %81, align 8
  br label %82
#BasicBlock: 50
  %84 = load i32, i32* %i, align 4
  %85 = add nsw i32 %84, 1
  store i32 %85, i32* %i, align 4
  br label %70
#BasicBlock: 51
  %88 = load i32, i32* %4, align 4
  store i32 %88, i32* %i, align 4
  br label %89
#BasicBlock: 52
  %91 = load i32, i32* %i, align 4
  %92 = load i32, i32* %3, align 4
  %93 = load i32, i32* %4, align 4
  %94 = add nsw i32 %92, %93
  %95 = sub nsw i32 %94, 1
  %96 = icmp sle i32 %91, %95
  br i1 %96, label %97, label %104
#BasicBlock: 53
  %99 = load i32, i32* %i, align 4
  %100 = sext i32 %99 to i64
  %101 = getelementptr inbounds double, double* %19, i64 %100
  store double 0.000000e+00, double* %101, align 8
  br label %102
#BasicBlock: 54
  %104 = load i32, i32* %i, align 4
  %105 = add nsw i32 %104, 1
  store i32 %105, i32* %i, align 4
  br label %90
#BasicBlock: 55
  store i32 0, i32* %i, align 4
  br label %108
#BasicBlock: 56
  %110 = load i32, i32* %i, align 4
  %111 = load i32, i32* %3, align 4
  %112 = load i32, i32* %4, align 4
  %113 = add nsw i32 %111, %112
  %114 = sub nsw i32 %113, 1
  %115 = icmp slt i32 %110, %114
  br i1 %115, label %116, label %172
#BasicBlock: 57
  %118 = load i32, i32* %i, align 4
  %119 = sext i32 %118 to i64
  %120 = getelementptr inbounds double, double* %25, i64 %119
  store double 0.000000e+00, double* %120, align 8
  %121 = load i32, i32* %i, align 4
  %122 = load i32, i32* %4, align 4
  %123 = sub nsw i32 %122, 1
  %124 = icmp sge i32 %121, %123
  br i1 %124, label %125, label %130
#BasicBlock: 58
  %127 = load i32, i32* %i, align 4
  %128 = load i32, i32* %4, align 4
  %129 = sub nsw i32 %128, 1
  %130 = sub nsw i32 %127, %129
  br label %132
#BasicBlock: 59
  br label %133
#BasicBlock: 60
  %135 = phi i32 [ %131, %126 ], [ 0, %132 ]
  store i32 %135, i32* %kmin, align 4
  %136 = load i32, i32* %i, align 4
  %137 = load i32, i32* %3, align 4
  %138 = sub nsw i32 %137, 1
  %139 = icmp slt i32 %136, %138
  br i1 %139, label %140, label %142
#BasicBlock: 61
  %142 = load i32, i32* %i, align 4
  br label %146
#BasicBlock: 62
  %145 = load i32, i32* %3, align 4
  %146 = sub nsw i32 %145, 1
  br label %147
#BasicBlock: 63
  %149 = phi i32 [ %142, %141 ], [ %147, %144 ]
  store i32 %149, i32* %kmax, align 4
  %150 = load i32, i32* %kmin, align 4
  store i32 %150, i32* %k, align 4
  br label %151
#BasicBlock: 64
  %153 = load i32, i32* %k, align 4
  %154 = load i32, i32* %kmax, align 4
  %155 = icmp sle i32 %153, %154
  br i1 %155, label %156, label %176
#BasicBlock: 65
  %158 = load i32, i32* %k, align 4
  %159 = sext i32 %158 to i64
  %160 = getelementptr inbounds double, double* %14, i64 %159
  %161 = load double, double* %160, align 8
  %162 = load i32, i32* %i, align 4
  %163 = load i32, i32* %k, align 4
  %164 = sub nsw i32 %162, %163
  %165 = sext i32 %164 to i64
  %166 = getelementptr inbounds double, double* %19, i64 %165
  %167 = load double, double* %166, align 8
  %168 = fmul double %161, %167
  %169 = load i32, i32* %i, align 4
  %170 = sext i32 %169 to i64
  %171 = getelementptr inbounds double, double* %25, i64 %170
  %172 = load double, double* %171, align 8
  %173 = fadd double %172, %168
  store double %173, double* %171, align 8
  br label %174
#BasicBlock: 66
  %176 = load i32, i32* %k, align 4
  %177 = add nsw i32 %176, 1
  store i32 %177, i32* %k, align 4
  br label %152
#BasicBlock: 67
  br label %180
#BasicBlock: 68
  %182 = load i32, i32* %i, align 4
  %183 = add nsw i32 %182, 1
  store i32 %183, i32* %i, align 4
  br label %109
#BasicBlock: 69
  store i32 0, i32* %j, align 4
  br label %186
#BasicBlock: 70
  %188 = load i32, i32* %j, align 4
  %189 = load i32, i32* %3, align 4
  %190 = icmp slt i32 %188, %189
  br i1 %190, label %191, label %203
#BasicBlock: 71
  %193 = load i32, i32* %j, align 4
  %194 = sext i32 %193 to i64
  %195 = getelementptr inbounds double, double* %25, i64 %194
  %196 = load double, double* %195, align 8
  %197 = load i32, i32* %j, align 4
  %198 = sext i32 %197 to i64
  %199 = load double*, double** %5, align 8
  %200 = getelementptr inbounds double, double* %199, i64 %198
  store double %196, double* %200, align 8
  br label %201
#BasicBlock: 72
  %203 = load i32, i32* %j, align 4
  %204 = add nsw i32 %203, 1
  store i32 %204, i32* %j, align 4
  br label %187
#BasicBlock: 73
  %207 = load i8*, i8** %6, align 8
  call void @llvm.stackrestore(i8* %207)
  ret void
Builtin - llvm.stackrestore
current function name: llvm.stacksave
current function name: llvm.stackrestore
current function name: getFractionalExpan
#BasicBlock: 74
  %1 = alloca double*, align 8
  %2 = alloca i32, align 4
  %3 = alloca double, align 8
  %4 = alloca i32, align 4
  %5 = alloca double*, align 8
  %6 = alloca i8*, align 8
  %iter = alloca i32, align 4
  store double* %x, double** %1, align 8
  store i32 %sizeOfX, i32* %2, align 4
  store double %alpha, double* %3, align 8
  store i32 %infit, i32* %4, align 4
  store double* %Result, double** %5, align 8
  %7 = load i32, i32* %4, align 4
  %8 = add nsw i32 %7, 1
  %9 = zext i32 %8 to i64
  %10 = call i8* @llvm.stacksave()
  br label %11
Builtin - llvm.stacksave
#BasicBlock: 75
  store i8* %11, i8** %6, align 8
  %13 = alloca double, i64 %10, align 16
  %14 = load i32, i32* %4, align 4
  %15 = add nsw i32 %14, 1
  %16 = zext i32 %15 to i64
  %17 = alloca i32, i64 %16, align 16
  store i32 0, i32* %iter, align 4
  br label %18
#BasicBlock: 76
  %20 = load i32, i32* %iter, align 4
  %21 = load i32, i32* %4, align 4
  %22 = icmp sle i32 %20, %21
  br i1 %22, label %23, label %31
#BasicBlock: 77
  %25 = load i32, i32* %iter, align 4
  %26 = load i32, i32* %iter, align 4
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds i32, i32* %17, i64 %27
  store i32 %25, i32* %28, align 4
  br label %29
#BasicBlock: 78
  %31 = load i32, i32* %iter, align 4
  %32 = add nsw i32 %31, 1
  store i32 %32, i32* %iter, align 4
  br label %19
#BasicBlock: 79
  store i32 0, i32* %iter, align 4
  br label %35
#BasicBlock: 80
  %37 = load i32, i32* %iter, align 4
  %38 = load i32, i32* %4, align 4
  %39 = icmp sle i32 %37, %38
  br i1 %39, label %40, label %71
#BasicBlock: 81
  %42 = load double, double* %3, align 8
  %43 = fmul double -1.000000e+00, %42
  %44 = load i32, i32* %iter, align 4
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds i32, i32* %17, i64 %45
  %47 = load i32, i32* %46, align 4
  %48 = sitofp i32 %47 to double
  %49 = fadd double %43, %48
  %50 = call double @sp_gamma(double %49)
  br label %51
#BasicBlock: 82
  %53 = load double, double* %3, align 8
  %54 = fmul double -1.000000e+00, %53
  %55 = call double @sp_gamma(double %54)
  br label %56
#BasicBlock: 83
  %58 = load i32, i32* %iter, align 4
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds i32, i32* %17, i64 %59
  %61 = load i32, i32* %60, align 4
  %62 = sitofp i32 %61 to double
  %63 = fadd double %62, 1.000000e+00
  %64 = call double @sp_gamma(double %63)
  br label %65
#BasicBlock: 84
  %67 = fmul double %56, %65
  %68 = fdiv double %51, %67
  %69 = load i32, i32* %iter, align 4
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds double, double* %13, i64 %70
  store double %68, double* %71, align 8
  br label %72
#BasicBlock: 85
  %74 = load i32, i32* %iter, align 4
  %75 = add nsw i32 %74, 1
  store i32 %75, i32* %iter, align 4
  br label %36
#BasicBlock: 86
  store i32 0, i32* %iter, align 4
  br label %78
#BasicBlock: 87
  %80 = load i32, i32* %iter, align 4
  %81 = load i32, i32* %4, align 4
  %82 = icmp sle i32 %80, %81
  br i1 %82, label %83, label %114
#BasicBlock: 88
  %85 = load double, double* %3, align 8
  %86 = fmul double -1.000000e+00, %85
  %87 = load i32, i32* %iter, align 4
  %88 = sext i32 %87 to i64
  %89 = getelementptr inbounds i32, i32* %17, i64 %88
  %90 = load i32, i32* %89, align 4
  %91 = sitofp i32 %90 to double
  %92 = fadd double %86, %91
  %93 = call double @sp_gamma(double %92)
  br label %94
#BasicBlock: 89
  %96 = load double, double* %3, align 8
  %97 = fmul double -1.000000e+00, %96
  %98 = call double @sp_gamma(double %97)
  br label %99
#BasicBlock: 90
  %101 = load i32, i32* %iter, align 4
  %102 = sext i32 %101 to i64
  %103 = getelementptr inbounds i32, i32* %17, i64 %102
  %104 = load i32, i32* %103, align 4
  %105 = sitofp i32 %104 to double
  %106 = fadd double %105, 1.000000e+00
  %107 = call double @sp_gamma(double %106)
  br label %108
#BasicBlock: 91
  %110 = fmul double %99, %108
  %111 = fdiv double %94, %110
  %112 = load i32, i32* %iter, align 4
  %113 = sext i32 %112 to i64
  %114 = getelementptr inbounds double, double* %13, i64 %113
  store double %111, double* %114, align 8
  br label %115
#BasicBlock: 92
  %117 = load i32, i32* %iter, align 4
  %118 = add nsw i32 %117, 1
  store i32 %118, i32* %iter, align 4
  br label %79
#BasicBlock: 93
  %121 = load double*, double** %1, align 8
  %122 = load i32, i32* %2, align 4
  %123 = load i32, i32* %4, align 4
  %124 = add nsw i32 %123, 1
  %125 = load double*, double** %5, align 8
  call void @conv(double* %121, double* %13, i32 %122, i32 %124, double* %125)
  br label %126
#BasicBlock: 94
  %128 = load i8*, i8** %6, align 8
  call void @llvm.stackrestore(i8* %128)
  ret void
Builtin - llvm.stackrestore
current function name: polyfit
#BasicBlock: 95
  %1 = alloca i32, align 4
  %2 = alloca double*, align 8
  %3 = alloca double*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca double*, align 8
  %B = alloca [6 x double], align 16
  %P = alloca [13 x double], align 16
  %A = alloca [72 x double], align 16
  %x = alloca double, align 8
  %y = alloca double, align 8
  %powx = alloca double, align 8
  %ii = alloca i32, align 4
  %jj = alloca i32, align 4
  %kk = alloca i32, align 4
  store double* %dependentValues, double** %2, align 8
  store double* %independentValues, double** %3, align 8
  store i32 %countOfElements, i32* %4, align 4
  store i32 %order, i32* %5, align 4
  store double* %coefficients, double** %6, align 8
  %7 = bitcast [6 x double]* %B to i8*
  call void @llvm.memset.p0i8.i64(i8* %7, i8 0, i64 48, i32 16, i1 false)
  br label %8
#BasicBlock: 96
  %10 = bitcast [13 x double]* %P to i8*
  call void @llvm.memset.p0i8.i64(i8* %10, i8 0, i64 104, i32 16, i1 false)
  br label %11
#BasicBlock: 97
  %13 = bitcast [72 x double]* %A to i8*
  call void @llvm.memset.p0i8.i64(i8* %13, i8 0, i64 576, i32 16, i1 false)
  br label %14
#BasicBlock: 98
  %16 = load i32, i32* %4, align 4
  %17 = load i32, i32* %5, align 4
  %18 = icmp ule i32 %16, %17
  br i1 %18, label %19, label %20
#BasicBlock: 99
  store i32 -1, i32* %1, align 4
  br label %343
#BasicBlock: 100
  %23 = load i32, i32* %5, align 4
  %24 = icmp ugt i32 %23, 5
  br i1 %24, label %25, label %26
#BasicBlock: 101
  store i32 -1, i32* %1, align 4
  br label %345
#BasicBlock: 102
  store i32 0, i32* %ii, align 4
  br label %29
#BasicBlock: 103
  %31 = load i32, i32* %ii, align 4
  %32 = load i32, i32* %4, align 4
  %33 = icmp ult i32 %31, %32
  br i1 %33, label %34, label %72
#BasicBlock: 104
  %36 = load i32, i32* %ii, align 4
  %37 = zext i32 %36 to i64
  %38 = load double*, double** %2, align 8
  %39 = getelementptr inbounds double, double* %38, i64 %37
  %40 = load double, double* %39, align 8
  store double %40, double* %x, align 8
  %41 = load i32, i32* %ii, align 4
  %42 = zext i32 %41 to i64
  %43 = load double*, double** %3, align 8
  %44 = getelementptr inbounds double, double* %43, i64 %42
  %45 = load double, double* %44, align 8
  store double %45, double* %y, align 8
  store double 1.000000e+00, double* %powx, align 8
  store i32 0, i32* %jj, align 4
  br label %46
#BasicBlock: 105
  %48 = load i32, i32* %jj, align 4
  %49 = load i32, i32* %5, align 4
  %50 = add i32 %49, 1
  %51 = icmp ult i32 %48, %50
  br i1 %51, label %52, label %70
#BasicBlock: 106
  %54 = load i32, i32* %jj, align 4
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds [6 x double], [6 x double]* %B, i64 0, i64 %55
  %57 = load double, double* %56, align 8
  %58 = load double, double* %y, align 8
  %59 = load double, double* %powx, align 8
  %60 = fmul double %58, %59
  %61 = fadd double %57, %60
  %62 = load i32, i32* %jj, align 4
  %63 = zext i32 %62 to i64
  %64 = getelementptr inbounds [6 x double], [6 x double]* %B, i64 0, i64 %63
  store double %61, double* %64, align 8
  %65 = load double, double* %powx, align 8
  %66 = load double, double* %x, align 8
  %67 = fmul double %65, %66
  store double %67, double* %powx, align 8
  br label %68
#BasicBlock: 107
  %70 = load i32, i32* %jj, align 4
  %71 = add i32 %70, 1
  store i32 %71, i32* %jj, align 4
  br label %47
#BasicBlock: 108
  br label %74
#BasicBlock: 109
  %76 = load i32, i32* %ii, align 4
  %77 = add i32 %76, 1
  store i32 %77, i32* %ii, align 4
  br label %30
#BasicBlock: 110
  %80 = load i32, i32* %4, align 4
  %81 = uitofp i32 %80 to double
  %82 = getelementptr inbounds [13 x double], [13 x double]* %P, i64 0, i64 0
  store double %81, double* %82, align 16
  store i32 0, i32* %ii, align 4
  br label %83
#BasicBlock: 111
  %85 = load i32, i32* %ii, align 4
  %86 = load i32, i32* %4, align 4
  %87 = icmp ult i32 %85, %86
  br i1 %87, label %88, label %126
#BasicBlock: 112
  %90 = load i32, i32* %ii, align 4
  %91 = zext i32 %90 to i64
  %92 = load double*, double** %2, align 8
  %93 = getelementptr inbounds double, double* %92, i64 %91
  %94 = load double, double* %93, align 8
  store double %94, double* %x, align 8
  %95 = load i32, i32* %ii, align 4
  %96 = zext i32 %95 to i64
  %97 = load double*, double** %2, align 8
  %98 = getelementptr inbounds double, double* %97, i64 %96
  %99 = load double, double* %98, align 8
  store double %99, double* %powx, align 8
  store i32 1, i32* %jj, align 4
  br label %100
#BasicBlock: 113
  %102 = load i32, i32* %jj, align 4
  %103 = load i32, i32* %5, align 4
  %104 = add i32 %103, 1
  %105 = mul i32 2, %104
  %106 = add i32 %105, 1
  %107 = icmp ult i32 %102, %106
  br i1 %107, label %108, label %124
#BasicBlock: 114
  %110 = load i32, i32* %jj, align 4
  %111 = zext i32 %110 to i64
  %112 = getelementptr inbounds [13 x double], [13 x double]* %P, i64 0, i64 %111
  %113 = load double, double* %112, align 8
  %114 = load double, double* %powx, align 8
  %115 = fadd double %113, %114
  %116 = load i32, i32* %jj, align 4
  %117 = zext i32 %116 to i64
  %118 = getelementptr inbounds [13 x double], [13 x double]* %P, i64 0, i64 %117
  store double %115, double* %118, align 8
  %119 = load double, double* %powx, align 8
  %120 = load double, double* %x, align 8
  %121 = fmul double %119, %120
  store double %121, double* %powx, align 8
  br label %122
#BasicBlock: 115
  %124 = load i32, i32* %jj, align 4
  %125 = add i32 %124, 1
  store i32 %125, i32* %jj, align 4
  br label %101
#BasicBlock: 116
  br label %128
#BasicBlock: 117
  %130 = load i32, i32* %ii, align 4
  %131 = add i32 %130, 1
  store i32 %131, i32* %ii, align 4
  br label %84
#BasicBlock: 118
  store i32 0, i32* %ii, align 4
  br label %134
#BasicBlock: 119
  %136 = load i32, i32* %ii, align 4
  %137 = load i32, i32* %5, align 4
  %138 = add i32 %137, 1
  %139 = icmp ult i32 %136, %138
  br i1 %139, label %140, label %181
#BasicBlock: 120
  store i32 0, i32* %jj, align 4
  br label %142
#BasicBlock: 121
  %144 = load i32, i32* %jj, align 4
  %145 = load i32, i32* %5, align 4
  %146 = add i32 %145, 1
  %147 = icmp ult i32 %144, %146
  br i1 %147, label %148, label %167
#BasicBlock: 122
  %150 = load i32, i32* %ii, align 4
  %151 = load i32, i32* %jj, align 4
  %152 = add i32 %150, %151
  %153 = zext i32 %152 to i64
  %154 = getelementptr inbounds [13 x double], [13 x double]* %P, i64 0, i64 %153
  %155 = load double, double* %154, align 8
  %156 = load i32, i32* %ii, align 4
  %157 = load i32, i32* %5, align 4
  %158 = add i32 %157, 1
  %159 = mul i32 2, %158
  %160 = mul i32 %156, %159
  %161 = load i32, i32* %jj, align 4
  %162 = add i32 %160, %161
  %163 = zext i32 %162 to i64
  %164 = getelementptr inbounds [72 x double], [72 x double]* %A, i64 0, i64 %163
  store double %155, double* %164, align 8
  br label %165
#BasicBlock: 123
  %167 = load i32, i32* %jj, align 4
  %168 = add i32 %167, 1
  store i32 %168, i32* %jj, align 4
  br label %143
#BasicBlock: 124
  %171 = load i32, i32* %ii, align 4
  %172 = load i32, i32* %5, align 4
  %173 = add i32 %172, 1
  %174 = mul i32 2, %173
  %175 = mul i32 %171, %174
  %176 = load i32, i32* %ii, align 4
  %177 = load i32, i32* %5, align 4
  %178 = add i32 %177, 1
  %179 = add i32 %176, %178
  %180 = add i32 %175, %179
  %181 = zext i32 %180 to i64
  %182 = getelementptr inbounds [72 x double], [72 x double]* %A, i64 0, i64 %181
  store double 1.000000e+00, double* %182, align 8
  br label %183
#BasicBlock: 125
  %185 = load i32, i32* %ii, align 4
  %186 = add i32 %185, 1
  store i32 %186, i32* %ii, align 4
  br label %135
#BasicBlock: 126
  store i32 0, i32* %ii, align 4
  br label %189
#BasicBlock: 127
  %191 = load i32, i32* %ii, align 4
  %192 = load i32, i32* %5, align 4
  %193 = add i32 %192, 1
  %194 = icmp ult i32 %191, %193
  br i1 %194, label %195, label %315
#BasicBlock: 128
  %197 = load i32, i32* %ii, align 4
  %198 = load i32, i32* %5, align 4
  %199 = add i32 %198, 1
  %200 = mul i32 2, %199
  %201 = mul i32 %197, %200
  %202 = load i32, i32* %ii, align 4
  %203 = add i32 %201, %202
  %204 = zext i32 %203 to i64
  %205 = getelementptr inbounds [72 x double], [72 x double]* %A, i64 0, i64 %204
  %206 = load double, double* %205, align 8
  store double %206, double* %x, align 8
  %207 = load double, double* %x, align 8
  %208 = fcmp une double %207, 0.000000e+00
  br i1 %208, label %209, label %311
#BasicBlock: 129
  store i32 0, i32* %kk, align 4
  br label %211
#BasicBlock: 130
  %213 = load i32, i32* %kk, align 4
  %214 = load i32, i32* %5, align 4
  %215 = add i32 %214, 1
  %216 = mul i32 2, %215
  %217 = icmp ult i32 %213, %216
  br i1 %217, label %218, label %243
#BasicBlock: 131
  %220 = load i32, i32* %ii, align 4
  %221 = load i32, i32* %5, align 4
  %222 = add i32 %221, 1
  %223 = mul i32 2, %222
  %224 = mul i32 %220, %223
  %225 = load i32, i32* %kk, align 4
  %226 = add i32 %224, %225
  %227 = zext i32 %226 to i64
  %228 = getelementptr inbounds [72 x double], [72 x double]* %A, i64 0, i64 %227
  %229 = load double, double* %228, align 8
  %230 = load double, double* %x, align 8
  %231 = fdiv double %229, %230
  %232 = load i32, i32* %ii, align 4
  %233 = load i32, i32* %5, align 4
  %234 = add i32 %233, 1
  %235 = mul i32 2, %234
  %236 = mul i32 %232, %235
  %237 = load i32, i32* %kk, align 4
  %238 = add i32 %236, %237
  %239 = zext i32 %238 to i64
  %240 = getelementptr inbounds [72 x double], [72 x double]* %A, i64 0, i64 %239
  store double %231, double* %240, align 8
  br label %241
#BasicBlock: 132
  %243 = load i32, i32* %kk, align 4
  %244 = add i32 %243, 1
  store i32 %244, i32* %kk, align 4
  br label %212
#BasicBlock: 133
  store i32 0, i32* %jj, align 4
  br label %247
#BasicBlock: 134
  %249 = load i32, i32* %jj, align 4
  %250 = load i32, i32* %5, align 4
  %251 = add i32 %250, 1
  %252 = icmp ult i32 %249, %251
  br i1 %252, label %253, label %316
#BasicBlock: 135
  %255 = load i32, i32* %jj, align 4
  %256 = load i32, i32* %ii, align 4
  %257 = sub i32 %255, %256
  %258 = icmp ne i32 %257, 0
  br i1 %258, label %259, label %313
#BasicBlock: 136
  %261 = load i32, i32* %jj, align 4
  %262 = load i32, i32* %5, align 4
  %263 = add i32 %262, 1
  %264 = mul i32 2, %263
  %265 = mul i32 %261, %264
  %266 = load i32, i32* %ii, align 4
  %267 = add i32 %265, %266
  %268 = zext i32 %267 to i64
  %269 = getelementptr inbounds [72 x double], [72 x double]* %A, i64 0, i64 %268
  %270 = load double, double* %269, align 8
  store double %270, double* %y, align 8
  store i32 0, i32* %kk, align 4
  br label %271
#BasicBlock: 137
  %273 = load i32, i32* %kk, align 4
  %274 = load i32, i32* %5, align 4
  %275 = add i32 %274, 1
  %276 = mul i32 2, %275
  %277 = icmp ult i32 %273, %276
  br i1 %277, label %278, label %314
#BasicBlock: 138
  %280 = load i32, i32* %jj, align 4
  %281 = load i32, i32* %5, align 4
  %282 = add i32 %281, 1
  %283 = mul i32 2, %282
  %284 = mul i32 %280, %283
  %285 = load i32, i32* %kk, align 4
  %286 = add i32 %284, %285
  %287 = zext i32 %286 to i64
  %288 = getelementptr inbounds [72 x double], [72 x double]* %A, i64 0, i64 %287
  %289 = load double, double* %288, align 8
  %290 = load double, double* %y, align 8
  %291 = load i32, i32* %ii, align 4
  %292 = load i32, i32* %5, align 4
  %293 = add i32 %292, 1
  %294 = mul i32 2, %293
  %295 = mul i32 %291, %294
  %296 = load i32, i32* %kk, align 4
  %297 = add i32 %295, %296
  %298 = zext i32 %297 to i64
  %299 = getelementptr inbounds [72 x double], [72 x double]* %A, i64 0, i64 %298
  %300 = load double, double* %299, align 8
  %301 = fmul double %290, %300
  %302 = fsub double %289, %301
  %303 = load i32, i32* %jj, align 4
  %304 = load i32, i32* %5, align 4
  %305 = add i32 %304, 1
  %306 = mul i32 2, %305
  %307 = mul i32 %303, %306
  %308 = load i32, i32* %kk, align 4
  %309 = add i32 %307, %308
  %310 = zext i32 %309 to i64
  %311 = getelementptr inbounds [72 x double], [72 x double]* %A, i64 0, i64 %310
  store double %302, double* %311, align 8
  br label %312
#BasicBlock: 139
  %314 = load i32, i32* %kk, align 4
  %315 = add i32 %314, 1
  store i32 %315, i32* %kk, align 4
  br label %272
#BasicBlock: 140
  br label %318
#BasicBlock: 141
  br label %320
#BasicBlock: 142
  %322 = load i32, i32* %jj, align 4
  %323 = add i32 %322, 1
  store i32 %323, i32* %jj, align 4
  br label %248
#BasicBlock: 143
  br label %327
#BasicBlock: 144
  store i32 -1, i32* %1, align 4
  br label %388
#BasicBlock: 145
  br label %330
#BasicBlock: 146
  %332 = load i32, i32* %ii, align 4
  %333 = add i32 %332, 1
  store i32 %333, i32* %ii, align 4
  br label %190
#BasicBlock: 147
  store i32 0, i32* %ii, align 4
  br label %336
#BasicBlock: 148
  %338 = load i32, i32* %ii, align 4
  %339 = load i32, i32* %5, align 4
  %340 = add i32 %339, 1
  %341 = icmp ult i32 %338, %340
  br i1 %341, label %342, label %391
#BasicBlock: 149
  store i32 0, i32* %jj, align 4
  br label %344
#BasicBlock: 150
  %346 = load i32, i32* %jj, align 4
  %347 = load i32, i32* %5, align 4
  %348 = add i32 %347, 1
  %349 = icmp ult i32 %346, %348
  br i1 %349, label %350, label %389
#BasicBlock: 151
  store double 0.000000e+00, double* %x, align 8
  store i32 0, i32* %kk, align 4
  br label %352
#BasicBlock: 152
  %354 = load i32, i32* %kk, align 4
  %355 = load i32, i32* %5, align 4
  %356 = add i32 %355, 1
  %357 = icmp ult i32 %354, %356
  br i1 %357, label %358, label %382
#BasicBlock: 153
  %360 = load double, double* %x, align 8
  %361 = load i32, i32* %ii, align 4
  %362 = load i32, i32* %5, align 4
  %363 = add i32 %362, 1
  %364 = mul i32 2, %363
  %365 = mul i32 %361, %364
  %366 = load i32, i32* %kk, align 4
  %367 = load i32, i32* %5, align 4
  %368 = add i32 %367, 1
  %369 = add i32 %366, %368
  %370 = add i32 %365, %369
  %371 = zext i32 %370 to i64
  %372 = getelementptr inbounds [72 x double], [72 x double]* %A, i64 0, i64 %371
  %373 = load double, double* %372, align 8
  %374 = load i32, i32* %kk, align 4
  %375 = zext i32 %374 to i64
  %376 = getelementptr inbounds [6 x double], [6 x double]* %B, i64 0, i64 %375
  %377 = load double, double* %376, align 8
  %378 = fmul double %373, %377
  %379 = fadd double %360, %378
  store double %379, double* %x, align 8
  br label %380
#BasicBlock: 154
  %382 = load i32, i32* %kk, align 4
  %383 = add i32 %382, 1
  store i32 %383, i32* %kk, align 4
  br label %353
#BasicBlock: 155
  %386 = load double, double* %x, align 8
  %387 = load i32, i32* %ii, align 4
  %388 = zext i32 %387 to i64
  %389 = load double*, double** %6, align 8
  %390 = getelementptr inbounds double, double* %389, i64 %388
  store double %386, double* %390, align 8
  br label %391
#BasicBlock: 156
  %393 = load i32, i32* %jj, align 4
  %394 = add i32 %393, 1
  store i32 %394, i32* %jj, align 4
  br label %345
#BasicBlock: 157
  br label %397
#BasicBlock: 158
  %399 = load i32, i32* %ii, align 4
  %400 = add i32 %399, 1
  store i32 %400, i32* %ii, align 4
  br label %337
#BasicBlock: 159
  store i32 0, i32* %1, align 4
  br label %403
#BasicBlock: 160
  %405 = load i32, i32* %1, align 4
  ret i32 %405
current function name: llvm.memset.p0i8.i64
current function name: log10
#BasicBlock: 161
  %1 = alloca double, align 8
  %LN10 = alloca double, align 8
  store double %x, double* %1, align 8
  store double 0x40026BB1BBB55516, double* %LN10, align 8
  %2 = load double, double* %1, align 8
  %3 = call double @ln(double %2)
  br label %4
#BasicBlock: 162
  %6 = load double, double* %LN10, align 8
  %7 = fdiv double %4, %6
  ret double %7
current function name: dwthaar
#BasicBlock: 163
  %1 = alloca double*, align 8
  %2 = alloca i32, align 4
  %3 = alloca double*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %n = alloca i32, align 4
  %4 = alloca i8*, align 8
  %n_double = alloca i32, align 4
  store double* %X, double** %1, align 8
  store i32 %XN, i32* %2, align 4
  store double* %Result, double** %3, align 8
  %5 = load i32, i32* %2, align 4
  %6 = sdiv i32 %5, 2
  store i32 %6, i32* %n, align 4
  %7 = load i32, i32* %n, align 4
  %8 = zext i32 %7 to i64
  %9 = call i8* @llvm.stacksave()
  br label %10
Builtin - llvm.stacksave
#BasicBlock: 164
  store i8* %10, i8** %4, align 8
  %12 = alloca double, i64 %9, align 16
  store i32 0, i32* %i, align 4
  br label %13
#BasicBlock: 165
  %15 = load i32, i32* %i, align 4
  %16 = load i32, i32* %n, align 4
  %17 = icmp slt i32 %15, %16
  br i1 %17, label %18, label %25
#BasicBlock: 166
  %20 = load i32, i32* %i, align 4
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds double, double* %12, i64 %21
  store double 0.000000e+00, double* %22, align 8
  br label %23
#BasicBlock: 167
  %25 = load i32, i32* %i, align 4
  %26 = add nsw i32 %25, 1
  store i32 %26, i32* %i, align 4
  br label %14
#BasicBlock: 168
  %29 = load i32, i32* %n, align 4
  %30 = zext i32 %29 to i64
  %31 = alloca double, i64 %30, align 16
  store i32 0, i32* %i, align 4
  br label %32
#BasicBlock: 169
  %34 = load i32, i32* %i, align 4
  %35 = load i32, i32* %n, align 4
  %36 = icmp slt i32 %34, %35
  br i1 %36, label %37, label %44
#BasicBlock: 170
  %39 = load i32, i32* %i, align 4
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds double, double* %31, i64 %40
  store double 0.000000e+00, double* %41, align 8
  br label %42
#BasicBlock: 171
  %44 = load i32, i32* %i, align 4
  %45 = add nsw i32 %44, 1
  store i32 %45, i32* %i, align 4
  br label %33
#BasicBlock: 172
  %48 = load i32, i32* %n, align 4
  %49 = mul nsw i32 2, %48
  store i32 %49, i32* %n_double, align 4
  %50 = load i32, i32* %n_double, align 4
  %51 = zext i32 %50 to i64
  %52 = alloca double, i64 %51, align 16
  store i32 0, i32* %i, align 4
  br label %53
#BasicBlock: 173
  %55 = load i32, i32* %i, align 4
  %56 = load i32, i32* %n_double, align 4
  %57 = icmp slt i32 %55, %56
  br i1 %57, label %58, label %65
#BasicBlock: 174
  %60 = load i32, i32* %i, align 4
  %61 = sext i32 %60 to i64
  %62 = getelementptr inbounds double, double* %52, i64 %61
  store double 0.000000e+00, double* %62, align 8
  br label %63
#BasicBlock: 175
  %65 = load i32, i32* %i, align 4
  %66 = add nsw i32 %65, 1
  store i32 %66, i32* %i, align 4
  br label %54
#BasicBlock: 176
  store i32 0, i32* %i, align 4
  br label %69
#BasicBlock: 177
  %71 = load i32, i32* %i, align 4
  %72 = load i32, i32* %n, align 4
  %73 = icmp slt i32 %71, %72
  br i1 %73, label %74, label %117
#BasicBlock: 178
  %76 = load i32, i32* %i, align 4
  %77 = mul nsw i32 2, %76
  %78 = sext i32 %77 to i64
  %79 = load double*, double** %1, align 8
  %80 = getelementptr inbounds double, double* %79, i64 %78
  %81 = load double, double* %80, align 8
  %82 = load i32, i32* %i, align 4
  %83 = mul nsw i32 2, %82
  %84 = add nsw i32 %83, 1
  %85 = sext i32 %84 to i64
  %86 = load double*, double** %1, align 8
  %87 = getelementptr inbounds double, double* %86, i64 %85
  %88 = load double, double* %87, align 8
  %89 = fadd double %81, %88
  %90 = load i32, i32* %i, align 4
  %91 = sext i32 %90 to i64
  %92 = getelementptr inbounds double, double* %12, i64 %91
  store double %89, double* %92, align 8
  %93 = load i32, i32* %i, align 4
  %94 = sext i32 %93 to i64
  %95 = getelementptr inbounds double, double* %12, i64 %94
  %96 = load double, double* %95, align 8
  %97 = fmul double 5.000000e-01, %96
  %98 = load i32, i32* %i, align 4
  %99 = sext i32 %98 to i64
  %100 = getelementptr inbounds double, double* %12, i64 %99
  store double %97, double* %100, align 8
  %101 = load i32, i32* %i, align 4
  %102 = mul nsw i32 2, %101
  %103 = sext i32 %102 to i64
  %104 = load double*, double** %1, align 8
  %105 = getelementptr inbounds double, double* %104, i64 %103
  %106 = load double, double* %105, align 8
  %107 = load i32, i32* %i, align 4
  %108 = sext i32 %107 to i64
  %109 = getelementptr inbounds double, double* %12, i64 %108
  %110 = load double, double* %109, align 8
  %111 = fsub double %106, %110
  %112 = load i32, i32* %i, align 4
  %113 = sext i32 %112 to i64
  %114 = getelementptr inbounds double, double* %31, i64 %113
  store double %111, double* %114, align 8
  br label %115
#BasicBlock: 179
  %117 = load i32, i32* %i, align 4
  %118 = add nsw i32 %117, 1
  store i32 %118, i32* %i, align 4
  br label %70
#BasicBlock: 180
  store i32 0, i32* %i, align 4
  br label %121
#BasicBlock: 181
  %123 = load i32, i32* %i, align 4
  %124 = load i32, i32* %n, align 4
  %125 = icmp slt i32 %123, %124
  br i1 %125, label %126, label %148
#BasicBlock: 182
  %128 = load i32, i32* %i, align 4
  %129 = sext i32 %128 to i64
  %130 = getelementptr inbounds double, double* %12, i64 %129
  %131 = load double, double* %130, align 8
  %132 = fmul double 2.000000e+00, %131
  %133 = fdiv double %132, 0x3FF6A09E667F3BCC
  %134 = load i32, i32* %i, align 4
  %135 = sext i32 %134 to i64
  %136 = getelementptr inbounds double, double* %12, i64 %135
  store double %133, double* %136, align 8
  %137 = load i32, i32* %i, align 4
  %138 = sext i32 %137 to i64
  %139 = getelementptr inbounds double, double* %31, i64 %138
  %140 = load double, double* %139, align 8
  %141 = fmul double -2.000000e+00, %140
  %142 = fdiv double %141, 0x3FF6A09E667F3BCC
  %143 = load i32, i32* %i, align 4
  %144 = sext i32 %143 to i64
  %145 = getelementptr inbounds double, double* %31, i64 %144
  store double %142, double* %145, align 8
  br label %146
#BasicBlock: 183
  %148 = load i32, i32* %i, align 4
  %149 = add nsw i32 %148, 1
  store i32 %149, i32* %i, align 4
  br label %122
#BasicBlock: 184
  store i32 0, i32* %i, align 4
  br label %152
#BasicBlock: 185
  %154 = load i32, i32* %i, align 4
  %155 = load i32, i32* %n, align 4
  %156 = icmp slt i32 %154, %155
  br i1 %156, label %157, label %168
#BasicBlock: 186
  %159 = load i32, i32* %i, align 4
  %160 = sext i32 %159 to i64
  %161 = getelementptr inbounds double, double* %12, i64 %160
  %162 = load double, double* %161, align 8
  %163 = load i32, i32* %i, align 4
  %164 = sext i32 %163 to i64
  %165 = getelementptr inbounds double, double* %52, i64 %164
  store double %162, double* %165, align 8
  br label %166
#BasicBlock: 187
  %168 = load i32, i32* %i, align 4
  %169 = add nsw i32 %168, 1
  store i32 %169, i32* %i, align 4
  br label %153
#BasicBlock: 188
  store i32 0, i32* %j, align 4
  %172 = load i32, i32* %n, align 4
  store i32 %172, i32* %i, align 4
  br label %173
#BasicBlock: 189
  %175 = load i32, i32* %i, align 4
  %176 = load i32, i32* %n_double, align 4
  %177 = icmp slt i32 %175, %176
  br i1 %177, label %178, label %191
#BasicBlock: 190
  %180 = load i32, i32* %j, align 4
  %181 = sext i32 %180 to i64
  %182 = getelementptr inbounds double, double* %31, i64 %181
  %183 = load double, double* %182, align 8
  %184 = load i32, i32* %i, align 4
  %185 = sext i32 %184 to i64
  %186 = getelementptr inbounds double, double* %52, i64 %185
  store double %183, double* %186, align 8
  %187 = load i32, i32* %j, align 4
  %188 = add nsw i32 %187, 1
  store i32 %188, i32* %j, align 4
  br label %189
#BasicBlock: 191
  %191 = load i32, i32* %i, align 4
  %192 = add nsw i32 %191, 1
  store i32 %192, i32* %i, align 4
  br label %174
#BasicBlock: 192
  store i32 0, i32* %i, align 4
  br label %195
#BasicBlock: 193
  %197 = load i32, i32* %i, align 4
  %198 = load i32, i32* %n_double, align 4
  %199 = icmp slt i32 %197, %198
  br i1 %199, label %200, label %212
#BasicBlock: 194
  %202 = load i32, i32* %i, align 4
  %203 = sext i32 %202 to i64
  %204 = getelementptr inbounds double, double* %52, i64 %203
  %205 = load double, double* %204, align 8
  %206 = load i32, i32* %i, align 4
  %207 = sext i32 %206 to i64
  %208 = load double*, double** %3, align 8
  %209 = getelementptr inbounds double, double* %208, i64 %207
  store double %205, double* %209, align 8
  br label %210
#BasicBlock: 195
  %212 = load i32, i32* %i, align 4
  %213 = add nsw i32 %212, 1
  store i32 %213, i32* %i, align 4
  br label %196
#BasicBlock: 196
  %216 = load i8*, i8** %4, align 8
  call void @llvm.stackrestore(i8* %216)
  ret void
Builtin - llvm.stackrestore
current function name: Transform
#BasicBlock: 197
  %1 = alloca double*, align 8
  %2 = alloca i32, align 4
  %3 = alloca double*, align 8
  %n = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %m = alloca i32, align 4
  %4 = alloca i8*, align 8
  %a = alloca double, align 8
  %b = alloca double, align 8
  %c = alloca i32, align 4
  store double* %X, double** %1, align 8
  store i32 %XN, i32* %2, align 4
  store double* %Result, double** %3, align 8
  %5 = load i32, i32* %2, align 4
  %6 = sdiv i32 %5, 2
  store i32 %6, i32* %n, align 4
  %7 = load i32, i32* %n, align 4
  %8 = zext i32 %7 to i64
  %9 = load i32, i32* %n, align 4
  %10 = zext i32 %9 to i64
  %11 = call i8* @llvm.stacksave()
  br label %12
Builtin - llvm.stacksave
#BasicBlock: 198
  store i8* %12, i8** %4, align 8
  %14 = mul nuw i64 %8, %11
  %15 = alloca double, i64 %14, align 16
  store i32 0, i32* %i, align 4
  br label %16
#BasicBlock: 199
  %18 = load i32, i32* %i, align 4
  %19 = load i32, i32* %n, align 4
  %20 = icmp slt i32 %18, %19
  br i1 %20, label %21, label %41
#BasicBlock: 200
  store i32 0, i32* %j, align 4
  br label %23
#BasicBlock: 201
  %25 = load i32, i32* %j, align 4
  %26 = load i32, i32* %n, align 4
  %27 = icmp slt i32 %25, %26
  br i1 %27, label %28, label %39
#BasicBlock: 202
  %30 = load i32, i32* %j, align 4
  %31 = sext i32 %30 to i64
  %32 = load i32, i32* %i, align 4
  %33 = sext i32 %32 to i64
  %34 = mul nsw i64 %33, %11
  %35 = getelementptr inbounds double, double* %15, i64 %34
  %36 = getelementptr inbounds double, double* %35, i64 %31
  store double 0.000000e+00, double* %36, align 8
  br label %37
#BasicBlock: 203
  %39 = load i32, i32* %j, align 4
  %40 = add nsw i32 %39, 1
  store i32 %40, i32* %j, align 4
  br label %24
#BasicBlock: 204
  br label %43
#BasicBlock: 205
  %45 = load i32, i32* %i, align 4
  %46 = add nsw i32 %45, 1
  store i32 %46, i32* %i, align 4
  br label %17
#BasicBlock: 206
  %49 = load i32, i32* %n, align 4
  %50 = zext i32 %49 to i64
  %51 = load i32, i32* %n, align 4
  %52 = zext i32 %51 to i64
  %53 = mul nuw i64 %50, %52
  %54 = alloca double, i64 %53, align 16
  store i32 0, i32* %i, align 4
  br label %55
#BasicBlock: 207
  %57 = load i32, i32* %i, align 4
  %58 = load i32, i32* %n, align 4
  %59 = icmp slt i32 %57, %58
  br i1 %59, label %60, label %80
#BasicBlock: 208
  store i32 0, i32* %j, align 4
  br label %62
#BasicBlock: 209
  %64 = load i32, i32* %j, align 4
  %65 = load i32, i32* %n, align 4
  %66 = icmp slt i32 %64, %65
  br i1 %66, label %67, label %78
#BasicBlock: 210
  %69 = load i32, i32* %j, align 4
  %70 = sext i32 %69 to i64
  %71 = load i32, i32* %i, align 4
  %72 = sext i32 %71 to i64
  %73 = mul nsw i64 %72, %52
  %74 = getelementptr inbounds double, double* %54, i64 %73
  %75 = getelementptr inbounds double, double* %74, i64 %70
  store double 0.000000e+00, double* %75, align 8
  br label %76
#BasicBlock: 211
  %78 = load i32, i32* %j, align 4
  %79 = add nsw i32 %78, 1
  store i32 %79, i32* %j, align 4
  br label %63
#BasicBlock: 212
  br label %82
#BasicBlock: 213
  %84 = load i32, i32* %i, align 4
  %85 = add nsw i32 %84, 1
  store i32 %85, i32* %i, align 4
  br label %56
#BasicBlock: 214
  %88 = load i32, i32* %2, align 4
  %89 = zext i32 %88 to i64
  %90 = alloca double, i64 %89, align 16
  store i32 0, i32* %i, align 4
  br label %91
#BasicBlock: 215
  %93 = load i32, i32* %i, align 4
  %94 = load i32, i32* %2, align 4
  %95 = icmp slt i32 %93, %94
  br i1 %95, label %96, label %103
#BasicBlock: 216
  %98 = load i32, i32* %i, align 4
  %99 = sext i32 %98 to i64
  %100 = getelementptr inbounds double, double* %90, i64 %99
  store double 0.000000e+00, double* %100, align 8
  br label %101
#BasicBlock: 217
  %103 = load i32, i32* %i, align 4
  %104 = add nsw i32 %103, 1
  store i32 %104, i32* %i, align 4
  br label %92
#BasicBlock: 218
  %107 = load i32, i32* %n, align 4
  %108 = load i32, i32* %n, align 4
  %109 = mul nsw i32 %107, %108
  %110 = zext i32 %109 to i64
  %111 = alloca double, i64 %110, align 16
  store i32 0, i32* %i, align 4
  br label %112
#BasicBlock: 219
  %114 = load i32, i32* %i, align 4
  %115 = load i32, i32* %n, align 4
  %116 = load i32, i32* %n, align 4
  %117 = mul nsw i32 %115, %116
  %118 = icmp slt i32 %114, %117
  br i1 %118, label %119, label %126
#BasicBlock: 220
  %121 = load i32, i32* %i, align 4
  %122 = sext i32 %121 to i64
  %123 = getelementptr inbounds double, double* %111, i64 %122
  store double 0.000000e+00, double* %123, align 8
  br label %124
#BasicBlock: 221
  %126 = load i32, i32* %i, align 4
  %127 = add nsw i32 %126, 1
  store i32 %127, i32* %i, align 4
  br label %113
#BasicBlock: 222
  store i32 0, i32* %i, align 4
  br label %130
#BasicBlock: 223
  %132 = load i32, i32* %i, align 4
  %133 = load i32, i32* %n, align 4
  %134 = load i32, i32* %n, align 4
  %135 = mul nsw i32 %133, %134
  %136 = icmp slt i32 %132, %135
  br i1 %136, label %137, label %144
#BasicBlock: 224
  %139 = load i32, i32* %i, align 4
  %140 = sext i32 %139 to i64
  %141 = getelementptr inbounds double, double* %111, i64 %140
  store double 0.000000e+00, double* %141, align 8
  br label %142
#BasicBlock: 225
  %144 = load i32, i32* %i, align 4
  %145 = add nsw i32 %144, 1
  store i32 %145, i32* %i, align 4
  br label %131
#BasicBlock: 226
  store i32 0, i32* %i, align 4
  br label %148
#BasicBlock: 227
  %150 = load i32, i32* %i, align 4
  %151 = load i32, i32* %2, align 4
  %152 = sdiv i32 %151, 2
  %153 = icmp slt i32 %150, %152
  br i1 %153, label %154, label %175
#BasicBlock: 228
  store i32 0, i32* %j, align 4
  br label %156
#BasicBlock: 229
  %158 = load i32, i32* %j, align 4
  %159 = load i32, i32* %2, align 4
  %160 = sdiv i32 %159, 2
  %161 = icmp slt i32 %158, %160
  br i1 %161, label %162, label %173
#BasicBlock: 230
  %164 = load i32, i32* %j, align 4
  %165 = sext i32 %164 to i64
  %166 = load i32, i32* %i, align 4
  %167 = sext i32 %166 to i64
  %168 = mul nsw i64 %167, %11
  %169 = getelementptr inbounds double, double* %15, i64 %168
  %170 = getelementptr inbounds double, double* %169, i64 %165
  store double 0.000000e+00, double* %170, align 8
  br label %171
#BasicBlock: 231
  %173 = load i32, i32* %j, align 4
  %174 = add nsw i32 %173, 1
  store i32 %174, i32* %j, align 4
  br label %157
#BasicBlock: 232
  br label %177
#BasicBlock: 233
  %179 = load i32, i32* %i, align 4
  %180 = add nsw i32 %179, 1
  store i32 %180, i32* %i, align 4
  br label %149
#BasicBlock: 234
  store i32 0, i32* %i, align 4
  br label %183
#BasicBlock: 235
  %185 = load i32, i32* %i, align 4
  %186 = load i32, i32* %2, align 4
  %187 = sdiv i32 %186, 2
  %188 = icmp slt i32 %185, %187
  br i1 %188, label %189, label %210
#BasicBlock: 236
  store i32 0, i32* %j, align 4
  br label %191
#BasicBlock: 237
  %193 = load i32, i32* %j, align 4
  %194 = load i32, i32* %2, align 4
  %195 = sdiv i32 %194, 2
  %196 = icmp slt i32 %193, %195
  br i1 %196, label %197, label %208
#BasicBlock: 238
  %199 = load i32, i32* %j, align 4
  %200 = sext i32 %199 to i64
  %201 = load i32, i32* %i, align 4
  %202 = sext i32 %201 to i64
  %203 = mul nsw i64 %202, %52
  %204 = getelementptr inbounds double, double* %54, i64 %203
  %205 = getelementptr inbounds double, double* %204, i64 %200
  store double 0.000000e+00, double* %205, align 8
  br label %206
#BasicBlock: 239
  %208 = load i32, i32* %j, align 4
  %209 = add nsw i32 %208, 1
  store i32 %209, i32* %j, align 4
  br label %192
#BasicBlock: 240
  br label %212
#BasicBlock: 241
  %214 = load i32, i32* %i, align 4
  %215 = add nsw i32 %214, 1
  store i32 %215, i32* %i, align 4
  br label %184
#BasicBlock: 242
  %218 = load i32, i32* %2, align 4
  store i32 %218, i32* %j, align 4
  %219 = load i32, i32* %2, align 4
  %220 = sitofp i32 %219 to double
  %221 = call double @log10(double %220) #1
  br label %222
#BasicBlock: 243
  store double %222, double* %a, align 8
  %224 = call double @log10(double 2.000000e+00) #1
  br label %225
#BasicBlock: 244
  store double %225, double* %b, align 8
  %227 = load double, double* %a, align 8
  %228 = fptosi double %227 to i32
  %229 = sitofp i32 %228 to double
  %230 = load double, double* %b, align 8
  %231 = fdiv double %229, %230
  %232 = fptosi double %231 to i32
  store i32 %232, i32* %c, align 4
  store i32 0, i32* %i, align 4
  br label %233
#BasicBlock: 245
  %235 = load i32, i32* %i, align 4
  %236 = load i32, i32* %c, align 4
  %237 = icmp slt i32 %235, %236
  br i1 %237, label %238, label %294
#BasicBlock: 246
  %240 = load i32, i32* %j, align 4
  %241 = sdiv i32 %240, 2
  store i32 %241, i32* %j, align 4
  %242 = load double*, double** %1, align 8
  %243 = load i32, i32* %2, align 4
  call void @dwthaar(double* %242, i32 %243, double* %90)
  br label %244
#BasicBlock: 247
  store i32 0, i32* %m, align 4
  br label %246
#BasicBlock: 248
  %248 = load i32, i32* %m, align 4
  %249 = load i32, i32* %j, align 4
  %250 = icmp slt i32 %248, %249
  br i1 %250, label %251, label %291
#BasicBlock: 249
  %253 = load i32, i32* %m, align 4
  %254 = sext i32 %253 to i64
  %255 = getelementptr inbounds double, double* %90, i64 %254
  %256 = load double, double* %255, align 8
  %257 = load i32, i32* %m, align 4
  %258 = sext i32 %257 to i64
  %259 = load i32, i32* %i, align 4
  %260 = sext i32 %259 to i64
  %261 = mul nsw i64 %260, %11
  %262 = getelementptr inbounds double, double* %15, i64 %261
  %263 = getelementptr inbounds double, double* %262, i64 %258
  store double %256, double* %263, align 8
  %264 = load i32, i32* %m, align 4
  %265 = load i32, i32* %j, align 4
  %266 = add nsw i32 %264, %265
  %267 = sext i32 %266 to i64
  %268 = getelementptr inbounds double, double* %90, i64 %267
  %269 = load double, double* %268, align 8
  %270 = load i32, i32* %m, align 4
  %271 = sext i32 %270 to i64
  %272 = load i32, i32* %i, align 4
  %273 = sext i32 %272 to i64
  %274 = mul nsw i64 %273, %52
  %275 = getelementptr inbounds double, double* %54, i64 %274
  %276 = getelementptr inbounds double, double* %275, i64 %271
  store double %269, double* %276, align 8
  %277 = load i32, i32* %m, align 4
  %278 = sext i32 %277 to i64
  %279 = load i32, i32* %i, align 4
  %280 = sext i32 %279 to i64
  %281 = mul nsw i64 %280, %11
  %282 = getelementptr inbounds double, double* %15, i64 %281
  %283 = getelementptr inbounds double, double* %282, i64 %278
  %284 = load double, double* %283, align 8
  %285 = load i32, i32* %m, align 4
  %286 = sext i32 %285 to i64
  %287 = load double*, double** %1, align 8
  %288 = getelementptr inbounds double, double* %287, i64 %286
  store double %284, double* %288, align 8
  br label %289
#BasicBlock: 250
  %291 = load i32, i32* %m, align 4
  %292 = add nsw i32 %291, 1
  store i32 %292, i32* %m, align 4
  br label %247
#BasicBlock: 251
  %295 = load i32, i32* %2, align 4
  %296 = sdiv i32 %295, 2
  store i32 %296, i32* %2, align 4
  br label %297
#BasicBlock: 252
  %299 = load i32, i32* %i, align 4
  %300 = add nsw i32 %299, 1
  store i32 %300, i32* %i, align 4
  br label %234
#BasicBlock: 253
  store i32 0, i32* %i, align 4
  br label %303
#BasicBlock: 254
  %305 = load i32, i32* %i, align 4
  %306 = load i32, i32* %n, align 4
  %307 = icmp slt i32 %305, %306
  br i1 %307, label %308, label %336
#BasicBlock: 255
  store i32 0, i32* %j, align 4
  br label %310
#BasicBlock: 256
  %312 = load i32, i32* %j, align 4
  %313 = load i32, i32* %n, align 4
  %314 = icmp slt i32 %312, %313
  br i1 %314, label %315, label %334
#BasicBlock: 257
  %317 = load i32, i32* %j, align 4
  %318 = sext i32 %317 to i64
  %319 = load i32, i32* %i, align 4
  %320 = sext i32 %319 to i64
  %321 = mul nsw i64 %320, %52
  %322 = getelementptr inbounds double, double* %54, i64 %321
  %323 = getelementptr inbounds double, double* %322, i64 %318
  %324 = load double, double* %323, align 8
  %325 = load i32, i32* %i, align 4
  %326 = load i32, i32* %n, align 4
  %327 = mul nsw i32 %325, %326
  %328 = load i32, i32* %j, align 4
  %329 = add nsw i32 %327, %328
  %330 = sext i32 %329 to i64
  %331 = getelementptr inbounds double, double* %111, i64 %330
  store double %324, double* %331, align 8
  br label %332
#BasicBlock: 258
  %334 = load i32, i32* %j, align 4
  %335 = add nsw i32 %334, 1
  store i32 %335, i32* %j, align 4
  br label %311
#BasicBlock: 259
  br label %338
#BasicBlock: 260
  %340 = load i32, i32* %i, align 4
  %341 = add nsw i32 %340, 1
  store i32 %341, i32* %i, align 4
  br label %304
#BasicBlock: 261
  store i32 0, i32* %i, align 4
  br label %344
#BasicBlock: 262
  %346 = load i32, i32* %i, align 4
  %347 = load i32, i32* %n, align 4
  %348 = load i32, i32* %n, align 4
  %349 = mul nsw i32 %347, %348
  %350 = icmp slt i32 %346, %349
  br i1 %350, label %351, label %363
#BasicBlock: 263
  %353 = load i32, i32* %i, align 4
  %354 = sext i32 %353 to i64
  %355 = getelementptr inbounds double, double* %111, i64 %354
  %356 = load double, double* %355, align 8
  %357 = load i32, i32* %i, align 4
  %358 = sext i32 %357 to i64
  %359 = load double*, double** %3, align 8
  %360 = getelementptr inbounds double, double* %359, i64 %358
  store double %356, double* %360, align 8
  br label %361
#BasicBlock: 264
  %363 = load i32, i32* %i, align 4
  %364 = add nsw i32 %363, 1
  store i32 %364, i32* %i, align 4
  br label %345
#BasicBlock: 265
  %367 = load i8*, i8** %4, align 8
  call void @llvm.stackrestore(i8* %367)
  ret void
Builtin - llvm.stackrestore
current function name: WT_estimator_v3
#BasicBlock: 266
  %1 = alloca double*, align 8
  %2 = alloca double, align 8
  %3 = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %4 = alloca i8*, align 8
  %x = alloca double, align 8
  %mean = alloca double, align 8
  %a = alloca double, align 8
  %b = alloca double, align 8
  %Numscales = alloca i32, align 4
  %m = alloca i32, align 4
  %j_transform = alloca double, align 8
  %c = alloca double, align 8
  %mean_y = alloca double, align 8
  %var = alloca double, align 8
  %var_y = alloca double, align 8
  %e = alloca double, align 8
  %f = alloca double, align 8
  %variance_y = alloca double, align 8
  %countOfElements = alloca i32, align 4
  %order = alloca i32, align 4
  %acceptableError = alloca double, align 8
  %coefficients = alloca double*, align 8
  %result = alloca i32, align 4
  %returned_result = alloca double, align 8
  store double* %series, double** %1, align 8
  store double %series_num, double* %2, align 8
  store i32 %XN, i32* %3, align 4
  %5 = load i32, i32* %3, align 4
  %6 = zext i32 %5 to i64
  %7 = call i8* @llvm.stacksave()
  br label %8
Builtin - llvm.stacksave
#BasicBlock: 267
  store i8* %8, i8** %4, align 8
  %10 = alloca double, i64 %7, align 16
  store i32 0, i32* %i, align 4
  br label %11
#BasicBlock: 268
  %13 = load i32, i32* %i, align 4
  %14 = load i32, i32* %3, align 4
  %15 = icmp slt i32 %13, %14
  br i1 %15, label %16, label %23
#BasicBlock: 269
  %18 = load i32, i32* %i, align 4
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds double, double* %10, i64 %19
  store double 0.000000e+00, double* %20, align 8
  br label %21
#BasicBlock: 270
  %23 = load i32, i32* %i, align 4
  %24 = add nsw i32 %23, 1
  store i32 %24, i32* %i, align 4
  br label %12
#BasicBlock: 271
  store double 0.000000e+00, double* %mean, align 8
  %27 = load i32, i32* %3, align 4
  %28 = sdiv i32 %27, 2
  %29 = zext i32 %28 to i64
  %30 = load i32, i32* %3, align 4
  %31 = sdiv i32 %30, 2
  %32 = zext i32 %31 to i64
  %33 = mul nuw i64 %29, %32
  %34 = alloca double, i64 %33, align 16
  store i32 0, i32* %i, align 4
  br label %35
#BasicBlock: 272
  %37 = load i32, i32* %i, align 4
  %38 = load i32, i32* %3, align 4
  %39 = sdiv i32 %38, 2
  %40 = icmp slt i32 %37, %39
  br i1 %40, label %41, label %62
#BasicBlock: 273
  store i32 0, i32* %j, align 4
  br label %43
#BasicBlock: 274
  %45 = load i32, i32* %j, align 4
  %46 = load i32, i32* %3, align 4
  %47 = sdiv i32 %46, 2
  %48 = icmp slt i32 %45, %47
  br i1 %48, label %49, label %60
#BasicBlock: 275
  %51 = load i32, i32* %j, align 4
  %52 = sext i32 %51 to i64
  %53 = load i32, i32* %i, align 4
  %54 = sext i32 %53 to i64
  %55 = mul nsw i64 %54, %32
  %56 = getelementptr inbounds double, double* %34, i64 %55
  %57 = getelementptr inbounds double, double* %56, i64 %52
  store double 0.000000e+00, double* %57, align 8
  br label %58
#BasicBlock: 276
  %60 = load i32, i32* %j, align 4
  %61 = add nsw i32 %60, 1
  store i32 %61, i32* %j, align 4
  br label %44
#BasicBlock: 277
  br label %64
#BasicBlock: 278
  %66 = load i32, i32* %i, align 4
  %67 = add nsw i32 %66, 1
  store i32 %67, i32* %i, align 4
  br label %36
#BasicBlock: 279
  %70 = load i32, i32* %3, align 4
  %71 = sdiv i32 %70, 2
  %72 = load i32, i32* %3, align 4
  %73 = sdiv i32 %72, 2
  %74 = mul nsw i32 %71, %73
  %75 = zext i32 %74 to i64
  %76 = alloca double, i64 %75, align 16
  store i32 0, i32* %i, align 4
  br label %77
#BasicBlock: 280
  %79 = load i32, i32* %i, align 4
  %80 = load i32, i32* %3, align 4
  %81 = sdiv i32 %80, 2
  %82 = load i32, i32* %3, align 4
  %83 = sdiv i32 %82, 2
  %84 = mul nsw i32 %81, %83
  %85 = icmp slt i32 %79, %84
  br i1 %85, label %86, label %93
#BasicBlock: 281
  %88 = load i32, i32* %i, align 4
  %89 = sext i32 %88 to i64
  %90 = getelementptr inbounds double, double* %76, i64 %89
  store double 0.000000e+00, double* %90, align 8
  br label %91
#BasicBlock: 282
  %93 = load i32, i32* %i, align 4
  %94 = add nsw i32 %93, 1
  store i32 %94, i32* %i, align 4
  br label %78
#BasicBlock: 283
  store i32 0, i32* %i, align 4
  br label %97
#BasicBlock: 284
  %99 = load i32, i32* %i, align 4
  %100 = load i32, i32* %3, align 4
  %101 = icmp slt i32 %99, %100
  br i1 %101, label %102, label %113
#BasicBlock: 285
  %104 = load double, double* %mean, align 8
  %105 = load i32, i32* %i, align 4
  %106 = sext i32 %105 to i64
  %107 = load double*, double** %1, align 8
  %108 = getelementptr inbounds double, double* %107, i64 %106
  %109 = load double, double* %108, align 8
  %110 = fadd double %104, %109
  store double %110, double* %mean, align 8
  br label %111
#BasicBlock: 286
  %113 = load i32, i32* %i, align 4
  %114 = add nsw i32 %113, 1
  store i32 %114, i32* %i, align 4
  br label %98
#BasicBlock: 287
  %117 = load double, double* %mean, align 8
  %118 = load i32, i32* %3, align 4
  %119 = sitofp i32 %118 to double
  %120 = fdiv double %117, %119
  store double %120, double* %mean, align 8
  store i32 0, i32* %i, align 4
  br label %121
#BasicBlock: 288
  %123 = load i32, i32* %i, align 4
  %124 = load i32, i32* %3, align 4
  %125 = icmp slt i32 %123, %124
  br i1 %125, label %126, label %147
#BasicBlock: 289
  %128 = load i32, i32* %i, align 4
  %129 = sext i32 %128 to i64
  %130 = load double*, double** %1, align 8
  %131 = getelementptr inbounds double, double* %130, i64 %129
  %132 = load double, double* %131, align 8
  %133 = load i32, i32* %i, align 4
  %134 = sext i32 %133 to i64
  %135 = getelementptr inbounds double, double* %10, i64 %134
  store double %132, double* %135, align 8
  %136 = load i32, i32* %i, align 4
  %137 = sext i32 %136 to i64
  %138 = getelementptr inbounds double, double* %10, i64 %137
  %139 = load double, double* %138, align 8
  %140 = load double, double* %mean, align 8
  %141 = fsub double %139, %140
  %142 = load i32, i32* %i, align 4
  %143 = sext i32 %142 to i64
  %144 = getelementptr inbounds double, double* %10, i64 %143
  store double %141, double* %144, align 8
  br label %145
#BasicBlock: 290
  %147 = load i32, i32* %i, align 4
  %148 = add nsw i32 %147, 1
  store i32 %148, i32* %i, align 4
  br label %122
#BasicBlock: 291
  %151 = load i32, i32* %3, align 4
  %152 = sitofp i32 %151 to double
  %153 = call double @log10(double %152) #1
  br label %154
#BasicBlock: 292
  store double %154, double* %a, align 8
  %156 = call double @log10(double 2.000000e+00) #1
  br label %157
#BasicBlock: 293
  store double %157, double* %b, align 8
  %159 = load double, double* %a, align 8
  %160 = load double, double* %b, align 8
  %161 = fdiv double %159, %160
  %162 = fptosi double %161 to i32
  store i32 %162, i32* %Numscales, align 4
  %163 = load i32, i32* %Numscales, align 4
  %164 = sub nsw i32 %163, 1
  %165 = zext i32 %164 to i64
  %166 = alloca double, i64 %165, align 16
  store i32 0, i32* %i, align 4
  br label %167
#BasicBlock: 294
  %169 = load i32, i32* %i, align 4
  %170 = load i32, i32* %Numscales, align 4
  %171 = sub nsw i32 %170, 1
  %172 = icmp slt i32 %169, %171
  br i1 %172, label %173, label %180
#BasicBlock: 295
  %175 = load i32, i32* %i, align 4
  %176 = sext i32 %175 to i64
  %177 = getelementptr inbounds double, double* %166, i64 %176
  store double 0.000000e+00, double* %177, align 8
  br label %178
#BasicBlock: 296
  %180 = load i32, i32* %i, align 4
  %181 = add nsw i32 %180, 1
  store i32 %181, i32* %i, align 4
  br label %168
#BasicBlock: 297
  %184 = load i32, i32* %Numscales, align 4
  %185 = sub nsw i32 %184, 1
  %186 = zext i32 %185 to i64
  %187 = alloca double, i64 %186, align 16
  store i32 0, i32* %i, align 4
  br label %188
#BasicBlock: 298
  %190 = load i32, i32* %i, align 4
  %191 = load i32, i32* %Numscales, align 4
  %192 = sub nsw i32 %191, 1
  %193 = icmp slt i32 %190, %192
  br i1 %193, label %194, label %201
#BasicBlock: 299
  %196 = load i32, i32* %i, align 4
  %197 = sext i32 %196 to i64
  %198 = getelementptr inbounds double, double* %187, i64 %197
  store double 0.000000e+00, double* %198, align 8
  br label %199
#BasicBlock: 300
  %201 = load i32, i32* %i, align 4
  %202 = add nsw i32 %201, 1
  store i32 %202, i32* %i, align 4
  br label %189
#BasicBlock: 301
  store i32 0, i32* %i, align 4
  br label %205
#BasicBlock: 302
  %207 = load i32, i32* %i, align 4
  %208 = load i32, i32* %Numscales, align 4
  %209 = sub nsw i32 %208, 1
  %210 = icmp slt i32 %207, %209
  br i1 %210, label %211, label %221
#BasicBlock: 303
  %213 = load i32, i32* %i, align 4
  %214 = add nsw i32 %213, 1
  %215 = sitofp i32 %214 to double
  %216 = load i32, i32* %i, align 4
  %217 = sext i32 %216 to i64
  %218 = getelementptr inbounds double, double* %187, i64 %217
  store double %215, double* %218, align 8
  br label %219
#BasicBlock: 304
  %221 = load i32, i32* %i, align 4
  %222 = add nsw i32 %221, 1
  store i32 %222, i32* %i, align 4
  br label %206
#BasicBlock: 305
  %225 = load i32, i32* %3, align 4
  call void @Transform(double* %10, i32 %225, double* %76)
  br label %226
#BasicBlock: 306
  store i32 0, i32* %m, align 4
  store i32 0, i32* %i, align 4
  br label %228
#BasicBlock: 307
  %230 = load i32, i32* %i, align 4
  %231 = load i32, i32* %3, align 4
  %232 = sdiv i32 %231, 2
  %233 = icmp slt i32 %230, %232
  br i1 %233, label %234, label %261
#BasicBlock: 308
  store i32 0, i32* %j, align 4
  br label %236
#BasicBlock: 309
  %238 = load i32, i32* %j, align 4
  %239 = load i32, i32* %3, align 4
  %240 = sdiv i32 %239, 2
  %241 = icmp slt i32 %238, %240
  br i1 %241, label %242, label %259
#BasicBlock: 310
  %244 = load i32, i32* %m, align 4
  %245 = sext i32 %244 to i64
  %246 = getelementptr inbounds double, double* %76, i64 %245
  %247 = load double, double* %246, align 8
  %248 = load i32, i32* %j, align 4
  %249 = sext i32 %248 to i64
  %250 = load i32, i32* %i, align 4
  %251 = sext i32 %250 to i64
  %252 = mul nsw i64 %251, %32
  %253 = getelementptr inbounds double, double* %34, i64 %252
  %254 = getelementptr inbounds double, double* %253, i64 %249
  store double %247, double* %254, align 8
  %255 = load i32, i32* %m, align 4
  %256 = add nsw i32 %255, 1
  store i32 %256, i32* %m, align 4
  br label %257
#BasicBlock: 311
  %259 = load i32, i32* %j, align 4
  %260 = add nsw i32 %259, 1
  store i32 %260, i32* %j, align 4
  br label %237
#BasicBlock: 312
  br label %263
#BasicBlock: 313
  %265 = load i32, i32* %i, align 4
  %266 = add nsw i32 %265, 1
  store i32 %266, i32* %i, align 4
  br label %229
#BasicBlock: 314
  %269 = load i32, i32* %3, align 4
  %270 = sdiv i32 %269, 2
  %271 = sitofp i32 %270 to double
  store double %271, double* %j_transform, align 8
  %272 = load i32, i32* %3, align 4
  %273 = sdiv i32 %272, 2
  %274 = zext i32 %273 to i64
  %275 = alloca double, i64 %274, align 16
  store i32 0, i32* %i, align 4
  br label %276
#BasicBlock: 315
  %278 = load i32, i32* %i, align 4
  %279 = load i32, i32* %3, align 4
  %280 = sdiv i32 %279, 2
  %281 = icmp slt i32 %278, %280
  br i1 %281, label %282, label %289
#BasicBlock: 316
  %284 = load i32, i32* %i, align 4
  %285 = sext i32 %284 to i64
  %286 = getelementptr inbounds double, double* %275, i64 %285
  store double 0.000000e+00, double* %286, align 8
  br label %287
#BasicBlock: 317
  %289 = load i32, i32* %i, align 4
  %290 = add nsw i32 %289, 1
  store i32 %290, i32* %i, align 4
  br label %277
#BasicBlock: 318
  store i32 0, i32* %i, align 4
  br label %293
#BasicBlock: 319
  %295 = load i32, i32* %i, align 4
  %296 = load i32, i32* %Numscales, align 4
  %297 = sub nsw i32 %296, 1
  %298 = icmp slt i32 %295, %297
  br i1 %298, label %299, label %388
#BasicBlock: 320
  store double 0.000000e+00, double* %c, align 8
  store i32 0, i32* %j, align 4
  br label %301
#BasicBlock: 321
  %303 = load i32, i32* %j, align 4
  %304 = sitofp i32 %303 to double
  %305 = load double, double* %j_transform, align 8
  %306 = fcmp olt double %304, %305
  br i1 %306, label %307, label %322
#BasicBlock: 322
  %309 = load i32, i32* %j, align 4
  %310 = sext i32 %309 to i64
  %311 = load i32, i32* %i, align 4
  %312 = sext i32 %311 to i64
  %313 = mul nsw i64 %312, %32
  %314 = getelementptr inbounds double, double* %34, i64 %313
  %315 = getelementptr inbounds double, double* %314, i64 %310
  %316 = load double, double* %315, align 8
  %317 = load i32, i32* %j, align 4
  %318 = sext i32 %317 to i64
  %319 = getelementptr inbounds double, double* %275, i64 %318
  store double %316, double* %319, align 8
  br label %320
#BasicBlock: 323
  %322 = load i32, i32* %j, align 4
  %323 = add nsw i32 %322, 1
  store i32 %323, i32* %j, align 4
  br label %302
#BasicBlock: 324
  store i32 0, i32* %j, align 4
  br label %326
#BasicBlock: 325
  %328 = load i32, i32* %j, align 4
  %329 = sitofp i32 %328 to double
  %330 = load double, double* %j_transform, align 8
  %331 = fcmp olt double %329, %330
  br i1 %331, label %332, label %342
#BasicBlock: 326
  %334 = load double, double* %c, align 8
  %335 = load i32, i32* %j, align 4
  %336 = sext i32 %335 to i64
  %337 = getelementptr inbounds double, double* %275, i64 %336
  %338 = load double, double* %337, align 8
  %339 = fadd double %334, %338
  store double %339, double* %c, align 8
  br label %340
#BasicBlock: 327
  %342 = load i32, i32* %j, align 4
  %343 = add nsw i32 %342, 1
  store i32 %343, i32* %j, align 4
  br label %327
#BasicBlock: 328
  %346 = load double, double* %c, align 8
  %347 = load double, double* %j_transform, align 8
  %348 = fdiv double %346, %347
  store double %348, double* %mean_y, align 8
  store double 0.000000e+00, double* %var, align 8
  store i32 0, i32* %j, align 4
  br label %349
#BasicBlock: 329
  %351 = load i32, i32* %j, align 4
  %352 = sitofp i32 %351 to double
  %353 = load double, double* %j_transform, align 8
  %354 = fcmp olt double %352, %353
  br i1 %354, label %355, label %374
#BasicBlock: 330
  %357 = load double, double* %var, align 8
  %358 = load i32, i32* %j, align 4
  %359 = sext i32 %358 to i64
  %360 = getelementptr inbounds double, double* %275, i64 %359
  %361 = load double, double* %360, align 8
  %362 = load double, double* %mean_y, align 8
  %363 = fsub double %361, %362
  %364 = load i32, i32* %j, align 4
  %365 = sext i32 %364 to i64
  %366 = getelementptr inbounds double, double* %275, i64 %365
  %367 = load double, double* %366, align 8
  %368 = load double, double* %mean_y, align 8
  %369 = fsub double %367, %368
  %370 = fmul double %363, %369
  %371 = fadd double %357, %370
  store double %371, double* %var, align 8
  br label %372
#BasicBlock: 331
  %374 = load i32, i32* %j, align 4
  %375 = add nsw i32 %374, 1
  store i32 %375, i32* %j, align 4
  br label %350
#BasicBlock: 332
  %378 = load double, double* %var, align 8
  %379 = load double, double* %j_transform, align 8
  %380 = fsub double %379, 1.000000e+00
  %381 = fdiv double %378, %380
  store double %381, double* %var_y, align 8
  %382 = load double, double* %var_y, align 8
  %383 = call double @log10(double %382) #1
  br label %384
#BasicBlock: 333
  store double %384, double* %e, align 8
  %386 = call double @log10(double 2.000000e+00) #1
  br label %387
#BasicBlock: 334
  store double %387, double* %f, align 8
  %389 = load double, double* %e, align 8
  %390 = load double, double* %f, align 8
  %391 = fdiv double %389, %390
  store double %391, double* %variance_y, align 8
  %392 = load double, double* %variance_y, align 8
  %393 = load i32, i32* %i, align 4
  %394 = sext i32 %393 to i64
  %395 = getelementptr inbounds double, double* %166, i64 %394
  store double %392, double* %395, align 8
  %396 = load double, double* %j_transform, align 8
  %397 = fptosi double %396 to i32
  %398 = sdiv i32 %397, 2
  %399 = sitofp i32 %398 to double
  store double %399, double* %j_transform, align 8
  br label %400
#BasicBlock: 335
  %402 = load i32, i32* %i, align 4
  %403 = add nsw i32 %402, 1
  store i32 %403, i32* %i, align 4
  br label %294
#BasicBlock: 336
  store i32 7, i32* %countOfElements, align 4
  store i32 1, i32* %order, align 4
  store double 1.000000e-02, double* %acceptableError, align 8
  %406 = load i32, i32* %order, align 4
  %407 = add nsw i32 %406, 1
  %408 = sext i32 %407 to i64
  %409 = call noalias i8* @calloc(i64 8, i64 %408) #1
  br label %410
#BasicBlock: 337
  %412 = bitcast i8* %410 to double*
  store double* %412, double** %coefficients, align 8
  store i32 0, i32* %i, align 4
  br label %413
#BasicBlock: 338
  %415 = load i32, i32* %i, align 4
  %416 = load i32, i32* %order, align 4
  %417 = add nsw i32 %416, 1
  %418 = icmp slt i32 %415, %417
  br i1 %418, label %419, label %427
#BasicBlock: 339
  %421 = load i32, i32* %i, align 4
  %422 = sext i32 %421 to i64
  %423 = load double*, double** %coefficients, align 8
  %424 = getelementptr inbounds double, double* %423, i64 %422
  store double 0.000000e+00, double* %424, align 8
  br label %425
#BasicBlock: 340
  %427 = load i32, i32* %i, align 4
  %428 = add nsw i32 %427, 1
  store i32 %428, i32* %i, align 4
  br label %414
#BasicBlock: 341
  %431 = load i32, i32* %countOfElements, align 4
  %432 = load i32, i32* %order, align 4
  %433 = load double*, double** %coefficients, align 8
  %434 = call i32 @polyfit(double* %187, double* %166, i32 %431, i32 %432, double* %433)
  br label %435
#BasicBlock: 342
  store i32 %435, i32* %result, align 4
  %437 = load double*, double** %coefficients, align 8
  %438 = getelementptr inbounds double, double* %437, i64 1
  %439 = load double, double* %438, align 8
  %440 = fdiv double %439, 2.000000e+00
  store double %440, double* %returned_result, align 8
  %441 = load double, double* %returned_result, align 8
  %442 = load i8*, i8** %4, align 8
  call void @llvm.stackrestore(i8* %442)
  ret double %441
Builtin - llvm.stackrestore
current function name: calloc
current function name: norm
#BasicBlock: 343
  %1 = alloca double*, align 8
  %2 = alloca i32, align 4
  %accum = alloca double, align 8
  %i = alloca i32, align 4
  store double* %vector, double** %1, align 8
  store i32 %vectorLength, i32* %2, align 4
  store double 0.000000e+00, double* %accum, align 8
  store i32 0, i32* %i, align 4
  br label %3
#BasicBlock: 344
  %5 = load i32, i32* %i, align 4
  %6 = load i32, i32* %2, align 4
  %7 = icmp slt i32 %5, %6
  br i1 %7, label %8, label %25
#BasicBlock: 345
  %10 = load i32, i32* %i, align 4
  %11 = sext i32 %10 to i64
  %12 = load double*, double** %1, align 8
  %13 = getelementptr inbounds double, double* %12, i64 %11
  %14 = load double, double* %13, align 8
  %15 = load i32, i32* %i, align 4
  %16 = sext i32 %15 to i64
  %17 = load double*, double** %1, align 8
  %18 = getelementptr inbounds double, double* %17, i64 %16
  %19 = load double, double* %18, align 8
  %20 = fmul double %14, %19
  %21 = load double, double* %accum, align 8
  %22 = fadd double %21, %20
  store double %22, double* %accum, align 8
  br label %23
#BasicBlock: 346
  %25 = load i32, i32* %i, align 4
  %26 = add nsw i32 %25, 1
  store i32 %26, i32* %i, align 4
  br label %4
#BasicBlock: 347
  %29 = load double, double* %accum, align 8
  %30 = call double @sqroot(double %29)
  ret double %30
current function name: mean
#BasicBlock: 348
  %1 = alloca double*, align 8
  %2 = alloca i32, align 4
  %sum = alloca double, align 8
  %i = alloca i32, align 4
  store double* %a, double** %1, align 8
  store i32 %n, i32* %2, align 4
  store double 0.000000e+00, double* %sum, align 8
  store i32 0, i32* %i, align 4
  br label %3
#BasicBlock: 349
  %5 = load i32, i32* %i, align 4
  %6 = load i32, i32* %2, align 4
  %7 = icmp slt i32 %5, %6
  br i1 %7, label %8, label %19
#BasicBlock: 350
  %10 = load i32, i32* %i, align 4
  %11 = sext i32 %10 to i64
  %12 = load double*, double** %1, align 8
  %13 = getelementptr inbounds double, double* %12, i64 %11
  %14 = load double, double* %13, align 8
  %15 = load double, double* %sum, align 8
  %16 = fadd double %15, %14
  store double %16, double* %sum, align 8
  br label %17
#BasicBlock: 351
  %19 = load i32, i32* %i, align 4
  %20 = add nsw i32 %19, 1
  store i32 %20, i32* %i, align 4
  br label %4
#BasicBlock: 352
  %23 = load double, double* %sum, align 8
  %24 = load i32, i32* %2, align 4
  %25 = sitofp i32 %24 to double
  %26 = fdiv double %23, %25
  ret double %26
current function name: mult
#BasicBlock: 353
  %1 = alloca double*, align 8
  %2 = alloca double*, align 8
  %3 = alloca double*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  store double* %A, double** %1, align 8
  store double* %B, double** %2, align 8
  store double* %C, double** %3, align 8
  store i32 %r1, i32* %4, align 4
  store i32 %c1, i32* %5, align 4
  store i32 %r2, i32* %6, align 4
  store i32 %c2, i32* %7, align 4
  store i32 0, i32* %i, align 4
  br label %8
#BasicBlock: 354
  %10 = load i32, i32* %i, align 4
  %11 = load i32, i32* %4, align 4
  %12 = icmp slt i32 %10, %11
  br i1 %12, label %13, label %64
#BasicBlock: 355
  store i32 0, i32* %j, align 4
  br label %15
#BasicBlock: 356
  %17 = load i32, i32* %j, align 4
  %18 = load i32, i32* %7, align 4
  %19 = icmp slt i32 %17, %18
  br i1 %19, label %20, label %62
#BasicBlock: 357
  store i32 0, i32* %k, align 4
  br label %22
#BasicBlock: 358
  %24 = load i32, i32* %k, align 4
  %25 = load i32, i32* %5, align 4
  %26 = icmp slt i32 %24, %25
  br i1 %26, label %27, label %60
#BasicBlock: 359
  %29 = load i32, i32* %i, align 4
  %30 = load i32, i32* %5, align 4
  %31 = mul nsw i32 %29, %30
  %32 = load i32, i32* %k, align 4
  %33 = add nsw i32 %31, %32
  %34 = sext i32 %33 to i64
  %35 = load double*, double** %1, align 8
  %36 = getelementptr inbounds double, double* %35, i64 %34
  %37 = load double, double* %36, align 8
  %38 = load i32, i32* %k, align 4
  %39 = load i32, i32* %7, align 4
  %40 = mul nsw i32 %38, %39
  %41 = load i32, i32* %j, align 4
  %42 = add nsw i32 %40, %41
  %43 = sext i32 %42 to i64
  %44 = load double*, double** %2, align 8
  %45 = getelementptr inbounds double, double* %44, i64 %43
  %46 = load double, double* %45, align 8
  %47 = fmul double %37, %46
  %48 = load i32, i32* %i, align 4
  %49 = load i32, i32* %7, align 4
  %50 = mul nsw i32 %48, %49
  %51 = load i32, i32* %j, align 4
  %52 = add nsw i32 %50, %51
  %53 = sext i32 %52 to i64
  %54 = load double*, double** %3, align 8
  %55 = getelementptr inbounds double, double* %54, i64 %53
  %56 = load double, double* %55, align 8
  %57 = fadd double %56, %47
  store double %57, double* %55, align 8
  br label %58
#BasicBlock: 360
  %60 = load i32, i32* %k, align 4
  %61 = add nsw i32 %60, 1
  store i32 %61, i32* %k, align 4
  br label %23
#BasicBlock: 361
  br label %64
#BasicBlock: 362
  %66 = load i32, i32* %j, align 4
  %67 = add nsw i32 %66, 1
  store i32 %67, i32* %j, align 4
  br label %16
#BasicBlock: 363
  br label %70
#BasicBlock: 364
  %72 = load i32, i32* %i, align 4
  %73 = add nsw i32 %72, 1
  store i32 %73, i32* %i, align 4
  br label %9
#BasicBlock: 365
  ret void
current function name: inverse_Reg
#BasicBlock: 366
  %1 = alloca [3 x double]*, align 8
  %2 = alloca double*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %sum = alloca double, align 8
  %L = alloca [3 x [3 x double]], align 16
  %U = alloca [3 x [3 x double]], align 16
  %d = alloca [3 x [3 x double]], align 16
  %b = alloca [3 x [3 x double]], align 16
  %x = alloca [3 x [3 x double]], align 16
  %x_new = alloca [3 x [3 x double]], align 16
  %temp = alloca double, align 8
  %temp_1 = alloca double, align 8
  %temp_2 = alloca double, align 8
  %x_pass_1d = alloca [9 x double], align 16
  %main_loop = alloca i32, align 4
  %m = alloca i32, align 4
  store [3 x double]* %A, [3 x double]** %1, align 8
  store double* %Result, double** %2, align 8
  store double 0.000000e+00, double* %sum, align 8
  store i32 0, i32* %i, align 4
  br label %3
#BasicBlock: 367
  %5 = load i32, i32* %i, align 4
  %6 = icmp slt i32 %5, 3
  br i1 %6, label %7, label %17
#BasicBlock: 368
  %9 = load i32, i32* %i, align 4
  %10 = sext i32 %9 to i64
  %11 = load i32, i32* %i, align 4
  %12 = sext i32 %11 to i64
  %13 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %U, i64 0, i64 %12
  %14 = getelementptr inbounds [3 x double], [3 x double]* %13, i64 0, i64 %10
  store double 1.000000e+00, double* %14, align 8
  br label %15
#BasicBlock: 369
  %17 = load i32, i32* %i, align 4
  %18 = add nsw i32 %17, 1
  store i32 %18, i32* %i, align 4
  br label %4
#BasicBlock: 370
  store i32 0, i32* %j, align 4
  br label %21
#BasicBlock: 371
  %23 = load i32, i32* %j, align 4
  %24 = icmp slt i32 %23, 3
  br i1 %24, label %25, label %151
#BasicBlock: 372
  %27 = load i32, i32* %j, align 4
  store i32 %27, i32* %i, align 4
  br label %28
#BasicBlock: 373
  %30 = load i32, i32* %i, align 4
  %31 = icmp slt i32 %30, 3
  br i1 %31, label %32, label %78
#BasicBlock: 374
  store double 0.000000e+00, double* %sum, align 8
  store i32 0, i32* %k, align 4
  br label %34
#BasicBlock: 375
  %36 = load i32, i32* %k, align 4
  %37 = load i32, i32* %j, align 4
  %38 = icmp slt i32 %36, %37
  br i1 %38, label %39, label %60
#BasicBlock: 376
  %41 = load double, double* %sum, align 8
  %42 = load i32, i32* %k, align 4
  %43 = sext i32 %42 to i64
  %44 = load i32, i32* %i, align 4
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %L, i64 0, i64 %45
  %47 = getelementptr inbounds [3 x double], [3 x double]* %46, i64 0, i64 %43
  %48 = load double, double* %47, align 8
  %49 = load i32, i32* %j, align 4
  %50 = sext i32 %49 to i64
  %51 = load i32, i32* %k, align 4
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %U, i64 0, i64 %52
  %54 = getelementptr inbounds [3 x double], [3 x double]* %53, i64 0, i64 %50
  %55 = load double, double* %54, align 8
  %56 = fmul double %48, %55
  %57 = fadd double %41, %56
  store double %57, double* %sum, align 8
  br label %58
#BasicBlock: 377
  %60 = load i32, i32* %k, align 4
  %61 = add nsw i32 %60, 1
  store i32 %61, i32* %k, align 4
  br label %35
#BasicBlock: 378
  %64 = load i32, i32* %j, align 4
  %65 = sext i32 %64 to i64
  %66 = load i32, i32* %i, align 4
  %67 = sext i32 %66 to i64
  %68 = load [3 x double]*, [3 x double]** %1, align 8
  %69 = getelementptr inbounds [3 x double], [3 x double]* %68, i64 %67
  %70 = getelementptr inbounds [3 x double], [3 x double]* %69, i64 0, i64 %65
  %71 = load double, double* %70, align 8
  %72 = load double, double* %sum, align 8
  %73 = fsub double %71, %72
  %74 = load i32, i32* %j, align 4
  %75 = sext i32 %74 to i64
  %76 = load i32, i32* %i, align 4
  %77 = sext i32 %76 to i64
  %78 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %L, i64 0, i64 %77
  %79 = getelementptr inbounds [3 x double], [3 x double]* %78, i64 0, i64 %75
  store double %73, double* %79, align 8
  br label %80
#BasicBlock: 379
  %82 = load i32, i32* %i, align 4
  %83 = add nsw i32 %82, 1
  store i32 %83, i32* %i, align 4
  br label %29
#BasicBlock: 380
  %86 = load i32, i32* %j, align 4
  store i32 %86, i32* %i, align 4
  br label %87
#BasicBlock: 381
  %89 = load i32, i32* %i, align 4
  %90 = icmp slt i32 %89, 3
  br i1 %90, label %91, label %157
#BasicBlock: 382
  store double 0.000000e+00, double* %sum, align 8
  store i32 0, i32* %k, align 4
  br label %93
#BasicBlock: 383
  %95 = load i32, i32* %k, align 4
  %96 = load i32, i32* %j, align 4
  %97 = icmp slt i32 %95, %96
  br i1 %97, label %98, label %119
#BasicBlock: 384
  %100 = load double, double* %sum, align 8
  %101 = load i32, i32* %k, align 4
  %102 = sext i32 %101 to i64
  %103 = load i32, i32* %j, align 4
  %104 = sext i32 %103 to i64
  %105 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %L, i64 0, i64 %104
  %106 = getelementptr inbounds [3 x double], [3 x double]* %105, i64 0, i64 %102
  %107 = load double, double* %106, align 8
  %108 = load i32, i32* %i, align 4
  %109 = sext i32 %108 to i64
  %110 = load i32, i32* %k, align 4
  %111 = sext i32 %110 to i64
  %112 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %U, i64 0, i64 %111
  %113 = getelementptr inbounds [3 x double], [3 x double]* %112, i64 0, i64 %109
  %114 = load double, double* %113, align 8
  %115 = fmul double %107, %114
  %116 = fadd double %100, %115
  store double %116, double* %sum, align 8
  br label %117
#BasicBlock: 385
  %119 = load i32, i32* %k, align 4
  %120 = add nsw i32 %119, 1
  store i32 %120, i32* %k, align 4
  br label %94
#BasicBlock: 386
  %123 = load i32, i32* %j, align 4
  %124 = sext i32 %123 to i64
  %125 = load i32, i32* %j, align 4
  %126 = sext i32 %125 to i64
  %127 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %L, i64 0, i64 %126
  %128 = getelementptr inbounds [3 x double], [3 x double]* %127, i64 0, i64 %124
  %129 = load double, double* %128, align 8
  %130 = fcmp oeq double %129, 0.000000e+00
  br i1 %130, label %131, label %134
#BasicBlock: 387
  %133 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str, i32 0, i32 0))
  br label %134
#BasicBlock: 388
  call void @exit(i32 1) #7
  unreachable
#BasicBlock: 389
  %138 = load i32, i32* %i, align 4
  %139 = sext i32 %138 to i64
  %140 = load i32, i32* %j, align 4
  %141 = sext i32 %140 to i64
  %142 = load [3 x double]*, [3 x double]** %1, align 8
  %143 = getelementptr inbounds [3 x double], [3 x double]* %142, i64 %141
  %144 = getelementptr inbounds [3 x double], [3 x double]* %143, i64 0, i64 %139
  %145 = load double, double* %144, align 8
  %146 = load double, double* %sum, align 8
  %147 = fsub double %145, %146
  %148 = load i32, i32* %j, align 4
  %149 = sext i32 %148 to i64
  %150 = load i32, i32* %j, align 4
  %151 = sext i32 %150 to i64
  %152 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %L, i64 0, i64 %151
  %153 = getelementptr inbounds [3 x double], [3 x double]* %152, i64 0, i64 %149
  %154 = load double, double* %153, align 8
  %155 = fdiv double %147, %154
  %156 = load i32, i32* %i, align 4
  %157 = sext i32 %156 to i64
  %158 = load i32, i32* %j, align 4
  %159 = sext i32 %158 to i64
  %160 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %U, i64 0, i64 %159
  %161 = getelementptr inbounds [3 x double], [3 x double]* %160, i64 0, i64 %157
  store double %155, double* %161, align 8
  br label %162
#BasicBlock: 390
  %164 = load i32, i32* %i, align 4
  %165 = add nsw i32 %164, 1
  store i32 %165, i32* %i, align 4
  br label %88
#BasicBlock: 391
  br label %168
#BasicBlock: 392
  %170 = load i32, i32* %j, align 4
  %171 = add nsw i32 %170, 1
  store i32 %171, i32* %j, align 4
  br label %22
#BasicBlock: 393
  store double 0.000000e+00, double* %temp, align 8
  store double 0.000000e+00, double* %temp_1, align 8
  store double 0.000000e+00, double* %temp_2, align 8
  store i32 0, i32* %i, align 4
  br label %174
#BasicBlock: 394
  %176 = load i32, i32* %i, align 4
  %177 = icmp slt i32 %176, 9
  br i1 %177, label %178, label %185
#BasicBlock: 395
  %180 = load i32, i32* %i, align 4
  %181 = sext i32 %180 to i64
  %182 = getelementptr inbounds [9 x double], [9 x double]* %x_pass_1d, i64 0, i64 %181
  store double 0.000000e+00, double* %182, align 8
  br label %183
#BasicBlock: 396
  %185 = load i32, i32* %i, align 4
  %186 = add nsw i32 %185, 1
  store i32 %186, i32* %i, align 4
  br label %175
#BasicBlock: 397
  store i32 0, i32* %i, align 4
  br label %189
#BasicBlock: 398
  %191 = load i32, i32* %i, align 4
  %192 = icmp slt i32 %191, 3
  br i1 %192, label %193, label %222
#BasicBlock: 399
  store i32 0, i32* %j, align 4
  br label %195
#BasicBlock: 400
  %197 = load i32, i32* %j, align 4
  %198 = icmp slt i32 %197, 3
  br i1 %198, label %199, label %220
#BasicBlock: 401
  %201 = load i32, i32* %i, align 4
  %202 = load i32, i32* %j, align 4
  %203 = icmp eq i32 %201, %202
  br i1 %203, label %204, label %211
#BasicBlock: 402
  %206 = load i32, i32* %j, align 4
  %207 = sext i32 %206 to i64
  %208 = load i32, i32* %i, align 4
  %209 = sext i32 %208 to i64
  %210 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %b, i64 0, i64 %209
  %211 = getelementptr inbounds [3 x double], [3 x double]* %210, i64 0, i64 %207
  store double 1.000000e+00, double* %211, align 8
  br label %219
#BasicBlock: 403
  %214 = load i32, i32* %j, align 4
  %215 = sext i32 %214 to i64
  %216 = load i32, i32* %i, align 4
  %217 = sext i32 %216 to i64
  %218 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %b, i64 0, i64 %217
  %219 = getelementptr inbounds [3 x double], [3 x double]* %218, i64 0, i64 %215
  store double 0.000000e+00, double* %219, align 8
  br label %220
#BasicBlock: 404
  %222 = load i32, i32* %j, align 4
  %223 = add nsw i32 %222, 1
  store i32 %223, i32* %j, align 4
  br label %196
#BasicBlock: 405
  br label %226
#BasicBlock: 406
  %228 = load i32, i32* %i, align 4
  %229 = add nsw i32 %228, 1
  store i32 %229, i32* %i, align 4
  br label %190
#BasicBlock: 407
  store i32 0, i32* %main_loop, align 4
  br label %232
#BasicBlock: 408
  %234 = load i32, i32* %main_loop, align 4
  %235 = icmp slt i32 %234, 3
  br i1 %235, label %236, label %398
#BasicBlock: 409
  %238 = load i32, i32* %main_loop, align 4
  %239 = sext i32 %238 to i64
  %240 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %b, i64 0, i64 0
  %241 = getelementptr inbounds [3 x double], [3 x double]* %240, i64 0, i64 %239
  %242 = load double, double* %241, align 8
  %243 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %L, i64 0, i64 0
  %244 = getelementptr inbounds [3 x double], [3 x double]* %243, i64 0, i64 0
  %245 = load double, double* %244, align 16
  %246 = fdiv double %242, %245
  %247 = load i32, i32* %main_loop, align 4
  %248 = sext i32 %247 to i64
  %249 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %d, i64 0, i64 %248
  %250 = getelementptr inbounds [3 x double], [3 x double]* %249, i64 0, i64 0
  store double %246, double* %250, align 8
  store i32 1, i32* %i, align 4
  br label %251
#BasicBlock: 410
  %253 = load i32, i32* %i, align 4
  %254 = icmp slt i32 %253, 3
  br i1 %254, label %255, label %317
#BasicBlock: 411
  store i32 0, i32* %j, align 4
  br label %257
#BasicBlock: 412
  %259 = load i32, i32* %j, align 4
  %260 = load i32, i32* %i, align 4
  %261 = icmp slt i32 %259, %260
  br i1 %261, label %262, label %292
#BasicBlock: 413
  %264 = load double, double* %temp, align 8
  %265 = load i32, i32* %j, align 4
  %266 = sext i32 %265 to i64
  %267 = load i32, i32* %i, align 4
  %268 = sext i32 %267 to i64
  %269 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %L, i64 0, i64 %268
  %270 = getelementptr inbounds [3 x double], [3 x double]* %269, i64 0, i64 %266
  %271 = load double, double* %270, align 8
  %272 = load i32, i32* %j, align 4
  %273 = sext i32 %272 to i64
  %274 = load i32, i32* %main_loop, align 4
  %275 = sext i32 %274 to i64
  %276 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %d, i64 0, i64 %275
  %277 = getelementptr inbounds [3 x double], [3 x double]* %276, i64 0, i64 %273
  %278 = load double, double* %277, align 8
  %279 = fmul double %271, %278
  %280 = fsub double -0.000000e+00, %279
  %281 = load i32, i32* %i, align 4
  %282 = sext i32 %281 to i64
  %283 = load i32, i32* %i, align 4
  %284 = sext i32 %283 to i64
  %285 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %L, i64 0, i64 %284
  %286 = getelementptr inbounds [3 x double], [3 x double]* %285, i64 0, i64 %282
  %287 = load double, double* %286, align 8
  %288 = fdiv double %280, %287
  %289 = fadd double %264, %288
  store double %289, double* %temp, align 8
  br label %290
#BasicBlock: 414
  %292 = load i32, i32* %j, align 4
  %293 = add nsw i32 %292, 1
  store i32 %293, i32* %j, align 4
  br label %258
#BasicBlock: 415
  %296 = load i32, i32* %i, align 4
  %297 = sext i32 %296 to i64
  %298 = load i32, i32* %main_loop, align 4
  %299 = sext i32 %298 to i64
  %300 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %b, i64 0, i64 %299
  %301 = getelementptr inbounds [3 x double], [3 x double]* %300, i64 0, i64 %297
  %302 = load double, double* %301, align 8
  %303 = load i32, i32* %i, align 4
  %304 = sext i32 %303 to i64
  %305 = load i32, i32* %i, align 4
  %306 = sext i32 %305 to i64
  %307 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %L, i64 0, i64 %306
  %308 = getelementptr inbounds [3 x double], [3 x double]* %307, i64 0, i64 %304
  %309 = load double, double* %308, align 8
  %310 = fdiv double %302, %309
  %311 = load double, double* %temp, align 8
  %312 = fadd double %310, %311
  %313 = load i32, i32* %i, align 4
  %314 = sext i32 %313 to i64
  %315 = load i32, i32* %main_loop, align 4
  %316 = sext i32 %315 to i64
  %317 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %d, i64 0, i64 %316
  %318 = getelementptr inbounds [3 x double], [3 x double]* %317, i64 0, i64 %314
  store double %312, double* %318, align 8
  store double 0.000000e+00, double* %temp, align 8
  br label %319
#BasicBlock: 416
  %321 = load i32, i32* %i, align 4
  %322 = add nsw i32 %321, 1
  store i32 %322, i32* %i, align 4
  br label %252
#BasicBlock: 417
  %325 = load i32, i32* %main_loop, align 4
  %326 = sext i32 %325 to i64
  %327 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %d, i64 0, i64 %326
  %328 = getelementptr inbounds [3 x double], [3 x double]* %327, i64 0, i64 2
  %329 = load double, double* %328, align 8
  %330 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %U, i64 0, i64 2
  %331 = getelementptr inbounds [3 x double], [3 x double]* %330, i64 0, i64 2
  %332 = load double, double* %331, align 16
  %333 = fdiv double %329, %332
  %334 = load i32, i32* %main_loop, align 4
  %335 = sext i32 %334 to i64
  %336 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %x, i64 0, i64 %335
  %337 = getelementptr inbounds [3 x double], [3 x double]* %336, i64 0, i64 2
  store double %333, double* %337, align 8
  store i32 1, i32* %i, align 4
  br label %338
#BasicBlock: 418
  %340 = load i32, i32* %i, align 4
  %341 = icmp sge i32 %340, 0
  br i1 %341, label %342, label %404
#BasicBlock: 419
  store i32 2, i32* %j, align 4
  br label %344
#BasicBlock: 420
  %346 = load i32, i32* %j, align 4
  %347 = load i32, i32* %i, align 4
  %348 = icmp sgt i32 %346, %347
  br i1 %348, label %349, label %379
#BasicBlock: 421
  %351 = load double, double* %temp, align 8
  %352 = load i32, i32* %j, align 4
  %353 = sext i32 %352 to i64
  %354 = load i32, i32* %i, align 4
  %355 = sext i32 %354 to i64
  %356 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %U, i64 0, i64 %355
  %357 = getelementptr inbounds [3 x double], [3 x double]* %356, i64 0, i64 %353
  %358 = load double, double* %357, align 8
  %359 = load i32, i32* %j, align 4
  %360 = sext i32 %359 to i64
  %361 = load i32, i32* %main_loop, align 4
  %362 = sext i32 %361 to i64
  %363 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %x, i64 0, i64 %362
  %364 = getelementptr inbounds [3 x double], [3 x double]* %363, i64 0, i64 %360
  %365 = load double, double* %364, align 8
  %366 = fmul double %358, %365
  %367 = fsub double -0.000000e+00, %366
  %368 = load i32, i32* %i, align 4
  %369 = sext i32 %368 to i64
  %370 = load i32, i32* %i, align 4
  %371 = sext i32 %370 to i64
  %372 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %U, i64 0, i64 %371
  %373 = getelementptr inbounds [3 x double], [3 x double]* %372, i64 0, i64 %369
  %374 = load double, double* %373, align 8
  %375 = fdiv double %367, %374
  %376 = fadd double %351, %375
  store double %376, double* %temp, align 8
  br label %377
#BasicBlock: 422
  %379 = load i32, i32* %j, align 4
  %380 = add nsw i32 %379, -1
  store i32 %380, i32* %j, align 4
  br label %345
#BasicBlock: 423
  %383 = load i32, i32* %i, align 4
  %384 = sext i32 %383 to i64
  %385 = load i32, i32* %main_loop, align 4
  %386 = sext i32 %385 to i64
  %387 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %d, i64 0, i64 %386
  %388 = getelementptr inbounds [3 x double], [3 x double]* %387, i64 0, i64 %384
  %389 = load double, double* %388, align 8
  %390 = load i32, i32* %i, align 4
  %391 = sext i32 %390 to i64
  %392 = load i32, i32* %i, align 4
  %393 = sext i32 %392 to i64
  %394 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %U, i64 0, i64 %393
  %395 = getelementptr inbounds [3 x double], [3 x double]* %394, i64 0, i64 %391
  %396 = load double, double* %395, align 8
  %397 = fdiv double %389, %396
  %398 = load double, double* %temp, align 8
  %399 = fadd double %397, %398
  %400 = load i32, i32* %i, align 4
  %401 = sext i32 %400 to i64
  %402 = load i32, i32* %main_loop, align 4
  %403 = sext i32 %402 to i64
  %404 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %x, i64 0, i64 %403
  %405 = getelementptr inbounds [3 x double], [3 x double]* %404, i64 0, i64 %401
  store double %399, double* %405, align 8
  store double 0.000000e+00, double* %temp, align 8
  br label %406
#BasicBlock: 424
  %408 = load i32, i32* %i, align 4
  %409 = add nsw i32 %408, -1
  store i32 %409, i32* %i, align 4
  br label %339
#BasicBlock: 425
  br label %412
#BasicBlock: 426
  %414 = load i32, i32* %main_loop, align 4
  %415 = add nsw i32 %414, 1
  store i32 %415, i32* %main_loop, align 4
  br label %233
#BasicBlock: 427
  store i32 0, i32* %i, align 4
  br label %418
#BasicBlock: 428
  %420 = load i32, i32* %i, align 4
  %421 = icmp slt i32 %420, 3
  br i1 %421, label %422, label %447
#BasicBlock: 429
  store i32 0, i32* %j, align 4
  br label %424
#BasicBlock: 430
  %426 = load i32, i32* %j, align 4
  %427 = icmp slt i32 %426, 3
  br i1 %427, label %428, label %445
#BasicBlock: 431
  %430 = load i32, i32* %j, align 4
  %431 = sext i32 %430 to i64
  %432 = load i32, i32* %i, align 4
  %433 = sext i32 %432 to i64
  %434 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %x, i64 0, i64 %433
  %435 = getelementptr inbounds [3 x double], [3 x double]* %434, i64 0, i64 %431
  %436 = load double, double* %435, align 8
  %437 = load i32, i32* %i, align 4
  %438 = sext i32 %437 to i64
  %439 = load i32, i32* %j, align 4
  %440 = sext i32 %439 to i64
  %441 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %x_new, i64 0, i64 %440
  %442 = getelementptr inbounds [3 x double], [3 x double]* %441, i64 0, i64 %438
  store double %436, double* %442, align 8
  br label %443
#BasicBlock: 432
  %445 = load i32, i32* %j, align 4
  %446 = add nsw i32 %445, 1
  store i32 %446, i32* %j, align 4
  br label %425
#BasicBlock: 433
  br label %449
#BasicBlock: 434
  %451 = load i32, i32* %i, align 4
  %452 = add nsw i32 %451, 1
  store i32 %452, i32* %i, align 4
  br label %419
#BasicBlock: 435
  store i32 0, i32* %m, align 4
  store i32 0, i32* %i, align 4
  br label %455
#BasicBlock: 436
  %457 = load i32, i32* %i, align 4
  %458 = icmp slt i32 %457, 3
  br i1 %458, label %459, label %483
#BasicBlock: 437
  store i32 0, i32* %j, align 4
  br label %461
#BasicBlock: 438
  %463 = load i32, i32* %j, align 4
  %464 = icmp slt i32 %463, 3
  br i1 %464, label %465, label %481
#BasicBlock: 439
  %467 = load i32, i32* %j, align 4
  %468 = sext i32 %467 to i64
  %469 = load i32, i32* %i, align 4
  %470 = sext i32 %469 to i64
  %471 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %x_new, i64 0, i64 %470
  %472 = getelementptr inbounds [3 x double], [3 x double]* %471, i64 0, i64 %468
  %473 = load double, double* %472, align 8
  %474 = load i32, i32* %m, align 4
  %475 = sext i32 %474 to i64
  %476 = getelementptr inbounds [9 x double], [9 x double]* %x_pass_1d, i64 0, i64 %475
  store double %473, double* %476, align 8
  %477 = load i32, i32* %m, align 4
  %478 = add nsw i32 %477, 1
  store i32 %478, i32* %m, align 4
  br label %479
#BasicBlock: 440
  %481 = load i32, i32* %j, align 4
  %482 = add nsw i32 %481, 1
  store i32 %482, i32* %j, align 4
  br label %462
#BasicBlock: 441
  br label %485
#BasicBlock: 442
  %487 = load i32, i32* %i, align 4
  %488 = add nsw i32 %487, 1
  store i32 %488, i32* %i, align 4
  br label %456
#BasicBlock: 443
  store i32 0, i32* %i, align 4
  br label %491
#BasicBlock: 444
  %493 = load i32, i32* %i, align 4
  %494 = icmp slt i32 %493, 9
  br i1 %494, label %495, label %507
#BasicBlock: 445
  %497 = load i32, i32* %i, align 4
  %498 = sext i32 %497 to i64
  %499 = getelementptr inbounds [9 x double], [9 x double]* %x_pass_1d, i64 0, i64 %498
  %500 = load double, double* %499, align 8
  %501 = load i32, i32* %i, align 4
  %502 = sext i32 %501 to i64
  %503 = load double*, double** %2, align 8
  %504 = getelementptr inbounds double, double* %503, i64 %502
  store double %500, double* %504, align 8
  br label %505
#BasicBlock: 446
  %507 = load i32, i32* %i, align 4
  %508 = add nsw i32 %507, 1
  store i32 %508, i32* %i, align 4
  br label %492
#BasicBlock: 447
  ret void
current function name: printf
current function name: exit
current function name: regression
#BasicBlock: 448
  %1 = alloca [3 x double]*, align 8
  %2 = alloca double*, align 8
  %3 = alloca double*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %d = alloca double, align 8
  %x_1D = alloca [9 x double], align 16
  %xt1d = alloca [9 x double], align 16
  %xtXx = alloca [9 x double], align 16
  %xtXx_2D = alloca [3 x [3 x double]], align 16
  %xtXxinv_1D = alloca [9 x double], align 16
  %invXxt_1D = alloca [9 x double], align 16
  %B_1D = alloca [3 x double], align 16
  store [3 x double]* %x, [3 x double]** %1, align 8
  store double* %y, double** %2, align 8
  store double* %Reg_Ret, double** %3, align 8
  store i32 0, i32* %i, align 4
  br label %4
#BasicBlock: 449
  %6 = load i32, i32* %i, align 4
  %7 = icmp slt i32 %6, 3
  br i1 %7, label %8, label %34
#BasicBlock: 450
  store i32 0, i32* %j, align 4
  br label %10
#BasicBlock: 451
  %12 = load i32, i32* %j, align 4
  %13 = icmp slt i32 %12, 3
  br i1 %13, label %14, label %32
#BasicBlock: 452
  %16 = load i32, i32* %j, align 4
  %17 = sext i32 %16 to i64
  %18 = load i32, i32* %i, align 4
  %19 = sext i32 %18 to i64
  %20 = load [3 x double]*, [3 x double]** %1, align 8
  %21 = getelementptr inbounds [3 x double], [3 x double]* %20, i64 %19
  %22 = getelementptr inbounds [3 x double], [3 x double]* %21, i64 0, i64 %17
  %23 = load double, double* %22, align 8
  %24 = load i32, i32* %i, align 4
  %25 = mul nsw i32 %24, 3
  %26 = load i32, i32* %j, align 4
  %27 = add nsw i32 %25, %26
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds [9 x double], [9 x double]* %x_1D, i64 0, i64 %28
  store double %23, double* %29, align 8
  br label %30
#BasicBlock: 453
  %32 = load i32, i32* %j, align 4
  %33 = add nsw i32 %32, 1
  store i32 %33, i32* %j, align 4
  br label %11
#BasicBlock: 454
  br label %36
#BasicBlock: 455
  %38 = load i32, i32* %i, align 4
  %39 = add nsw i32 %38, 1
  store i32 %39, i32* %i, align 4
  br label %5
#BasicBlock: 456
  store i32 0, i32* %i, align 4
  br label %42
#BasicBlock: 457
  %44 = load i32, i32* %i, align 4
  %45 = icmp slt i32 %44, 9
  br i1 %45, label %46, label %53
#BasicBlock: 458
  %48 = load i32, i32* %i, align 4
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds [9 x double], [9 x double]* %xt1d, i64 0, i64 %49
  store double 0.000000e+00, double* %50, align 8
  br label %51
#BasicBlock: 459
  %53 = load i32, i32* %i, align 4
  %54 = add nsw i32 %53, 1
  store i32 %54, i32* %i, align 4
  br label %43
#BasicBlock: 460
  store i32 0, i32* %i, align 4
  br label %57
#BasicBlock: 461
  %59 = load i32, i32* %i, align 4
  %60 = icmp slt i32 %59, 3
  br i1 %60, label %61, label %87
#BasicBlock: 462
  store i32 0, i32* %j, align 4
  br label %63
#BasicBlock: 463
  %65 = load i32, i32* %j, align 4
  %66 = icmp slt i32 %65, 3
  br i1 %66, label %67, label %85
#BasicBlock: 464
  %69 = load i32, i32* %i, align 4
  %70 = sext i32 %69 to i64
  %71 = load i32, i32* %j, align 4
  %72 = sext i32 %71 to i64
  %73 = load [3 x double]*, [3 x double]** %1, align 8
  %74 = getelementptr inbounds [3 x double], [3 x double]* %73, i64 %72
  %75 = getelementptr inbounds [3 x double], [3 x double]* %74, i64 0, i64 %70
  %76 = load double, double* %75, align 8
  %77 = load i32, i32* %i, align 4
  %78 = mul nsw i32 %77, 3
  %79 = load i32, i32* %j, align 4
  %80 = add nsw i32 %78, %79
  %81 = sext i32 %80 to i64
  %82 = getelementptr inbounds [9 x double], [9 x double]* %xt1d, i64 0, i64 %81
  store double %76, double* %82, align 8
  br label %83
#BasicBlock: 465
  %85 = load i32, i32* %j, align 4
  %86 = add nsw i32 %85, 1
  store i32 %86, i32* %j, align 4
  br label %64
#BasicBlock: 466
  br label %89
#BasicBlock: 467
  %91 = load i32, i32* %i, align 4
  %92 = add nsw i32 %91, 1
  store i32 %92, i32* %i, align 4
  br label %58
#BasicBlock: 468
  store i32 0, i32* %i, align 4
  br label %95
#BasicBlock: 469
  %97 = load i32, i32* %i, align 4
  %98 = icmp slt i32 %97, 9
  br i1 %98, label %99, label %106
#BasicBlock: 470
  %101 = load i32, i32* %i, align 4
  %102 = sext i32 %101 to i64
  %103 = getelementptr inbounds [9 x double], [9 x double]* %xtXx, i64 0, i64 %102
  store double 0.000000e+00, double* %103, align 8
  br label %104
#BasicBlock: 471
  %106 = load i32, i32* %i, align 4
  %107 = add nsw i32 %106, 1
  store i32 %107, i32* %i, align 4
  br label %96
#BasicBlock: 472
  %110 = getelementptr inbounds [9 x double], [9 x double]* %xt1d, i32 0, i32 0
  %111 = getelementptr inbounds [9 x double], [9 x double]* %x_1D, i32 0, i32 0
  %112 = getelementptr inbounds [9 x double], [9 x double]* %xtXx, i32 0, i32 0
  call void @mult(double* %110, double* %111, double* %112, i32 3, i32 3, i32 3, i32 3)
  br label %113
#BasicBlock: 473
  store i32 0, i32* %i, align 4
  br label %115
#BasicBlock: 474
  %117 = load i32, i32* %i, align 4
  %118 = icmp slt i32 %117, 3
  br i1 %118, label %119, label %144
#BasicBlock: 475
  store i32 0, i32* %j, align 4
  br label %121
#BasicBlock: 476
  %123 = load i32, i32* %j, align 4
  %124 = icmp slt i32 %123, 3
  br i1 %124, label %125, label %142
#BasicBlock: 477
  %127 = load i32, i32* %i, align 4
  %128 = mul nsw i32 %127, 3
  %129 = load i32, i32* %j, align 4
  %130 = add nsw i32 %128, %129
  %131 = sext i32 %130 to i64
  %132 = getelementptr inbounds [9 x double], [9 x double]* %xtXx, i64 0, i64 %131
  %133 = load double, double* %132, align 8
  %134 = load i32, i32* %j, align 4
  %135 = sext i32 %134 to i64
  %136 = load i32, i32* %i, align 4
  %137 = sext i32 %136 to i64
  %138 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %xtXx_2D, i64 0, i64 %137
  %139 = getelementptr inbounds [3 x double], [3 x double]* %138, i64 0, i64 %135
  store double %133, double* %139, align 8
  br label %140
#BasicBlock: 478
  %142 = load i32, i32* %j, align 4
  %143 = add nsw i32 %142, 1
  store i32 %143, i32* %j, align 4
  br label %122
#BasicBlock: 479
  br label %146
#BasicBlock: 480
  %148 = load i32, i32* %i, align 4
  %149 = add nsw i32 %148, 1
  store i32 %149, i32* %i, align 4
  br label %116
#BasicBlock: 481
  store i32 0, i32* %i, align 4
  br label %152
#BasicBlock: 482
  %154 = load i32, i32* %i, align 4
  %155 = icmp slt i32 %154, 9
  br i1 %155, label %156, label %163
#BasicBlock: 483
  %158 = load i32, i32* %i, align 4
  %159 = sext i32 %158 to i64
  %160 = getelementptr inbounds [9 x double], [9 x double]* %xtXxinv_1D, i64 0, i64 %159
  store double 0.000000e+00, double* %160, align 8
  br label %161
#BasicBlock: 484
  %163 = load i32, i32* %i, align 4
  %164 = add nsw i32 %163, 1
  store i32 %164, i32* %i, align 4
  br label %153
#BasicBlock: 485
  %167 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %xtXx_2D, i32 0, i32 0
  %168 = getelementptr inbounds [9 x double], [9 x double]* %xtXxinv_1D, i32 0, i32 0
  call void @inverse_Reg([3 x double]* %167, double* %168)
  br label %169
#BasicBlock: 486
  store i32 0, i32* %i, align 4
  br label %171
#BasicBlock: 487
  %173 = load i32, i32* %i, align 4
  %174 = icmp slt i32 %173, 9
  br i1 %174, label %175, label %182
#BasicBlock: 488
  %177 = load i32, i32* %i, align 4
  %178 = sext i32 %177 to i64
  %179 = getelementptr inbounds [9 x double], [9 x double]* %invXxt_1D, i64 0, i64 %178
  store double 0.000000e+00, double* %179, align 8
  br label %180
#BasicBlock: 489
  %182 = load i32, i32* %i, align 4
  %183 = add nsw i32 %182, 1
  store i32 %183, i32* %i, align 4
  br label %172
#BasicBlock: 490
  %186 = getelementptr inbounds [9 x double], [9 x double]* %xtXxinv_1D, i32 0, i32 0
  %187 = getelementptr inbounds [9 x double], [9 x double]* %xt1d, i32 0, i32 0
  %188 = getelementptr inbounds [9 x double], [9 x double]* %invXxt_1D, i32 0, i32 0
  call void @mult(double* %186, double* %187, double* %188, i32 3, i32 3, i32 3, i32 3)
  br label %189
#BasicBlock: 491
  store i32 0, i32* %i, align 4
  br label %191
#BasicBlock: 492
  %193 = load i32, i32* %i, align 4
  %194 = icmp slt i32 %193, 3
  br i1 %194, label %195, label %202
#BasicBlock: 493
  %197 = load i32, i32* %i, align 4
  %198 = sext i32 %197 to i64
  %199 = getelementptr inbounds [3 x double], [3 x double]* %B_1D, i64 0, i64 %198
  store double 0.000000e+00, double* %199, align 8
  br label %200
#BasicBlock: 494
  %202 = load i32, i32* %i, align 4
  %203 = add nsw i32 %202, 1
  store i32 %203, i32* %i, align 4
  br label %192
#BasicBlock: 495
  %206 = getelementptr inbounds [9 x double], [9 x double]* %invXxt_1D, i32 0, i32 0
  %207 = load double*, double** %2, align 8
  %208 = getelementptr inbounds [3 x double], [3 x double]* %B_1D, i32 0, i32 0
  call void @mult(double* %206, double* %207, double* %208, i32 3, i32 3, i32 3, i32 1)
  br label %209
#BasicBlock: 496
  store i32 0, i32* %i, align 4
  br label %211
#BasicBlock: 497
  %213 = load i32, i32* %i, align 4
  %214 = icmp slt i32 %213, 3
  br i1 %214, label %215, label %227
#BasicBlock: 498
  %217 = load i32, i32* %i, align 4
  %218 = sext i32 %217 to i64
  %219 = getelementptr inbounds [3 x double], [3 x double]* %B_1D, i64 0, i64 %218
  %220 = load double, double* %219, align 8
  %221 = load i32, i32* %i, align 4
  %222 = sext i32 %221 to i64
  %223 = load double*, double** %3, align 8
  %224 = getelementptr inbounds double, double* %223, i64 %222
  store double %220, double* %224, align 8
  br label %225
#BasicBlock: 499
  %227 = load i32, i32* %i, align 4
  %228 = add nsw i32 %227, 1
  store i32 %228, i32* %i, align 4
  br label %212
#BasicBlock: 500
  ret void
current function name: performLeastSq
#BasicBlock: 501
  %1 = alloca double*, align 8
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca double*, align 8
  %5 = alloca double*, align 8
  %numCh = alloca i32, align 4
  %Y_Cascade_2D = alloca [3 x [3 x double]], align 16
  %Xuse = alloca [3 x [3 x double]], align 16
  %X_2D = alloca [3 x [3 x double]], align 16
  %6 = alloca i8*, align 8
  %Xuse_1D = alloca [9 x double], align 16
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %m = alloca i32, align 4
  %Result_mul = alloca [3 x double], align 16
  %Result_ycascade_X = alloca [3 x double], align 16
  %regression_Ret = alloca [3 x double], align 16
  %k1 = alloca i32, align 4
  %norm_result = alloca double, align 8
  %mse_final = alloca double, align 8
  store double* %ycascade, double** %1, align 8
  store i32 %yCas_R, i32* %2, align 4
  store i32 %yCas_C, i32* %3, align 4
  store double* %X, double** %4, align 8
  store double* %Result, double** %5, align 8
  %7 = load i32, i32* %2, align 4
  store i32 %7, i32* %numCh, align 4
  %8 = load i32, i32* %numCh, align 4
  %9 = zext i32 %8 to i64
  %10 = load i32, i32* %numCh, align 4
  %11 = zext i32 %10 to i64
  %12 = call i8* @llvm.stacksave()
  br label %13
Builtin - llvm.stacksave
#BasicBlock: 502
  store i8* %13, i8** %6, align 8
  %15 = mul nuw i64 %9, %12
  %16 = alloca double, i64 %15, align 16
  %17 = load i32, i32* %numCh, align 4
  %18 = zext i32 %17 to i64
  %19 = alloca double, i64 %18, align 16
  store i32 0, i32* %i, align 4
  br label %20
#BasicBlock: 503
  %22 = load i32, i32* %i, align 4
  %23 = icmp slt i32 %22, 3
  br i1 %23, label %24, label %42
#BasicBlock: 504
  store i32 0, i32* %j, align 4
  br label %26
#BasicBlock: 505
  %28 = load i32, i32* %j, align 4
  %29 = icmp slt i32 %28, 3
  br i1 %29, label %30, label %40
#BasicBlock: 506
  %32 = load i32, i32* %j, align 4
  %33 = sext i32 %32 to i64
  %34 = load i32, i32* %i, align 4
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %Xuse, i64 0, i64 %35
  %37 = getelementptr inbounds [3 x double], [3 x double]* %36, i64 0, i64 %33
  store double 0.000000e+00, double* %37, align 8
  br label %38
#BasicBlock: 507
  %40 = load i32, i32* %j, align 4
  %41 = add nsw i32 %40, 1
  store i32 %41, i32* %j, align 4
  br label %27
#BasicBlock: 508
  br label %44
#BasicBlock: 509
  %46 = load i32, i32* %i, align 4
  %47 = add nsw i32 %46, 1
  store i32 %47, i32* %i, align 4
  br label %21
#BasicBlock: 510
  store i32 0, i32* %m, align 4
  store i32 0, i32* %i, align 4
  br label %50
#BasicBlock: 511
  %52 = load i32, i32* %i, align 4
  %53 = icmp slt i32 %52, 3
  br i1 %53, label %54, label %79
#BasicBlock: 512
  store i32 0, i32* %j, align 4
  br label %56
#BasicBlock: 513
  %58 = load i32, i32* %j, align 4
  %59 = icmp slt i32 %58, 3
  br i1 %59, label %60, label %77
#BasicBlock: 514
  %62 = load i32, i32* %m, align 4
  %63 = sext i32 %62 to i64
  %64 = load double*, double** %4, align 8
  %65 = getelementptr inbounds double, double* %64, i64 %63
  %66 = load double, double* %65, align 8
  %67 = load i32, i32* %j, align 4
  %68 = sext i32 %67 to i64
  %69 = load i32, i32* %i, align 4
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %X_2D, i64 0, i64 %70
  %72 = getelementptr inbounds [3 x double], [3 x double]* %71, i64 0, i64 %68
  store double %66, double* %72, align 8
  %73 = load i32, i32* %m, align 4
  %74 = add nsw i32 %73, 1
  store i32 %74, i32* %m, align 4
  br label %75
#BasicBlock: 515
  %77 = load i32, i32* %j, align 4
  %78 = add nsw i32 %77, 1
  store i32 %78, i32* %j, align 4
  br label %57
#BasicBlock: 516
  br label %81
#BasicBlock: 517
  %83 = load i32, i32* %i, align 4
  %84 = add nsw i32 %83, 1
  store i32 %84, i32* %i, align 4
  br label %51
#BasicBlock: 518
  store i32 0, i32* %i, align 4
  br label %87
#BasicBlock: 519
  %89 = load i32, i32* %i, align 4
  %90 = icmp slt i32 %89, 2
  br i1 %90, label %91, label %117
#BasicBlock: 520
  store i32 0, i32* %j, align 4
  br label %93
#BasicBlock: 521
  %95 = load i32, i32* %j, align 4
  %96 = icmp slt i32 %95, 3
  br i1 %96, label %97, label %115
#BasicBlock: 522
  %99 = load i32, i32* %i, align 4
  %100 = sext i32 %99 to i64
  %101 = load i32, i32* %j, align 4
  %102 = sext i32 %101 to i64
  %103 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %X_2D, i64 0, i64 %102
  %104 = getelementptr inbounds [3 x double], [3 x double]* %103, i64 0, i64 %100
  %105 = load double, double* %104, align 8
  %106 = load i32, i32* %j, align 4
  %107 = sext i32 %106 to i64
  %108 = load i32, i32* %i, align 4
  %109 = add nsw i32 %108, 1
  %110 = sext i32 %109 to i64
  %111 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %Xuse, i64 0, i64 %110
  %112 = getelementptr inbounds [3 x double], [3 x double]* %111, i64 0, i64 %107
  store double %105, double* %112, align 8
  br label %113
#BasicBlock: 523
  %115 = load i32, i32* %j, align 4
  %116 = add nsw i32 %115, 1
  store i32 %116, i32* %j, align 4
  br label %94
#BasicBlock: 524
  br label %119
#BasicBlock: 525
  %121 = load i32, i32* %i, align 4
  %122 = add nsw i32 %121, 1
  store i32 %122, i32* %i, align 4
  br label %88
#BasicBlock: 526
  store i32 0, i32* %i, align 4
  br label %125
#BasicBlock: 527
  %127 = load i32, i32* %i, align 4
  %128 = icmp slt i32 %127, 3
  br i1 %128, label %129, label %154
#BasicBlock: 528
  store i32 0, i32* %j, align 4
  br label %131
#BasicBlock: 529
  %133 = load i32, i32* %j, align 4
  %134 = icmp slt i32 %133, 3
  br i1 %134, label %135, label %152
#BasicBlock: 530
  %137 = load i32, i32* %j, align 4
  %138 = sext i32 %137 to i64
  %139 = load i32, i32* %i, align 4
  %140 = sext i32 %139 to i64
  %141 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %Xuse, i64 0, i64 %140
  %142 = getelementptr inbounds [3 x double], [3 x double]* %141, i64 0, i64 %138
  %143 = load double, double* %142, align 8
  %144 = load i32, i32* %i, align 4
  %145 = mul nsw i32 %144, 3
  %146 = load i32, i32* %j, align 4
  %147 = add nsw i32 %145, %146
  %148 = sext i32 %147 to i64
  %149 = getelementptr inbounds [9 x double], [9 x double]* %Xuse_1D, i64 0, i64 %148
  store double %143, double* %149, align 8
  br label %150
#BasicBlock: 531
  %152 = load i32, i32* %j, align 4
  %153 = add nsw i32 %152, 1
  store i32 %153, i32* %j, align 4
  br label %132
#BasicBlock: 532
  br label %156
#BasicBlock: 533
  %158 = load i32, i32* %i, align 4
  %159 = add nsw i32 %158, 1
  store i32 %159, i32* %i, align 4
  br label %126
#BasicBlock: 534
  store i32 0, i32* %i, align 4
  br label %162
#BasicBlock: 535
  %164 = load i32, i32* %i, align 4
  %165 = load i32, i32* %numCh, align 4
  %166 = icmp slt i32 %164, %165
  br i1 %166, label %167, label %187
#BasicBlock: 536
  store i32 0, i32* %j, align 4
  br label %169
#BasicBlock: 537
  %171 = load i32, i32* %j, align 4
  %172 = load i32, i32* %numCh, align 4
  %173 = icmp slt i32 %171, %172
  br i1 %173, label %174, label %185
#BasicBlock: 538
  %176 = load i32, i32* %j, align 4
  %177 = sext i32 %176 to i64
  %178 = load i32, i32* %i, align 4
  %179 = sext i32 %178 to i64
  %180 = mul nsw i64 %179, %12
  %181 = getelementptr inbounds double, double* %16, i64 %180
  %182 = getelementptr inbounds double, double* %181, i64 %177
  store double 0.000000e+00, double* %182, align 8
  br label %183
#BasicBlock: 539
  %185 = load i32, i32* %j, align 4
  %186 = add nsw i32 %185, 1
  store i32 %186, i32* %j, align 4
  br label %170
#BasicBlock: 540
  br label %189
#BasicBlock: 541
  %191 = load i32, i32* %i, align 4
  %192 = add nsw i32 %191, 1
  store i32 %192, i32* %i, align 4
  br label %163
#BasicBlock: 542
  store i32 0, i32* %i, align 4
  br label %195
#BasicBlock: 543
  %197 = load i32, i32* %i, align 4
  %198 = load i32, i32* %numCh, align 4
  %199 = icmp slt i32 %197, %198
  br i1 %199, label %200, label %207
#BasicBlock: 544
  %202 = load i32, i32* %i, align 4
  %203 = sext i32 %202 to i64
  %204 = getelementptr inbounds double, double* %19, i64 %203
  store double 0.000000e+00, double* %204, align 8
  br label %205
#BasicBlock: 545
  %207 = load i32, i32* %i, align 4
  %208 = add nsw i32 %207, 1
  store i32 %208, i32* %i, align 4
  br label %196
#BasicBlock: 546
  store i32 0, i32* %m, align 4
  store i32 0, i32* %i, align 4
  br label %211
#BasicBlock: 547
  %213 = load i32, i32* %i, align 4
  %214 = icmp slt i32 %213, 3
  br i1 %214, label %215, label %240
#BasicBlock: 548
  store i32 0, i32* %j, align 4
  br label %217
#BasicBlock: 549
  %219 = load i32, i32* %j, align 4
  %220 = icmp slt i32 %219, 3
  br i1 %220, label %221, label %238
#BasicBlock: 550
  %223 = load i32, i32* %m, align 4
  %224 = sext i32 %223 to i64
  %225 = load double*, double** %1, align 8
  %226 = getelementptr inbounds double, double* %225, i64 %224
  %227 = load double, double* %226, align 8
  %228 = load i32, i32* %j, align 4
  %229 = sext i32 %228 to i64
  %230 = load i32, i32* %i, align 4
  %231 = sext i32 %230 to i64
  %232 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %Y_Cascade_2D, i64 0, i64 %231
  %233 = getelementptr inbounds [3 x double], [3 x double]* %232, i64 0, i64 %229
  store double %227, double* %233, align 8
  %234 = load i32, i32* %m, align 4
  %235 = add nsw i32 %234, 1
  store i32 %235, i32* %m, align 4
  br label %236
#BasicBlock: 551
  %238 = load i32, i32* %j, align 4
  %239 = add nsw i32 %238, 1
  store i32 %239, i32* %j, align 4
  br label %218
#BasicBlock: 552
  br label %242
#BasicBlock: 553
  %244 = load i32, i32* %i, align 4
  %245 = add nsw i32 %244, 1
  store i32 %245, i32* %i, align 4
  br label %212
#BasicBlock: 554
  %248 = load i32, i32* %3, align 4
  %249 = zext i32 %248 to i64
  %250 = alloca double, i64 %249, align 16
  %251 = load i32, i32* %numCh, align 4
  %252 = zext i32 %251 to i64
  %253 = alloca double, i64 %252, align 16
  store i32 0, i32* %i, align 4
  br label %254
#BasicBlock: 555
  %256 = load i32, i32* %i, align 4
  %257 = load i32, i32* %numCh, align 4
  %258 = icmp slt i32 %256, %257
  br i1 %258, label %259, label %266
#BasicBlock: 556
  %261 = load i32, i32* %i, align 4
  %262 = sext i32 %261 to i64
  %263 = getelementptr inbounds double, double* %253, i64 %262
  store double 0.000000e+00, double* %263, align 8
  br label %264
#BasicBlock: 557
  %266 = load i32, i32* %i, align 4
  %267 = add nsw i32 %266, 1
  store i32 %267, i32* %i, align 4
  br label %255
#BasicBlock: 558
  store i32 0, i32* %i, align 4
  br label %270
#BasicBlock: 559
  %272 = load i32, i32* %i, align 4
  %273 = icmp slt i32 %272, 3
  br i1 %273, label %274, label %281
#BasicBlock: 560
  %276 = load i32, i32* %i, align 4
  %277 = sext i32 %276 to i64
  %278 = getelementptr inbounds [3 x double], [3 x double]* %Result_mul, i64 0, i64 %277
  store double 0.000000e+00, double* %278, align 8
  br label %279
#BasicBlock: 561
  %281 = load i32, i32* %i, align 4
  %282 = add nsw i32 %281, 1
  store i32 %282, i32* %i, align 4
  br label %271
#BasicBlock: 562
  store i32 0, i32* %j, align 4
  br label %285
#BasicBlock: 563
  %287 = load i32, i32* %j, align 4
  %288 = icmp slt i32 %287, 3
  br i1 %288, label %289, label %296
#BasicBlock: 564
  %291 = load i32, i32* %j, align 4
  %292 = sext i32 %291 to i64
  %293 = getelementptr inbounds [3 x double], [3 x double]* %regression_Ret, i64 0, i64 %292
  store double 0.000000e+00, double* %293, align 8
  br label %294
#BasicBlock: 565
  %296 = load i32, i32* %j, align 4
  %297 = add nsw i32 %296, 1
  store i32 %297, i32* %j, align 4
  br label %286
#BasicBlock: 566
  store i32 0, i32* %i, align 4
  br label %300
#BasicBlock: 567
  %302 = load i32, i32* %i, align 4
  %303 = load i32, i32* %numCh, align 4
  %304 = icmp slt i32 %302, %303
  br i1 %304, label %305, label %437
#BasicBlock: 568
  store i32 0, i32* %j, align 4
  br label %307
#BasicBlock: 569
  %309 = load i32, i32* %j, align 4
  %310 = load i32, i32* %3, align 4
  %311 = icmp slt i32 %309, %310
  br i1 %311, label %312, label %326
#BasicBlock: 570
  %314 = load i32, i32* %j, align 4
  %315 = sext i32 %314 to i64
  %316 = load i32, i32* %i, align 4
  %317 = sext i32 %316 to i64
  %318 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %Y_Cascade_2D, i64 0, i64 %317
  %319 = getelementptr inbounds [3 x double], [3 x double]* %318, i64 0, i64 %315
  %320 = load double, double* %319, align 8
  %321 = load i32, i32* %j, align 4
  %322 = sext i32 %321 to i64
  %323 = getelementptr inbounds double, double* %250, i64 %322
  store double %320, double* %323, align 8
  br label %324
#BasicBlock: 571
  %326 = load i32, i32* %j, align 4
  %327 = add nsw i32 %326, 1
  store i32 %327, i32* %j, align 4
  br label %308
#BasicBlock: 572
  %330 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %Xuse, i32 0, i32 0
  %331 = getelementptr inbounds [3 x double], [3 x double]* %regression_Ret, i32 0, i32 0
  call void @regression([3 x double]* %330, double* %250, double* %331)
  br label %332
#BasicBlock: 573
  store i32 0, i32* %m, align 4
  br label %334
#BasicBlock: 574
  %336 = load i32, i32* %m, align 4
  %337 = load i32, i32* %numCh, align 4
  %338 = icmp slt i32 %336, %337
  br i1 %338, label %339, label %365
#BasicBlock: 575
  %341 = load i32, i32* %m, align 4
  %342 = sext i32 %341 to i64
  %343 = getelementptr inbounds [3 x double], [3 x double]* %regression_Ret, i64 0, i64 %342
  %344 = load double, double* %343, align 8
  %345 = load i32, i32* %m, align 4
  %346 = sext i32 %345 to i64
  %347 = load i32, i32* %i, align 4
  %348 = sext i32 %347 to i64
  %349 = mul nsw i64 %348, %12
  %350 = getelementptr inbounds double, double* %16, i64 %349
  %351 = getelementptr inbounds double, double* %350, i64 %346
  store double %344, double* %351, align 8
  %352 = load i32, i32* %m, align 4
  %353 = sext i32 %352 to i64
  %354 = load i32, i32* %i, align 4
  %355 = sext i32 %354 to i64
  %356 = mul nsw i64 %355, %12
  %357 = getelementptr inbounds double, double* %16, i64 %356
  %358 = getelementptr inbounds double, double* %357, i64 %353
  %359 = load double, double* %358, align 8
  %360 = load i32, i32* %m, align 4
  %361 = sext i32 %360 to i64
  %362 = getelementptr inbounds double, double* %253, i64 %361
  store double %359, double* %362, align 8
  br label %363
#BasicBlock: 576
  %365 = load i32, i32* %m, align 4
  %366 = add nsw i32 %365, 1
  store i32 %366, i32* %m, align 4
  br label %335
#BasicBlock: 577
  store i32 0, i32* %m, align 4
  br label %369
#BasicBlock: 578
  %371 = load i32, i32* %m, align 4
  %372 = icmp slt i32 %371, 3
  br i1 %372, label %373, label %403
#BasicBlock: 579
  store i32 0, i32* %k1, align 4
  br label %375
#BasicBlock: 580
  %377 = load i32, i32* %k1, align 4
  %378 = load i32, i32* %numCh, align 4
  %379 = icmp slt i32 %377, %378
  br i1 %379, label %380, label %401
#BasicBlock: 581
  %382 = load i32, i32* %k1, align 4
  %383 = sext i32 %382 to i64
  %384 = load i32, i32* %m, align 4
  %385 = sext i32 %384 to i64
  %386 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %Xuse, i64 0, i64 %385
  %387 = getelementptr inbounds [3 x double], [3 x double]* %386, i64 0, i64 %383
  %388 = load double, double* %387, align 8
  %389 = load i32, i32* %k1, align 4
  %390 = sext i32 %389 to i64
  %391 = getelementptr inbounds double, double* %253, i64 %390
  %392 = load double, double* %391, align 8
  %393 = fmul double %388, %392
  %394 = load i32, i32* %m, align 4
  %395 = sext i32 %394 to i64
  %396 = getelementptr inbounds [3 x double], [3 x double]* %Result_mul, i64 0, i64 %395
  %397 = load double, double* %396, align 8
  %398 = fadd double %397, %393
  store double %398, double* %396, align 8
  br label %399
#BasicBlock: 582
  %401 = load i32, i32* %k1, align 4
  %402 = add nsw i32 %401, 1
  store i32 %402, i32* %k1, align 4
  br label %376
#BasicBlock: 583
  br label %405
#BasicBlock: 584
  %407 = load i32, i32* %m, align 4
  %408 = add nsw i32 %407, 1
  store i32 %408, i32* %m, align 4
  br label %370
#BasicBlock: 585
  store i32 0, i32* %j, align 4
  br label %411
#BasicBlock: 586
  %413 = load i32, i32* %j, align 4
  %414 = icmp slt i32 %413, 3
  br i1 %414, label %415, label %431
#BasicBlock: 587
  %417 = load i32, i32* %j, align 4
  %418 = sext i32 %417 to i64
  %419 = getelementptr inbounds double, double* %250, i64 %418
  %420 = load double, double* %419, align 8
  %421 = load i32, i32* %j, align 4
  %422 = sext i32 %421 to i64
  %423 = getelementptr inbounds [3 x double], [3 x double]* %Result_mul, i64 0, i64 %422
  %424 = load double, double* %423, align 8
  %425 = fsub double %420, %424
  %426 = load i32, i32* %j, align 4
  %427 = sext i32 %426 to i64
  %428 = getelementptr inbounds [3 x double], [3 x double]* %Result_ycascade_X, i64 0, i64 %427
  store double %425, double* %428, align 8
  br label %429
#BasicBlock: 588
  %431 = load i32, i32* %j, align 4
  %432 = add nsw i32 %431, 1
  store i32 %432, i32* %j, align 4
  br label %412
#BasicBlock: 589
  %435 = getelementptr inbounds [3 x double], [3 x double]* %Result_ycascade_X, i32 0, i32 0
  %436 = call double @norm(double* %435, i32 3)
  br label %437
#BasicBlock: 590
  store double %437, double* %norm_result, align 8
  %439 = load double, double* %norm_result, align 8
  %440 = load double, double* %norm_result, align 8
  %441 = fmul double %439, %440
  %442 = fdiv double %441, 3.000000e+00
  %443 = load i32, i32* %i, align 4
  %444 = sext i32 %443 to i64
  %445 = getelementptr inbounds double, double* %19, i64 %444
  store double %442, double* %445, align 8
  store i32 0, i32* %j, align 4
  br label %446
#BasicBlock: 591
  %448 = load i32, i32* %j, align 4
  %449 = icmp slt i32 %448, 3
  br i1 %449, label %450, label %457
#BasicBlock: 592
  %452 = load i32, i32* %j, align 4
  %453 = sext i32 %452 to i64
  %454 = getelementptr inbounds [3 x double], [3 x double]* %Result_mul, i64 0, i64 %453
  store double 0.000000e+00, double* %454, align 8
  br label %455
#BasicBlock: 593
  %457 = load i32, i32* %j, align 4
  %458 = add nsw i32 %457, 1
  store i32 %458, i32* %j, align 4
  br label %447
#BasicBlock: 594
  br label %461
#BasicBlock: 595
  %463 = load i32, i32* %i, align 4
  %464 = add nsw i32 %463, 1
  store i32 %464, i32* %i, align 4
  br label %301
#BasicBlock: 596
  %467 = load i32, i32* %numCh, align 4
  %468 = call double @mean(double* %19, i32 %467)
  br label %469
#BasicBlock: 597
  store double %469, double* %mse_final, align 8
  %471 = load i32, i32* %numCh, align 4
  %472 = load i32, i32* %numCh, align 4
  %473 = mul nsw i32 %471, %472
  %474 = add nsw i32 %473, 1
  %475 = zext i32 %474 to i64
  %476 = alloca double, i64 %475, align 16
  store i32 0, i32* %i, align 4
  br label %477
#BasicBlock: 598
  %479 = load i32, i32* %i, align 4
  %480 = load i32, i32* %numCh, align 4
  %481 = load i32, i32* %numCh, align 4
  %482 = mul nsw i32 %480, %481
  %483 = add nsw i32 %482, 1
  %484 = icmp slt i32 %479, %483
  br i1 %484, label %485, label %492
#BasicBlock: 599
  %487 = load i32, i32* %i, align 4
  %488 = sext i32 %487 to i64
  %489 = getelementptr inbounds double, double* %476, i64 %488
  store double 0.000000e+00, double* %489, align 8
  br label %490
#BasicBlock: 600
  %492 = load i32, i32* %i, align 4
  %493 = add nsw i32 %492, 1
  store i32 %493, i32* %i, align 4
  br label %478
#BasicBlock: 601
  store i32 0, i32* %i, align 4
  br label %496
#BasicBlock: 602
  %498 = load i32, i32* %i, align 4
  %499 = load i32, i32* %numCh, align 4
  %500 = icmp slt i32 %498, %499
  br i1 %500, label %501, label %529
#BasicBlock: 603
  store i32 0, i32* %j, align 4
  br label %503
#BasicBlock: 604
  %505 = load i32, i32* %j, align 4
  %506 = load i32, i32* %numCh, align 4
  %507 = icmp slt i32 %505, %506
  br i1 %507, label %508, label %527
#BasicBlock: 605
  %510 = load i32, i32* %j, align 4
  %511 = sext i32 %510 to i64
  %512 = load i32, i32* %i, align 4
  %513 = sext i32 %512 to i64
  %514 = mul nsw i64 %513, %12
  %515 = getelementptr inbounds double, double* %16, i64 %514
  %516 = getelementptr inbounds double, double* %515, i64 %511
  %517 = load double, double* %516, align 8
  %518 = load i32, i32* %i, align 4
  %519 = load i32, i32* %numCh, align 4
  %520 = mul nsw i32 %518, %519
  %521 = load i32, i32* %j, align 4
  %522 = add nsw i32 %520, %521
  %523 = sext i32 %522 to i64
  %524 = getelementptr inbounds double, double* %476, i64 %523
  store double %517, double* %524, align 8
  br label %525
#BasicBlock: 606
  %527 = load i32, i32* %j, align 4
  %528 = add nsw i32 %527, 1
  store i32 %528, i32* %j, align 4
  br label %504
#BasicBlock: 607
  br label %531
#BasicBlock: 608
  %533 = load i32, i32* %i, align 4
  %534 = add nsw i32 %533, 1
  store i32 %534, i32* %i, align 4
  br label %497
#BasicBlock: 609
  %537 = load double, double* %mse_final, align 8
  %538 = load i32, i32* %numCh, align 4
  %539 = load i32, i32* %numCh, align 4
  %540 = mul nsw i32 %538, %539
  %541 = sext i32 %540 to i64
  %542 = getelementptr inbounds double, double* %476, i64 %541
  store double %537, double* %542, align 8
  store i32 0, i32* %i, align 4
  br label %543
#BasicBlock: 610
  %545 = load i32, i32* %i, align 4
  %546 = load i32, i32* %numCh, align 4
  %547 = load i32, i32* %numCh, align 4
  %548 = mul nsw i32 %546, %547
  %549 = add nsw i32 %548, 1
  %550 = icmp slt i32 %545, %549
  br i1 %550, label %551, label %563
#BasicBlock: 611
  %553 = load i32, i32* %i, align 4
  %554 = sext i32 %553 to i64
  %555 = getelementptr inbounds double, double* %476, i64 %554
  %556 = load double, double* %555, align 8
  %557 = load i32, i32* %i, align 4
  %558 = sext i32 %557 to i64
  %559 = load double*, double** %5, align 8
  %560 = getelementptr inbounds double, double* %559, i64 %558
  store double %556, double* %560, align 8
  br label %561
#BasicBlock: 612
  %563 = load i32, i32* %i, align 4
  %564 = add nsw i32 %563, 1
  store i32 %564, i32* %i, align 4
  br label %544
#BasicBlock: 613
  %567 = load i8*, i8** %6, align 8
  call void @llvm.stackrestore(i8* %567)
  ret void
Builtin - llvm.stackrestore
current function name: matrix_new
#BasicBlock: 614
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %x = alloca %struct.mat_t*, align 8
  %i = alloca i32, align 4
  store i32 %m, i32* %1, align 4
  store i32 %n, i32* %2, align 4
  %3 = call noalias i8* @malloc(i64 16) #1
  br label %4
#BasicBlock: 615
  %6 = bitcast i8* %4 to %struct.mat_t*
  store %struct.mat_t* %6, %struct.mat_t** %x, align 8
  %7 = load i32, i32* %1, align 4
  %8 = sext i32 %7 to i64
  %9 = mul i64 8, %8
  %10 = call noalias i8* @malloc(i64 %9) #1
  br label %11
#BasicBlock: 616
  %13 = bitcast i8* %11 to double**
  %14 = load %struct.mat_t*, %struct.mat_t** %x, align 8
  %15 = getelementptr inbounds %struct.mat_t, %struct.mat_t* %14, i32 0, i32 2
  store double** %13, double*** %15, align 8
  %16 = load i32, i32* %1, align 4
  %17 = load i32, i32* %2, align 4
  %18 = mul nsw i32 %16, %17
  %19 = sext i32 %18 to i64
  %20 = call noalias i8* @calloc(i64 8, i64 %19) #1
  br label %21
#BasicBlock: 617
  %23 = bitcast i8* %21 to double*
  %24 = load %struct.mat_t*, %struct.mat_t** %x, align 8
  %25 = getelementptr inbounds %struct.mat_t, %struct.mat_t* %24, i32 0, i32 2
  %26 = load double**, double*** %25, align 8
  %27 = getelementptr inbounds double*, double** %26, i64 0
  store double* %23, double** %27, align 8
  store i32 0, i32* %i, align 4
  br label %28
#BasicBlock: 618
  %30 = load i32, i32* %i, align 4
  %31 = load i32, i32* %1, align 4
  %32 = icmp slt i32 %30, %31
  br i1 %32, label %33, label %53
#BasicBlock: 619
  %35 = load %struct.mat_t*, %struct.mat_t** %x, align 8
  %36 = getelementptr inbounds %struct.mat_t, %struct.mat_t* %35, i32 0, i32 2
  %37 = load double**, double*** %36, align 8
  %38 = getelementptr inbounds double*, double** %37, i64 0
  %39 = load double*, double** %38, align 8
  %40 = load i32, i32* %2, align 4
  %41 = load i32, i32* %i, align 4
  %42 = mul nsw i32 %40, %41
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds double, double* %39, i64 %43
  %45 = load i32, i32* %i, align 4
  %46 = sext i32 %45 to i64
  %47 = load %struct.mat_t*, %struct.mat_t** %x, align 8
  %48 = getelementptr inbounds %struct.mat_t, %struct.mat_t* %47, i32 0, i32 2
  %49 = load double**, double*** %48, align 8
  %50 = getelementptr inbounds double*, double** %49, i64 %46
  store double* %44, double** %50, align 8
  br label %51
#BasicBlock: 620
  %53 = load i32, i32* %i, align 4
  %54 = add nsw i32 %53, 1
  store i32 %54, i32* %i, align 4
  br label %29
#BasicBlock: 621
  %57 = load i32, i32* %1, align 4
  %58 = load %struct.mat_t*, %struct.mat_t** %x, align 8
  %59 = getelementptr inbounds %struct.mat_t, %struct.mat_t* %58, i32 0, i32 0
  store i32 %57, i32* %59, align 8
  %60 = load i32, i32* %2, align 4
  %61 = load %struct.mat_t*, %struct.mat_t** %x, align 8
  %62 = getelementptr inbounds %struct.mat_t, %struct.mat_t* %61, i32 0, i32 1
  store i32 %60, i32* %62, align 4
  %63 = load %struct.mat_t*, %struct.mat_t** %x, align 8
  ret %struct.mat_t* %63
current function name: malloc
current function name: matrix_delete
#BasicBlock: 622
  %1 = alloca %struct.mat_t*, align 8
  store %struct.mat_t* %m, %struct.mat_t** %1, align 8
  %2 = load %struct.mat_t*, %struct.mat_t** %1, align 8
  %3 = getelementptr inbounds %struct.mat_t, %struct.mat_t* %2, i32 0, i32 2
  %4 = load double**, double*** %3, align 8
  %5 = getelementptr inbounds double*, double** %4, i64 0
  %6 = load double*, double** %5, align 8
  %7 = bitcast double* %6 to i8*
  call void @free(i8* %7) #1
  br label %8
#BasicBlock: 623
  %10 = load %struct.mat_t*, %struct.mat_t** %1, align 8
  %11 = getelementptr inbounds %struct.mat_t, %struct.mat_t* %10, i32 0, i32 2
  %12 = load double**, double*** %11, align 8
  %13 = bitcast double** %12 to i8*
  call void @free(i8* %13) #1
  br label %14
#BasicBlock: 624
  %16 = load %struct.mat_t*, %struct.mat_t** %1, align 8
  %17 = bitcast %struct.mat_t* %16 to i8*
  call void @free(i8* %17) #1
  ret void
current function name: free
current function name: matrix_transpose
#BasicBlock: 625
  %1 = alloca %struct.mat_t*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %t = alloca double, align 8
  store %struct.mat_t* %m, %struct.mat_t** %1, align 8
  store i32 0, i32* %i, align 4
  br label %2
#BasicBlock: 626
  %4 = load i32, i32* %i, align 4
  %5 = load %struct.mat_t*, %struct.mat_t** %1, align 8
  %6 = getelementptr inbounds %struct.mat_t, %struct.mat_t* %5, i32 0, i32 0
  %7 = load i32, i32* %6, align 8
  %8 = icmp slt i32 %4, %7
  br i1 %8, label %9, label %65
#BasicBlock: 627
  store i32 0, i32* %j, align 4
  br label %11
#BasicBlock: 628
  %13 = load i32, i32* %j, align 4
  %14 = load i32, i32* %i, align 4
  %15 = icmp slt i32 %13, %14
  br i1 %15, label %16, label %63
#BasicBlock: 629
  %18 = load i32, i32* %j, align 4
  %19 = sext i32 %18 to i64
  %20 = load i32, i32* %i, align 4
  %21 = sext i32 %20 to i64
  %22 = load %struct.mat_t*, %struct.mat_t** %1, align 8
  %23 = getelementptr inbounds %struct.mat_t, %struct.mat_t* %22, i32 0, i32 2
  %24 = load double**, double*** %23, align 8
  %25 = getelementptr inbounds double*, double** %24, i64 %21
  %26 = load double*, double** %25, align 8
  %27 = getelementptr inbounds double, double* %26, i64 %19
  %28 = load double, double* %27, align 8
  store double %28, double* %t, align 8
  %29 = load i32, i32* %i, align 4
  %30 = sext i32 %29 to i64
  %31 = load i32, i32* %j, align 4
  %32 = sext i32 %31 to i64
  %33 = load %struct.mat_t*, %struct.mat_t** %1, align 8
  %34 = getelementptr inbounds %struct.mat_t, %struct.mat_t* %33, i32 0, i32 2
  %35 = load double**, double*** %34, align 8
  %36 = getelementptr inbounds double*, double** %35, i64 %32
  %37 = load double*, double** %36, align 8
  %38 = getelementptr inbounds double, double* %37, i64 %30
  %39 = load double, double* %38, align 8
  %40 = load i32, i32* %j, align 4
  %41 = sext i32 %40 to i64
  %42 = load i32, i32* %i, align 4
  %43 = sext i32 %42 to i64
  %44 = load %struct.mat_t*, %struct.mat_t** %1, align 8
  %45 = getelementptr inbounds %struct.mat_t, %struct.mat_t* %44, i32 0, i32 2
  %46 = load double**, double*** %45, align 8
  %47 = getelementptr inbounds double*, double** %46, i64 %43
  %48 = load double*, double** %47, align 8
  %49 = getelementptr inbounds double, double* %48, i64 %41
  store double %39, double* %49, align 8
  %50 = load double, double* %t, align 8
  %51 = load i32, i32* %i, align 4
  %52 = sext i32 %51 to i64
  %53 = load i32, i32* %j, align 4
  %54 = sext i32 %53 to i64
  %55 = load %struct.mat_t*, %struct.mat_t** %1, align 8
  %56 = getelementptr inbounds %struct.mat_t, %struct.mat_t* %55, i32 0, i32 2
  %57 = load double**, double*** %56, align 8
  %58 = getelementptr inbounds double*, double** %57, i64 %54
  %59 = load double*, double** %58, align 8
  %60 = getelementptr inbounds double, double* %59, i64 %52
  store double %50, double* %60, align 8
  br label %61
#BasicBlock: 630
  %63 = load i32, i32* %j, align 4
  %64 = add nsw i32 %63, 1
  store i32 %64, i32* %j, align 4
  br label %12
#BasicBlock: 631
  br label %67
#BasicBlock: 632
  %69 = load i32, i32* %i, align 4
  %70 = add nsw i32 %69, 1
  store i32 %70, i32* %i, align 4
  br label %3
#BasicBlock: 633
  ret void
current function name: matrix_copy
#BasicBlock: 634
  %1 = alloca i32, align 4
  %2 = alloca [3 x double]*, align 8
  %3 = alloca i32, align 4
  %x = alloca %struct.mat_t*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i32 %n, i32* %1, align 4
  store [3 x double]* %a, [3 x double]** %2, align 8
  store i32 %m, i32* %3, align 4
  %4 = load i32, i32* %3, align 4
  %5 = load i32, i32* %1, align 4
  %6 = call %struct.mat_t* @matrix_new(i32 %4, i32 %5)
  br label %7
#BasicBlock: 635
  store %struct.mat_t* %7, %struct.mat_t** %x, align 8
  store i32 0, i32* %i, align 4
  br label %9
#BasicBlock: 636
  %11 = load i32, i32* %i, align 4
  %12 = load i32, i32* %3, align 4
  %13 = icmp slt i32 %11, %12
  br i1 %13, label %14, label %45
#BasicBlock: 637
  store i32 0, i32* %j, align 4
  br label %16
#BasicBlock: 638
  %18 = load i32, i32* %j, align 4
  %19 = load i32, i32* %1, align 4
  %20 = icmp slt i32 %18, %19
  br i1 %20, label %21, label %43
#BasicBlock: 639
  %23 = load i32, i32* %j, align 4
  %24 = sext i32 %23 to i64
  %25 = load i32, i32* %i, align 4
  %26 = sext i32 %25 to i64
  %27 = load [3 x double]*, [3 x double]** %2, align 8
  %28 = getelementptr inbounds [3 x double], [3 x double]* %27, i64 %26
  %29 = getelementptr inbounds [3 x double], [3 x double]* %28, i64 0, i64 %24
  %30 = load double, double* %29, align 8
  %31 = load i32, i32* %j, align 4
  %32 = sext i32 %31 to i64
  %33 = load i32, i32* %i, align 4
  %34 = sext i32 %33 to i64
  %35 = load %struct.mat_t*, %struct.mat_t** %x, align 8
  %36 = getelementptr inbounds %struct.mat_t, %struct.mat_t* %35, i32 0, i32 2
  %37 = load double**, double*** %36, align 8
  %38 = getelementptr inbounds double*, double** %37, i64 %34
  %39 = load double*, double** %38, align 8
  %40 = getelementptr inbounds double, double* %39, i64 %32
  store double %30, double* %40, align 8
  br label %41
#BasicBlock: 640
  %43 = load i32, i32* %j, align 4
  %44 = add nsw i32 %43, 1
  store i32 %44, i32* %j, align 4
  br label %17
#BasicBlock: 641
  br label %47
#BasicBlock: 642
  %49 = load i32, i32* %i, align 4
  %50 = add nsw i32 %49, 1
  store i32 %50, i32* %i, align 4
  br label %10
#BasicBlock: 643
  %53 = load %struct.mat_t*, %struct.mat_t** %x, align 8
  ret %struct.mat_t* %53
current function name: matrix_mul
#BasicBlock: 644
  %1 = alloca %struct.mat_t*, align 8
  %2 = alloca %struct.mat_t*, align 8
  %3 = alloca %struct.mat_t*, align 8
  %r = alloca %struct.mat_t*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  store %struct.mat_t* %x, %struct.mat_t** %2, align 8
  store %struct.mat_t* %y, %struct.mat_t** %3, align 8
  %4 = load %struct.mat_t*, %struct.mat_t** %2, align 8
  %5 = getelementptr inbounds %struct.mat_t, %struct.mat_t* %4, i32 0, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = load %struct.mat_t*, %struct.mat_t** %3, align 8
  %8 = getelementptr inbounds %struct.mat_t, %struct.mat_t* %7, i32 0, i32 0
  %9 = load i32, i32* %8, align 8
  %10 = icmp ne i32 %6, %9
  br i1 %10, label %11, label %12
#BasicBlock: 645
  store %struct.mat_t* null, %struct.mat_t** %1, align 8
  br label %91
#BasicBlock: 646
  %15 = load %struct.mat_t*, %struct.mat_t** %2, align 8
  %16 = getelementptr inbounds %struct.mat_t, %struct.mat_t* %15, i32 0, i32 0
  %17 = load i32, i32* %16, align 8
  %18 = load %struct.mat_t*, %struct.mat_t** %3, align 8
  %19 = getelementptr inbounds %struct.mat_t, %struct.mat_t* %18, i32 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = call %struct.mat_t* @matrix_new(i32 %17, i32 %20)
  br label %22
#BasicBlock: 647
  store %struct.mat_t* %22, %struct.mat_t** %r, align 8
  store i32 0, i32* %i, align 4
  br label %24
#BasicBlock: 648
  %26 = load i32, i32* %i, align 4
  %27 = load %struct.mat_t*, %struct.mat_t** %2, align 8
  %28 = getelementptr inbounds %struct.mat_t, %struct.mat_t* %27, i32 0, i32 0
  %29 = load i32, i32* %28, align 8
  %30 = icmp slt i32 %26, %29
  br i1 %30, label %31, label %92
#BasicBlock: 649
  store i32 0, i32* %j, align 4
  br label %33
#BasicBlock: 650
  %35 = load i32, i32* %j, align 4
  %36 = load %struct.mat_t*, %struct.mat_t** %3, align 8
  %37 = getelementptr inbounds %struct.mat_t, %struct.mat_t* %36, i32 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = icmp slt i32 %35, %38
  br i1 %39, label %40, label %90
#BasicBlock: 651
  store i32 0, i32* %k, align 4
  br label %42
#BasicBlock: 652
  %44 = load i32, i32* %k, align 4
  %45 = load %struct.mat_t*, %struct.mat_t** %2, align 8
  %46 = getelementptr inbounds %struct.mat_t, %struct.mat_t* %45, i32 0, i32 1
  %47 = load i32, i32* %46, align 4
  %48 = icmp slt i32 %44, %47
  br i1 %48, label %49, label %88
#BasicBlock: 653
  %51 = load i32, i32* %k, align 4
  %52 = sext i32 %51 to i64
  %53 = load i32, i32* %i, align 4
  %54 = sext i32 %53 to i64
  %55 = load %struct.mat_t*, %struct.mat_t** %2, align 8
  %56 = getelementptr inbounds %struct.mat_t, %struct.mat_t* %55, i32 0, i32 2
  %57 = load double**, double*** %56, align 8
  %58 = getelementptr inbounds double*, double** %57, i64 %54
  %59 = load double*, double** %58, align 8
  %60 = getelementptr inbounds double, double* %59, i64 %52
  %61 = load double, double* %60, align 8
  %62 = load i32, i32* %j, align 4
  %63 = sext i32 %62 to i64
  %64 = load i32, i32* %k, align 4
  %65 = sext i32 %64 to i64
  %66 = load %struct.mat_t*, %struct.mat_t** %3, align 8
  %67 = getelementptr inbounds %struct.mat_t, %struct.mat_t* %66, i32 0, i32 2
  %68 = load double**, double*** %67, align 8
  %69 = getelementptr inbounds double*, double** %68, i64 %65
  %70 = load double*, double** %69, align 8
  %71 = getelementptr inbounds double, double* %70, i64 %63
  %72 = load double, double* %71, align 8
  %73 = fmul double %61, %72
  %74 = load i32, i32* %j, align 4
  %75 = sext i32 %74 to i64
  %76 = load i32, i32* %i, align 4
  %77 = sext i32 %76 to i64
  %78 = load %struct.mat_t*, %struct.mat_t** %r, align 8
  %79 = getelementptr inbounds %struct.mat_t, %struct.mat_t* %78, i32 0, i32 2
  %80 = load double**, double*** %79, align 8
  %81 = getelementptr inbounds double*, double** %80, i64 %77
  %82 = load double*, double** %81, align 8
  %83 = getelementptr inbounds double, double* %82, i64 %75
  %84 = load double, double* %83, align 8
  %85 = fadd double %84, %73
  store double %85, double* %83, align 8
  br label %86
#BasicBlock: 654
  %88 = load i32, i32* %k, align 4
  %89 = add nsw i32 %88, 1
  store i32 %89, i32* %k, align 4
  br label %43
#BasicBlock: 655
  br label %92
#BasicBlock: 656
  %94 = load i32, i32* %j, align 4
  %95 = add nsw i32 %94, 1
  store i32 %95, i32* %j, align 4
  br label %34
#BasicBlock: 657
  br label %98
#BasicBlock: 658
  %100 = load i32, i32* %i, align 4
  %101 = add nsw i32 %100, 1
  store i32 %101, i32* %i, align 4
  br label %25
#BasicBlock: 659
  %104 = load %struct.mat_t*, %struct.mat_t** %r, align 8
  store %struct.mat_t* %104, %struct.mat_t** %1, align 8
  br label %105
#BasicBlock: 660
  %107 = load %struct.mat_t*, %struct.mat_t** %1, align 8
  ret %struct.mat_t* %107
current function name: matrix_minor
#BasicBlock: 661
  %1 = alloca %struct.mat_t*, align 8
  %2 = alloca i32, align 4
  %m = alloca %struct.mat_t*, align 8
  %i = alloca i32, align 4
  %i1 = alloca i32, align 4
  %j = alloca i32, align 4
  store %struct.mat_t* %x, %struct.mat_t** %1, align 8
  store i32 %d, i32* %2, align 4
  %3 = load %struct.mat_t*, %struct.mat_t** %1, align 8
  %4 = getelementptr inbounds %struct.mat_t, %struct.mat_t* %3, i32 0, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = load %struct.mat_t*, %struct.mat_t** %1, align 8
  %7 = getelementptr inbounds %struct.mat_t, %struct.mat_t* %6, i32 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = call %struct.mat_t* @matrix_new(i32 %5, i32 %8)
  br label %10
#BasicBlock: 662
  store %struct.mat_t* %10, %struct.mat_t** %m, align 8
  store i32 0, i32* %i, align 4
  br label %12
#BasicBlock: 663
  %14 = load i32, i32* %i, align 4
  %15 = load i32, i32* %2, align 4
  %16 = icmp slt i32 %14, %15
  br i1 %16, label %17, label %31
#BasicBlock: 664
  %19 = load i32, i32* %i, align 4
  %20 = sext i32 %19 to i64
  %21 = load i32, i32* %i, align 4
  %22 = sext i32 %21 to i64
  %23 = load %struct.mat_t*, %struct.mat_t** %m, align 8
  %24 = getelementptr inbounds %struct.mat_t, %struct.mat_t* %23, i32 0, i32 2
  %25 = load double**, double*** %24, align 8
  %26 = getelementptr inbounds double*, double** %25, i64 %22
  %27 = load double*, double** %26, align 8
  %28 = getelementptr inbounds double, double* %27, i64 %20
  store double 1.000000e+00, double* %28, align 8
  br label %29
#BasicBlock: 665
  %31 = load i32, i32* %i, align 4
  %32 = add nsw i32 %31, 1
  store i32 %32, i32* %i, align 4
  br label %13
#BasicBlock: 666
  %35 = load i32, i32* %2, align 4
  store i32 %35, i32* %i1, align 4
  br label %36
#BasicBlock: 667
  %38 = load i32, i32* %i1, align 4
  %39 = load %struct.mat_t*, %struct.mat_t** %1, align 8
  %40 = getelementptr inbounds %struct.mat_t, %struct.mat_t* %39, i32 0, i32 0
  %41 = load i32, i32* %40, align 8
  %42 = icmp slt i32 %38, %41
  br i1 %42, label %43, label %80
#BasicBlock: 668
  %45 = load i32, i32* %2, align 4
  store i32 %45, i32* %j, align 4
  br label %46
#BasicBlock: 669
  %48 = load i32, i32* %j, align 4
  %49 = load %struct.mat_t*, %struct.mat_t** %1, align 8
  %50 = getelementptr inbounds %struct.mat_t, %struct.mat_t* %49, i32 0, i32 1
  %51 = load i32, i32* %50, align 4
  %52 = icmp slt i32 %48, %51
  br i1 %52, label %53, label %78
#BasicBlock: 670
  %55 = load i32, i32* %j, align 4
  %56 = sext i32 %55 to i64
  %57 = load i32, i32* %i1, align 4
  %58 = sext i32 %57 to i64
  %59 = load %struct.mat_t*, %struct.mat_t** %1, align 8
  %60 = getelementptr inbounds %struct.mat_t, %struct.mat_t* %59, i32 0, i32 2
  %61 = load double**, double*** %60, align 8
  %62 = getelementptr inbounds double*, double** %61, i64 %58
  %63 = load double*, double** %62, align 8
  %64 = getelementptr inbounds double, double* %63, i64 %56
  %65 = load double, double* %64, align 8
  %66 = load i32, i32* %j, align 4
  %67 = sext i32 %66 to i64
  %68 = load i32, i32* %i1, align 4
  %69 = sext i32 %68 to i64
  %70 = load %struct.mat_t*, %struct.mat_t** %m, align 8
  %71 = getelementptr inbounds %struct.mat_t, %struct.mat_t* %70, i32 0, i32 2
  %72 = load double**, double*** %71, align 8
  %73 = getelementptr inbounds double*, double** %72, i64 %69
  %74 = load double*, double** %73, align 8
  %75 = getelementptr inbounds double, double* %74, i64 %67
  store double %65, double* %75, align 8
  br label %76
#BasicBlock: 671
  %78 = load i32, i32* %j, align 4
  %79 = add nsw i32 %78, 1
  store i32 %79, i32* %j, align 4
  br label %47
#BasicBlock: 672
  br label %82
#BasicBlock: 673
  %84 = load i32, i32* %i1, align 4
  %85 = add nsw i32 %84, 1
  store i32 %85, i32* %i1, align 4
  br label %37
#BasicBlock: 674
  %88 = load %struct.mat_t*, %struct.mat_t** %m, align 8
  ret %struct.mat_t* %88
current function name: vmadd
#BasicBlock: 675
  %1 = alloca double*, align 8
  %2 = alloca double*, align 8
  %3 = alloca double, align 8
  %4 = alloca double*, align 8
  %5 = alloca i32, align 4
  %i = alloca i32, align 4
  store double* %a, double** %1, align 8
  store double* %b, double** %2, align 8
  store double %s, double* %3, align 8
  store double* %c, double** %4, align 8
  store i32 %n, i32* %5, align 4
  store i32 0, i32* %i, align 4
  br label %6
#BasicBlock: 676
  %8 = load i32, i32* %i, align 4
  %9 = load i32, i32* %5, align 4
  %10 = icmp slt i32 %8, %9
  br i1 %10, label %11, label %32
#BasicBlock: 677
  %13 = load i32, i32* %i, align 4
  %14 = sext i32 %13 to i64
  %15 = load double*, double** %1, align 8
  %16 = getelementptr inbounds double, double* %15, i64 %14
  %17 = load double, double* %16, align 8
  %18 = load double, double* %3, align 8
  %19 = load i32, i32* %i, align 4
  %20 = sext i32 %19 to i64
  %21 = load double*, double** %2, align 8
  %22 = getelementptr inbounds double, double* %21, i64 %20
  %23 = load double, double* %22, align 8
  %24 = fmul double %18, %23
  %25 = fadd double %17, %24
  %26 = load i32, i32* %i, align 4
  %27 = sext i32 %26 to i64
  %28 = load double*, double** %4, align 8
  %29 = getelementptr inbounds double, double* %28, i64 %27
  store double %25, double* %29, align 8
  br label %30
#BasicBlock: 678
  %32 = load i32, i32* %i, align 4
  %33 = add nsw i32 %32, 1
  store i32 %33, i32* %i, align 4
  br label %7
#BasicBlock: 679
  %36 = load double*, double** %4, align 8
  ret double* %36
current function name: vmul
#BasicBlock: 680
  %1 = alloca double*, align 8
  %2 = alloca i32, align 4
  %x = alloca %struct.mat_t*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %i1 = alloca i32, align 4
  store double* %v, double** %1, align 8
  store i32 %n, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = load i32, i32* %2, align 4
  %5 = call %struct.mat_t* @matrix_new(i32 %3, i32 %4)
  br label %6
#BasicBlock: 681
  store %struct.mat_t* %6, %struct.mat_t** %x, align 8
  store i32 0, i32* %i, align 4
  br label %8
#BasicBlock: 682
  %10 = load i32, i32* %i, align 4
  %11 = load i32, i32* %2, align 4
  %12 = icmp slt i32 %10, %11
  br i1 %12, label %13, label %48
#BasicBlock: 683
  store i32 0, i32* %j, align 4
  br label %15
#BasicBlock: 684
  %17 = load i32, i32* %j, align 4
  %18 = load i32, i32* %2, align 4
  %19 = icmp slt i32 %17, %18
  br i1 %19, label %20, label %46
#BasicBlock: 685
  %22 = load i32, i32* %i, align 4
  %23 = sext i32 %22 to i64
  %24 = load double*, double** %1, align 8
  %25 = getelementptr inbounds double, double* %24, i64 %23
  %26 = load double, double* %25, align 8
  %27 = fmul double -2.000000e+00, %26
  %28 = load i32, i32* %j, align 4
  %29 = sext i32 %28 to i64
  %30 = load double*, double** %1, align 8
  %31 = getelementptr inbounds double, double* %30, i64 %29
  %32 = load double, double* %31, align 8
  %33 = fmul double %27, %32
  %34 = load i32, i32* %j, align 4
  %35 = sext i32 %34 to i64
  %36 = load i32, i32* %i, align 4
  %37 = sext i32 %36 to i64
  %38 = load %struct.mat_t*, %struct.mat_t** %x, align 8
  %39 = getelementptr inbounds %struct.mat_t, %struct.mat_t* %38, i32 0, i32 2
  %40 = load double**, double*** %39, align 8
  %41 = getelementptr inbounds double*, double** %40, i64 %37
  %42 = load double*, double** %41, align 8
  %43 = getelementptr inbounds double, double* %42, i64 %35
  store double %33, double* %43, align 8
  br label %44
#BasicBlock: 686
  %46 = load i32, i32* %j, align 4
  %47 = add nsw i32 %46, 1
  store i32 %47, i32* %j, align 4
  br label %16
#BasicBlock: 687
  br label %50
#BasicBlock: 688
  %52 = load i32, i32* %i, align 4
  %53 = add nsw i32 %52, 1
  store i32 %53, i32* %i, align 4
  br label %9
#BasicBlock: 689
  store i32 0, i32* %i1, align 4
  br label %56
#BasicBlock: 690
  %58 = load i32, i32* %i1, align 4
  %59 = load i32, i32* %2, align 4
  %60 = icmp slt i32 %58, %59
  br i1 %60, label %61, label %77
#BasicBlock: 691
  %63 = load i32, i32* %i1, align 4
  %64 = sext i32 %63 to i64
  %65 = load i32, i32* %i1, align 4
  %66 = sext i32 %65 to i64
  %67 = load %struct.mat_t*, %struct.mat_t** %x, align 8
  %68 = getelementptr inbounds %struct.mat_t, %struct.mat_t* %67, i32 0, i32 2
  %69 = load double**, double*** %68, align 8
  %70 = getelementptr inbounds double*, double** %69, i64 %66
  %71 = load double*, double** %70, align 8
  %72 = getelementptr inbounds double, double* %71, i64 %64
  %73 = load double, double* %72, align 8
  %74 = fadd double %73, 1.000000e+00
  store double %74, double* %72, align 8
  br label %75
#BasicBlock: 692
  %77 = load i32, i32* %i1, align 4
  %78 = add nsw i32 %77, 1
  store i32 %78, i32* %i1, align 4
  br label %57
#BasicBlock: 693
  %81 = load %struct.mat_t*, %struct.mat_t** %x, align 8
  ret %struct.mat_t* %81
current function name: vnorm
#BasicBlock: 694
  %1 = alloca double*, align 8
  %2 = alloca i32, align 4
  %sum = alloca double, align 8
  %i = alloca i32, align 4
  store double* %x, double** %1, align 8
  store i32 %n, i32* %2, align 4
  store double 0.000000e+00, double* %sum, align 8
  store i32 0, i32* %i, align 4
  br label %3
#BasicBlock: 695
  %5 = load i32, i32* %i, align 4
  %6 = load i32, i32* %2, align 4
  %7 = icmp slt i32 %5, %6
  br i1 %7, label %8, label %25
#BasicBlock: 696
  %10 = load i32, i32* %i, align 4
  %11 = sext i32 %10 to i64
  %12 = load double*, double** %1, align 8
  %13 = getelementptr inbounds double, double* %12, i64 %11
  %14 = load double, double* %13, align 8
  %15 = load i32, i32* %i, align 4
  %16 = sext i32 %15 to i64
  %17 = load double*, double** %1, align 8
  %18 = getelementptr inbounds double, double* %17, i64 %16
  %19 = load double, double* %18, align 8
  %20 = fmul double %14, %19
  %21 = load double, double* %sum, align 8
  %22 = fadd double %21, %20
  store double %22, double* %sum, align 8
  br label %23
#BasicBlock: 697
  %25 = load i32, i32* %i, align 4
  %26 = add nsw i32 %25, 1
  store i32 %26, i32* %i, align 4
  br label %4
#BasicBlock: 698
  %29 = load double, double* %sum, align 8
  %30 = call double @sqroot(double %29)
  ret double %30
current function name: vdiv
#BasicBlock: 699
  %1 = alloca double*, align 8
  %2 = alloca double, align 8
  %3 = alloca double*, align 8
  %4 = alloca i32, align 4
  %i = alloca i32, align 4
  store double* %x, double** %1, align 8
  store double %d, double* %2, align 8
  store double* %y, double** %3, align 8
  store i32 %n, i32* %4, align 4
  store i32 0, i32* %i, align 4
  br label %5
#BasicBlock: 700
  %7 = load i32, i32* %i, align 4
  %8 = load i32, i32* %4, align 4
  %9 = icmp slt i32 %7, %8
  br i1 %9, label %10, label %25
#BasicBlock: 701
  %12 = load i32, i32* %i, align 4
  %13 = sext i32 %12 to i64
  %14 = load double*, double** %1, align 8
  %15 = getelementptr inbounds double, double* %14, i64 %13
  %16 = load double, double* %15, align 8
  %17 = load double, double* %2, align 8
  %18 = fdiv double %16, %17
  %19 = load i32, i32* %i, align 4
  %20 = sext i32 %19 to i64
  %21 = load double*, double** %3, align 8
  %22 = getelementptr inbounds double, double* %21, i64 %20
  store double %18, double* %22, align 8
  br label %23
#BasicBlock: 702
  %25 = load i32, i32* %i, align 4
  %26 = add nsw i32 %25, 1
  store i32 %26, i32* %i, align 4
  br label %6
#BasicBlock: 703
  %29 = load double*, double** %3, align 8
  ret double* %29
current function name: mcol
#BasicBlock: 704
  %1 = alloca %struct.mat_t*, align 8
  %2 = alloca double*, align 8
  %3 = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.mat_t* %m, %struct.mat_t** %1, align 8
  store double* %v, double** %2, align 8
  store i32 %c, i32* %3, align 4
  store i32 0, i32* %i, align 4
  br label %4
#BasicBlock: 705
  %6 = load i32, i32* %i, align 4
  %7 = load %struct.mat_t*, %struct.mat_t** %1, align 8
  %8 = getelementptr inbounds %struct.mat_t, %struct.mat_t* %7, i32 0, i32 0
  %9 = load i32, i32* %8, align 8
  %10 = icmp slt i32 %6, %9
  br i1 %10, label %11, label %30
#BasicBlock: 706
  %13 = load i32, i32* %3, align 4
  %14 = sext i32 %13 to i64
  %15 = load i32, i32* %i, align 4
  %16 = sext i32 %15 to i64
  %17 = load %struct.mat_t*, %struct.mat_t** %1, align 8
  %18 = getelementptr inbounds %struct.mat_t, %struct.mat_t* %17, i32 0, i32 2
  %19 = load double**, double*** %18, align 8
  %20 = getelementptr inbounds double*, double** %19, i64 %16
  %21 = load double*, double** %20, align 8
  %22 = getelementptr inbounds double, double* %21, i64 %14
  %23 = load double, double* %22, align 8
  %24 = load i32, i32* %i, align 4
  %25 = sext i32 %24 to i64
  %26 = load double*, double** %2, align 8
  %27 = getelementptr inbounds double, double* %26, i64 %25
  store double %23, double* %27, align 8
  br label %28
#BasicBlock: 707
  %30 = load i32, i32* %i, align 4
  %31 = add nsw i32 %30, 1
  store i32 %31, i32* %i, align 4
  br label %5
#BasicBlock: 708
  %34 = load double*, double** %2, align 8
  ret double* %34
current function name: matrix_show
#BasicBlock: 709
  %1 = alloca %struct.mat_t*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store %struct.mat_t* %m, %struct.mat_t** %1, align 8
  store i32 0, i32* %i, align 4
  br label %2
#BasicBlock: 710
  %4 = load i32, i32* %i, align 4
  %5 = load %struct.mat_t*, %struct.mat_t** %1, align 8
  %6 = getelementptr inbounds %struct.mat_t, %struct.mat_t* %5, i32 0, i32 0
  %7 = load i32, i32* %6, align 8
  %8 = icmp slt i32 %4, %7
  br i1 %8, label %9, label %37
#BasicBlock: 711
  store i32 0, i32* %j, align 4
  br label %11
#BasicBlock: 712
  %13 = load i32, i32* %j, align 4
  %14 = load %struct.mat_t*, %struct.mat_t** %1, align 8
  %15 = getelementptr inbounds %struct.mat_t, %struct.mat_t* %14, i32 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = icmp slt i32 %13, %16
  br i1 %17, label %18, label %34
#BasicBlock: 713
  %20 = load i32, i32* %j, align 4
  %21 = sext i32 %20 to i64
  %22 = load i32, i32* %i, align 4
  %23 = sext i32 %22 to i64
  %24 = load %struct.mat_t*, %struct.mat_t** %1, align 8
  %25 = getelementptr inbounds %struct.mat_t, %struct.mat_t* %24, i32 0, i32 2
  %26 = load double**, double*** %25, align 8
  %27 = getelementptr inbounds double*, double** %26, i64 %23
  %28 = load double*, double** %27, align 8
  %29 = getelementptr inbounds double, double* %28, i64 %21
  %30 = load double, double* %29, align 8
  %31 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i32 0, i32 0), double %30)
  br label %32
#BasicBlock: 714
  %34 = load i32, i32* %j, align 4
  %35 = add nsw i32 %34, 1
  store i32 %35, i32* %j, align 4
  br label %12
#BasicBlock: 715
  %38 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i32 0, i32 0))
  br label %39
#BasicBlock: 716
  %41 = load i32, i32* %i, align 4
  %42 = add nsw i32 %41, 1
  store i32 %42, i32* %i, align 4
  br label %3
#BasicBlock: 717
  %45 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i32 0, i32 0))
  ret void
current function name: householder
#BasicBlock: 718
  %1 = alloca %struct.mat_t*, align 8
  %2 = alloca %struct.mat_t**, align 8
  %3 = alloca %struct.mat_t**, align 8
  %4 = alloca i8*, align 8
  %z = alloca %struct.mat_t*, align 8
  %z1 = alloca %struct.mat_t*, align 8
  %k = alloca i32, align 4
  %5 = alloca i8*, align 8
  %a = alloca double, align 8
  %i = alloca i32, align 4
  %i1 = alloca i32, align 4
  store %struct.mat_t* %m, %struct.mat_t** %1, align 8
  store %struct.mat_t** %R, %struct.mat_t*** %2, align 8
  store %struct.mat_t** %Q, %struct.mat_t*** %3, align 8
  %6 = load %struct.mat_t*, %struct.mat_t** %1, align 8
  %7 = getelementptr inbounds %struct.mat_t, %struct.mat_t* %6, i32 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = zext i32 %8 to i64
  %10 = call i8* @llvm.stacksave()
  br label %11
Builtin - llvm.stacksave
#BasicBlock: 719
  store i8* %11, i8** %4, align 8
  %13 = alloca %struct.mat_t*, i64 %10, align 16
  %14 = load %struct.mat_t*, %struct.mat_t** %1, align 8
  store %struct.mat_t* %14, %struct.mat_t** %z, align 8
  store i32 0, i32* %k, align 4
  br label %15
#BasicBlock: 720
  %17 = load i32, i32* %k, align 4
  %18 = load %struct.mat_t*, %struct.mat_t** %1, align 8
  %19 = getelementptr inbounds %struct.mat_t, %struct.mat_t* %18, i32 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = icmp slt i32 %17, %20
  br i1 %21, label %22, label %29
#BasicBlock: 721
  %24 = load i32, i32* %k, align 4
  %25 = load %struct.mat_t*, %struct.mat_t** %1, align 8
  %26 = getelementptr inbounds %struct.mat_t, %struct.mat_t* %25, i32 0, i32 0
  %27 = load i32, i32* %26, align 8
  %28 = sub nsw i32 %27, 1
  %29 = icmp slt i32 %24, %28
  br label %30
#BasicBlock: 722
  %32 = phi i1 [ false, %16 ], [ %30, %23 ]
  br i1 %32, label %33, label %143
#BasicBlock: 723
  %35 = load %struct.mat_t*, %struct.mat_t** %1, align 8
  %36 = getelementptr inbounds %struct.mat_t, %struct.mat_t* %35, i32 0, i32 0
  %37 = load i32, i32* %36, align 8
  %38 = zext i32 %37 to i64
  %39 = call i8* @llvm.stacksave()
  br label %40
Builtin - llvm.stacksave
#BasicBlock: 724
  store i8* %40, i8** %5, align 8
  %42 = alloca double, i64 %39, align 16
  %43 = load %struct.mat_t*, %struct.mat_t** %1, align 8
  %44 = getelementptr inbounds %struct.mat_t, %struct.mat_t* %43, i32 0, i32 0
  %45 = load i32, i32* %44, align 8
  %46 = zext i32 %45 to i64
  %47 = alloca double, i64 %46, align 16
  %48 = load %struct.mat_t*, %struct.mat_t** %z, align 8
  %49 = load i32, i32* %k, align 4
  %50 = call %struct.mat_t* @matrix_minor(%struct.mat_t* %48, i32 %49)
  br label %51
#BasicBlock: 725
  store %struct.mat_t* %51, %struct.mat_t** %z1, align 8
  %53 = load %struct.mat_t*, %struct.mat_t** %z, align 8
  %54 = load %struct.mat_t*, %struct.mat_t** %1, align 8
  %55 = icmp ne %struct.mat_t* %53, %54
  br i1 %55, label %56, label %58
#BasicBlock: 726
  %58 = load %struct.mat_t*, %struct.mat_t** %z, align 8
  call void @matrix_delete(%struct.mat_t* %58)
  br label %59
#BasicBlock: 727
  %61 = load %struct.mat_t*, %struct.mat_t** %z1, align 8
  store %struct.mat_t* %61, %struct.mat_t** %z, align 8
  %62 = load %struct.mat_t*, %struct.mat_t** %z, align 8
  %63 = load i32, i32* %k, align 4
  %64 = call double* @mcol(%struct.mat_t* %62, double* %47, i32 %63)
  br label %65
#BasicBlock: 728
  %67 = load %struct.mat_t*, %struct.mat_t** %1, align 8
  %68 = getelementptr inbounds %struct.mat_t, %struct.mat_t* %67, i32 0, i32 0
  %69 = load i32, i32* %68, align 8
  %70 = call double @vnorm(double* %47, i32 %69)
  br label %71
#BasicBlock: 729
  store double %71, double* %a, align 8
  %73 = load i32, i32* %k, align 4
  %74 = sext i32 %73 to i64
  %75 = load i32, i32* %k, align 4
  %76 = sext i32 %75 to i64
  %77 = load %struct.mat_t*, %struct.mat_t** %1, align 8
  %78 = getelementptr inbounds %struct.mat_t, %struct.mat_t* %77, i32 0, i32 2
  %79 = load double**, double*** %78, align 8
  %80 = getelementptr inbounds double*, double** %79, i64 %76
  %81 = load double*, double** %80, align 8
  %82 = getelementptr inbounds double, double* %81, i64 %74
  %83 = load double, double* %82, align 8
  %84 = fcmp ogt double %83, 0.000000e+00
  br i1 %84, label %85, label %88
#BasicBlock: 730
  %87 = load double, double* %a, align 8
  %88 = fsub double -0.000000e+00, %87
  store double %88, double* %a, align 8
  br label %89
#BasicBlock: 731
  store i32 0, i32* %i, align 4
  br label %91
#BasicBlock: 732
  %93 = load i32, i32* %i, align 4
  %94 = load %struct.mat_t*, %struct.mat_t** %1, align 8
  %95 = getelementptr inbounds %struct.mat_t, %struct.mat_t* %94, i32 0, i32 0
  %96 = load i32, i32* %95, align 8
  %97 = icmp slt i32 %93, %96
  br i1 %97, label %98, label %110
#BasicBlock: 733
  %100 = load i32, i32* %i, align 4
  %101 = load i32, i32* %k, align 4
  %102 = icmp eq i32 %100, %101
  %103 = select i1 %102, i32 1, i32 0
  %104 = sitofp i32 %103 to double
  %105 = load i32, i32* %i, align 4
  %106 = sext i32 %105 to i64
  %107 = getelementptr inbounds double, double* %42, i64 %106
  store double %104, double* %107, align 8
  br label %108
#BasicBlock: 734
  %110 = load i32, i32* %i, align 4
  %111 = add nsw i32 %110, 1
  store i32 %111, i32* %i, align 4
  br label %92
#BasicBlock: 735
  %114 = load double, double* %a, align 8
  %115 = load %struct.mat_t*, %struct.mat_t** %1, align 8
  %116 = getelementptr inbounds %struct.mat_t, %struct.mat_t* %115, i32 0, i32 0
  %117 = load i32, i32* %116, align 8
  %118 = call double* @vmadd(double* %47, double* %42, double %114, double* %42, i32 %117)
  br label %119
#BasicBlock: 736
  %121 = load %struct.mat_t*, %struct.mat_t** %1, align 8
  %122 = getelementptr inbounds %struct.mat_t, %struct.mat_t* %121, i32 0, i32 0
  %123 = load i32, i32* %122, align 8
  %124 = call double @vnorm(double* %42, i32 %123)
  br label %125
#BasicBlock: 737
  %127 = load %struct.mat_t*, %struct.mat_t** %1, align 8
  %128 = getelementptr inbounds %struct.mat_t, %struct.mat_t* %127, i32 0, i32 0
  %129 = load i32, i32* %128, align 8
  %130 = call double* @vdiv(double* %42, double %125, double* %42, i32 %129)
  br label %131
#BasicBlock: 738
  %133 = load %struct.mat_t*, %struct.mat_t** %1, align 8
  %134 = getelementptr inbounds %struct.mat_t, %struct.mat_t* %133, i32 0, i32 0
  %135 = load i32, i32* %134, align 8
  %136 = call %struct.mat_t* @vmul(double* %42, i32 %135)
  br label %137
#BasicBlock: 739
  %139 = load i32, i32* %k, align 4
  %140 = sext i32 %139 to i64
  %141 = getelementptr inbounds %struct.mat_t*, %struct.mat_t** %13, i64 %140
  store %struct.mat_t* %137, %struct.mat_t** %141, align 8
  %142 = load i32, i32* %k, align 4
  %143 = sext i32 %142 to i64
  %144 = getelementptr inbounds %struct.mat_t*, %struct.mat_t** %13, i64 %143
  %145 = load %struct.mat_t*, %struct.mat_t** %144, align 8
  %146 = load %struct.mat_t*, %struct.mat_t** %z, align 8
  %147 = call %struct.mat_t* @matrix_mul(%struct.mat_t* %145, %struct.mat_t* %146)
  br label %148
#BasicBlock: 740
  store %struct.mat_t* %148, %struct.mat_t** %z1, align 8
  %150 = load %struct.mat_t*, %struct.mat_t** %z, align 8
  %151 = load %struct.mat_t*, %struct.mat_t** %1, align 8
  %152 = icmp ne %struct.mat_t* %150, %151
  br i1 %152, label %153, label %155
#BasicBlock: 741
  %155 = load %struct.mat_t*, %struct.mat_t** %z, align 8
  call void @matrix_delete(%struct.mat_t* %155)
  br label %156
#BasicBlock: 742
  %158 = load %struct.mat_t*, %struct.mat_t** %z1, align 8
  store %struct.mat_t* %158, %struct.mat_t** %z, align 8
  %159 = load i8*, i8** %5, align 8
  call void @llvm.stackrestore(i8* %159)
  br label %160
Builtin - llvm.stackrestore
#BasicBlock: 743
  %162 = load i32, i32* %k, align 4
  %163 = add nsw i32 %162, 1
  store i32 %163, i32* %k, align 4
  br label %16
#BasicBlock: 744
  %166 = load %struct.mat_t*, %struct.mat_t** %z, align 8
  call void @matrix_delete(%struct.mat_t* %166)
  br label %167
#BasicBlock: 745
  %169 = getelementptr inbounds %struct.mat_t*, %struct.mat_t** %13, i64 0
  %170 = load %struct.mat_t*, %struct.mat_t** %169, align 16
  %171 = load %struct.mat_t**, %struct.mat_t*** %3, align 8
  store %struct.mat_t* %170, %struct.mat_t** %171, align 8
  %172 = getelementptr inbounds %struct.mat_t*, %struct.mat_t** %13, i64 0
  %173 = load %struct.mat_t*, %struct.mat_t** %172, align 16
  %174 = load %struct.mat_t*, %struct.mat_t** %1, align 8
  %175 = call %struct.mat_t* @matrix_mul(%struct.mat_t* %173, %struct.mat_t* %174)
  br label %176
#BasicBlock: 746
  %178 = load %struct.mat_t**, %struct.mat_t*** %2, align 8
  store %struct.mat_t* %176, %struct.mat_t** %178, align 8
  store i32 1, i32* %i1, align 4
  br label %179
#BasicBlock: 747
  %181 = load i32, i32* %i1, align 4
  %182 = load %struct.mat_t*, %struct.mat_t** %1, align 8
  %183 = getelementptr inbounds %struct.mat_t, %struct.mat_t* %182, i32 0, i32 1
  %184 = load i32, i32* %183, align 4
  %185 = icmp slt i32 %181, %184
  br i1 %185, label %186, label %193
#BasicBlock: 748
  %188 = load i32, i32* %i1, align 4
  %189 = load %struct.mat_t*, %struct.mat_t** %1, align 8
  %190 = getelementptr inbounds %struct.mat_t, %struct.mat_t* %189, i32 0, i32 0
  %191 = load i32, i32* %190, align 8
  %192 = sub nsw i32 %191, 1
  %193 = icmp slt i32 %188, %192
  br label %194
#BasicBlock: 749
  %196 = phi i1 [ false, %180 ], [ %194, %187 ]
  br i1 %196, label %197, label %221
#BasicBlock: 750
  %199 = load i32, i32* %i1, align 4
  %200 = sext i32 %199 to i64
  %201 = getelementptr inbounds %struct.mat_t*, %struct.mat_t** %13, i64 %200
  %202 = load %struct.mat_t*, %struct.mat_t** %201, align 8
  %203 = load %struct.mat_t**, %struct.mat_t*** %3, align 8
  %204 = load %struct.mat_t*, %struct.mat_t** %203, align 8
  %205 = call %struct.mat_t* @matrix_mul(%struct.mat_t* %202, %struct.mat_t* %204)
  br label %206
#BasicBlock: 751
  store %struct.mat_t* %206, %struct.mat_t** %z1, align 8
  %208 = load i32, i32* %i1, align 4
  %209 = icmp sgt i32 %208, 1
  br i1 %209, label %210, label %213
#BasicBlock: 752
  %212 = load %struct.mat_t**, %struct.mat_t*** %3, align 8
  %213 = load %struct.mat_t*, %struct.mat_t** %212, align 8
  call void @matrix_delete(%struct.mat_t* %213)
  br label %214
#BasicBlock: 753
  %216 = load %struct.mat_t*, %struct.mat_t** %z1, align 8
  %217 = load %struct.mat_t**, %struct.mat_t*** %3, align 8
  store %struct.mat_t* %216, %struct.mat_t** %217, align 8
  %218 = load i32, i32* %i1, align 4
  %219 = sext i32 %218 to i64
  %220 = getelementptr inbounds %struct.mat_t*, %struct.mat_t** %13, i64 %219
  %221 = load %struct.mat_t*, %struct.mat_t** %220, align 8
  call void @matrix_delete(%struct.mat_t* %221)
  br label %222
#BasicBlock: 754
  %224 = load i32, i32* %i1, align 4
  %225 = add nsw i32 %224, 1
  store i32 %225, i32* %i1, align 4
  br label %180
#BasicBlock: 755
  %228 = getelementptr inbounds %struct.mat_t*, %struct.mat_t** %13, i64 0
  %229 = load %struct.mat_t*, %struct.mat_t** %228, align 16
  call void @matrix_delete(%struct.mat_t* %229)
  br label %230
#BasicBlock: 756
  %232 = load %struct.mat_t**, %struct.mat_t*** %3, align 8
  %233 = load %struct.mat_t*, %struct.mat_t** %232, align 8
  %234 = load %struct.mat_t*, %struct.mat_t** %1, align 8
  %235 = call %struct.mat_t* @matrix_mul(%struct.mat_t* %233, %struct.mat_t* %234)
  br label %236
#BasicBlock: 757
  store %struct.mat_t* %236, %struct.mat_t** %z, align 8
  %238 = load %struct.mat_t**, %struct.mat_t*** %2, align 8
  %239 = load %struct.mat_t*, %struct.mat_t** %238, align 8
  call void @matrix_delete(%struct.mat_t* %239)
  br label %240
#BasicBlock: 758
  %242 = load %struct.mat_t*, %struct.mat_t** %z, align 8
  %243 = load %struct.mat_t**, %struct.mat_t*** %2, align 8
  store %struct.mat_t* %242, %struct.mat_t** %243, align 8
  %244 = load %struct.mat_t**, %struct.mat_t*** %3, align 8
  %245 = load %struct.mat_t*, %struct.mat_t** %244, align 8
  call void @matrix_transpose(%struct.mat_t* %245)
  br label %246
#BasicBlock: 759
  %248 = load i8*, i8** %4, align 8
  call void @llvm.stackrestore(i8* %248)
  ret void
Builtin - llvm.stackrestore
current function name: mult_double
#BasicBlock: 760
  %1 = alloca double*, align 8
  %2 = alloca double*, align 8
  %3 = alloca double*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  store double* %A, double** %1, align 8
  store double* %B, double** %2, align 8
  store double* %C, double** %3, align 8
  store i32 %r1, i32* %4, align 4
  store i32 %c1, i32* %5, align 4
  store i32 %r2, i32* %6, align 4
  store i32 %c2, i32* %7, align 4
  store i32 0, i32* %i, align 4
  br label %8
#BasicBlock: 761
  %10 = load i32, i32* %i, align 4
  %11 = load i32, i32* %4, align 4
  %12 = icmp slt i32 %10, %11
  br i1 %12, label %13, label %64
#BasicBlock: 762
  store i32 0, i32* %j, align 4
  br label %15
#BasicBlock: 763
  %17 = load i32, i32* %j, align 4
  %18 = load i32, i32* %7, align 4
  %19 = icmp slt i32 %17, %18
  br i1 %19, label %20, label %62
#BasicBlock: 764
  store i32 0, i32* %k, align 4
  br label %22
#BasicBlock: 765
  %24 = load i32, i32* %k, align 4
  %25 = load i32, i32* %5, align 4
  %26 = icmp slt i32 %24, %25
  br i1 %26, label %27, label %60
#BasicBlock: 766
  %29 = load i32, i32* %i, align 4
  %30 = load i32, i32* %5, align 4
  %31 = mul nsw i32 %29, %30
  %32 = load i32, i32* %k, align 4
  %33 = add nsw i32 %31, %32
  %34 = sext i32 %33 to i64
  %35 = load double*, double** %1, align 8
  %36 = getelementptr inbounds double, double* %35, i64 %34
  %37 = load double, double* %36, align 8
  %38 = load i32, i32* %k, align 4
  %39 = load i32, i32* %7, align 4
  %40 = mul nsw i32 %38, %39
  %41 = load i32, i32* %j, align 4
  %42 = add nsw i32 %40, %41
  %43 = sext i32 %42 to i64
  %44 = load double*, double** %2, align 8
  %45 = getelementptr inbounds double, double* %44, i64 %43
  %46 = load double, double* %45, align 8
  %47 = fmul double %37, %46
  %48 = load i32, i32* %i, align 4
  %49 = load i32, i32* %7, align 4
  %50 = mul nsw i32 %48, %49
  %51 = load i32, i32* %j, align 4
  %52 = add nsw i32 %50, %51
  %53 = sext i32 %52 to i64
  %54 = load double*, double** %3, align 8
  %55 = getelementptr inbounds double, double* %54, i64 %53
  %56 = load double, double* %55, align 8
  %57 = fadd double %56, %47
  store double %57, double* %55, align 8
  br label %58
#BasicBlock: 767
  %60 = load i32, i32* %k, align 4
  %61 = add nsw i32 %60, 1
  store i32 %61, i32* %k, align 4
  br label %23
#BasicBlock: 768
  br label %64
#BasicBlock: 769
  %66 = load i32, i32* %j, align 4
  %67 = add nsw i32 %66, 1
  store i32 %67, i32* %j, align 4
  br label %16
#BasicBlock: 770
  br label %70
#BasicBlock: 771
  %72 = load i32, i32* %i, align 4
  %73 = add nsw i32 %72, 1
  store i32 %73, i32* %i, align 4
  br label %9
#BasicBlock: 772
  ret void
current function name: predictValues
#BasicBlock: 773
  %1 = alloca double*, align 8
  %2 = alloca double*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca double*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca double*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca double*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca double*, align 8
  %TSteps = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %stepInd = alloca i32, align 4
  %chInd = alloca i32, align 4
  %19 = alloca i8*, align 8
  %aInd = alloca i32, align 4
  %xtempXprefact = alloca double, align 8
  %trailLen = alloca i32, align 4
  %20 = alloca i8*, align 8
  %a = alloca i32, align 4
  %21 = alloca i8*, align 8
  store double* %X, double** %1, align 8
  store double* %order, double** %2, align 8
  store i32 %order_R, i32* %3, align 4
  store i32 %order_C, i32* %4, align 4
  store i32 %T, i32* %5, align 4
  store i32 %numStep, i32* %6, align 4
  store double* %A, double** %7, align 8
  store i32 %A_R, i32* %8, align 4
  store i32 %A_C, i32* %9, align 4
  store double* %B, double** %10, align 8
  store i32 %B_R, i32* %11, align 4
  store i32 %B_C, i32* %12, align 4
  store double* %u, double** %13, align 8
  store i32 %U_R, i32* %14, align 4
  store i32 %U_C, i32* %15, align 4
  store i32 %infit, i32* %16, align 4
  store i32 %numCh, i32* %17, align 4
  store double* %Result, double** %18, align 8
  %22 = load i32, i32* %5, align 4
  %23 = load i32, i32* %6, align 4
  %24 = sdiv i32 %22, %23
  store i32 %24, i32* %TSteps, align 4
  %25 = load i32, i32* %17, align 4
  %26 = zext i32 %25 to i64
  %27 = load i32, i32* %5, align 4
  %28 = zext i32 %27 to i64
  %29 = call i8* @llvm.stacksave()
  br label %30
Builtin - llvm.stacksave
#BasicBlock: 774
  store i8* %30, i8** %19, align 8
  %32 = mul nuw i64 %26, %29
  %33 = alloca double, i64 %32, align 16
  %34 = load i32, i32* %14, align 4
  %35 = load i32, i32* %6, align 4
  %36 = mul nsw i32 %34, %35
  %37 = zext i32 %36 to i64
  %38 = alloca double, i64 %37, align 16
  store i32 0, i32* %i, align 4
  br label %39
#BasicBlock: 775
  %41 = load i32, i32* %i, align 4
  %42 = load i32, i32* %14, align 4
  %43 = load i32, i32* %6, align 4
  %44 = mul nsw i32 %42, %43
  %45 = icmp slt i32 %41, %44
  br i1 %45, label %46, label %53
#BasicBlock: 776
  %48 = load i32, i32* %i, align 4
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds double, double* %38, i64 %49
  store double 0.000000e+00, double* %50, align 8
  br label %51
#BasicBlock: 777
  %53 = load i32, i32* %i, align 4
  %54 = add nsw i32 %53, 1
  store i32 %54, i32* %i, align 4
  br label %40
#BasicBlock: 778
  store i32 0, i32* %i, align 4
  br label %57
#BasicBlock: 779
  %59 = load i32, i32* %i, align 4
  %60 = load i32, i32* %17, align 4
  %61 = icmp slt i32 %59, %60
  br i1 %61, label %62, label %82
#BasicBlock: 780
  store i32 0, i32* %j, align 4
  br label %64
#BasicBlock: 781
  %66 = load i32, i32* %j, align 4
  %67 = load i32, i32* %5, align 4
  %68 = icmp slt i32 %66, %67
  br i1 %68, label %69, label %80
#BasicBlock: 782
  %71 = load i32, i32* %j, align 4
  %72 = sext i32 %71 to i64
  %73 = load i32, i32* %i, align 4
  %74 = sext i32 %73 to i64
  %75 = mul nsw i64 %74, %29
  %76 = getelementptr inbounds double, double* %33, i64 %75
  %77 = getelementptr inbounds double, double* %76, i64 %72
  store double 0.000000e+00, double* %77, align 8
  br label %78
#BasicBlock: 783
  %80 = load i32, i32* %j, align 4
  %81 = add nsw i32 %80, 1
  store i32 %81, i32* %j, align 4
  br label %65
#BasicBlock: 784
  br label %84
#BasicBlock: 785
  %86 = load i32, i32* %i, align 4
  %87 = add nsw i32 %86, 1
  store i32 %87, i32* %i, align 4
  br label %58
#BasicBlock: 786
  store i32 0, i32* %i, align 4
  br label %90
#BasicBlock: 787
  %92 = load i32, i32* %i, align 4
  %93 = load i32, i32* %14, align 4
  %94 = icmp slt i32 %92, %93
  br i1 %94, label %95, label %124
#BasicBlock: 788
  store i32 0, i32* %j, align 4
  br label %97
#BasicBlock: 789
  %99 = load i32, i32* %j, align 4
  %100 = load i32, i32* %6, align 4
  %101 = icmp slt i32 %99, %100
  br i1 %101, label %102, label %122
#BasicBlock: 790
  %104 = load i32, i32* %i, align 4
  %105 = load i32, i32* %15, align 4
  %106 = mul nsw i32 %104, %105
  %107 = load i32, i32* %j, align 4
  %108 = add nsw i32 %106, %107
  %109 = sext i32 %108 to i64
  %110 = load double*, double** %13, align 8
  %111 = getelementptr inbounds double, double* %110, i64 %109
  %112 = load double, double* %111, align 8
  %113 = load i32, i32* %i, align 4
  %114 = load i32, i32* %6, align 4
  %115 = mul nsw i32 %113, %114
  %116 = load i32, i32* %j, align 4
  %117 = add nsw i32 %115, %116
  %118 = sext i32 %117 to i64
  %119 = getelementptr inbounds double, double* %38, i64 %118
  store double %112, double* %119, align 8
  br label %120
#BasicBlock: 791
  %122 = load i32, i32* %j, align 4
  %123 = add nsw i32 %122, 1
  store i32 %123, i32* %j, align 4
  br label %98
#BasicBlock: 792
  br label %126
#BasicBlock: 793
  %128 = load i32, i32* %i, align 4
  %129 = add nsw i32 %128, 1
  store i32 %129, i32* %i, align 4
  br label %91
#BasicBlock: 794
  %132 = load i32, i32* %17, align 4
  %133 = load i32, i32* %6, align 4
  %134 = mul nsw i32 %132, %133
  %135 = zext i32 %134 to i64
  %136 = alloca double, i64 %135, align 16
  store i32 0, i32* %i, align 4
  br label %137
#BasicBlock: 795
  %139 = load i32, i32* %i, align 4
  %140 = load i32, i32* %17, align 4
  %141 = load i32, i32* %6, align 4
  %142 = mul nsw i32 %140, %141
  %143 = icmp slt i32 %139, %142
  br i1 %143, label %144, label %151
#BasicBlock: 796
  %146 = load i32, i32* %i, align 4
  %147 = sext i32 %146 to i64
  %148 = getelementptr inbounds double, double* %136, i64 %147
  store double 0.000000e+00, double* %148, align 8
  br label %149
#BasicBlock: 797
  %151 = load i32, i32* %i, align 4
  %152 = add nsw i32 %151, 1
  store i32 %152, i32* %i, align 4
  br label %138
#BasicBlock: 798
  %155 = load double*, double** %10, align 8
  %156 = load i32, i32* %11, align 4
  %157 = load i32, i32* %12, align 4
  %158 = load i32, i32* %14, align 4
  %159 = load i32, i32* %6, align 4
  call void @mult_double(double* %155, double* %38, double* %136, i32 %156, i32 %157, i32 %158, i32 %159)
  br label %160
#BasicBlock: 799
  store i32 0, i32* %i, align 4
  br label %162
#BasicBlock: 800
  %164 = load i32, i32* %i, align 4
  %165 = load i32, i32* %17, align 4
  %166 = icmp slt i32 %164, %165
  br i1 %166, label %167, label %205
#BasicBlock: 801
  store i32 0, i32* %j, align 4
  br label %169
#BasicBlock: 802
  %171 = load i32, i32* %j, align 4
  %172 = load i32, i32* %6, align 4
  %173 = icmp slt i32 %171, %172
  br i1 %173, label %174, label %203
#BasicBlock: 803
  %176 = load i32, i32* %i, align 4
  %177 = load i32, i32* %5, align 4
  %178 = mul nsw i32 %176, %177
  %179 = load i32, i32* %j, align 4
  %180 = add nsw i32 %178, %179
  %181 = sext i32 %180 to i64
  %182 = load double*, double** %1, align 8
  %183 = getelementptr inbounds double, double* %182, i64 %181
  %184 = load double, double* %183, align 8
  %185 = load i32, i32* %i, align 4
  %186 = load i32, i32* %6, align 4
  %187 = mul nsw i32 %185, %186
  %188 = load i32, i32* %j, align 4
  %189 = add nsw i32 %187, %188
  %190 = sext i32 %189 to i64
  %191 = getelementptr inbounds double, double* %136, i64 %190
  %192 = load double, double* %191, align 8
  %193 = fadd double %184, %192
  %194 = load i32, i32* %j, align 4
  %195 = sext i32 %194 to i64
  %196 = load i32, i32* %i, align 4
  %197 = sext i32 %196 to i64
  %198 = mul nsw i64 %197, %29
  %199 = getelementptr inbounds double, double* %33, i64 %198
  %200 = getelementptr inbounds double, double* %199, i64 %195
  store double %193, double* %200, align 8
  br label %201
#BasicBlock: 804
  %203 = load i32, i32* %j, align 4
  %204 = add nsw i32 %203, 1
  store i32 %204, i32* %j, align 4
  br label %170
#BasicBlock: 805
  br label %207
#BasicBlock: 806
  %209 = load i32, i32* %i, align 4
  %210 = add nsw i32 %209, 1
  store i32 %210, i32* %i, align 4
  br label %163
#BasicBlock: 807
  %213 = load i32, i32* %17, align 4
  %214 = zext i32 %213 to i64
  %215 = load i32, i32* %5, align 4
  %216 = zext i32 %215 to i64
  %217 = mul nuw i64 %214, %216
  %218 = alloca double, i64 %217, align 16
  store i32 0, i32* %i, align 4
  br label %219
#BasicBlock: 808
  %221 = load i32, i32* %i, align 4
  %222 = load i32, i32* %17, align 4
  %223 = icmp slt i32 %221, %222
  br i1 %223, label %224, label %244
#BasicBlock: 809
  store i32 0, i32* %j, align 4
  br label %226
#BasicBlock: 810
  %228 = load i32, i32* %j, align 4
  %229 = load i32, i32* %5, align 4
  %230 = icmp slt i32 %228, %229
  br i1 %230, label %231, label %242
#BasicBlock: 811
  %233 = load i32, i32* %j, align 4
  %234 = sext i32 %233 to i64
  %235 = load i32, i32* %i, align 4
  %236 = sext i32 %235 to i64
  %237 = mul nsw i64 %236, %216
  %238 = getelementptr inbounds double, double* %218, i64 %237
  %239 = getelementptr inbounds double, double* %238, i64 %234
  store double 0.000000e+00, double* %239, align 8
  br label %240
#BasicBlock: 812
  %242 = load i32, i32* %j, align 4
  %243 = add nsw i32 %242, 1
  store i32 %243, i32* %j, align 4
  br label %227
#BasicBlock: 813
  br label %246
#BasicBlock: 814
  %248 = load i32, i32* %i, align 4
  %249 = add nsw i32 %248, 1
  store i32 %249, i32* %i, align 4
  br label %220
#BasicBlock: 815
  %252 = load i32, i32* %4, align 4
  %253 = zext i32 %252 to i64
  %254 = alloca double, i64 %253, align 16
  store i32 0, i32* %i, align 4
  br label %255
#BasicBlock: 816
  %257 = load i32, i32* %i, align 4
  %258 = load i32, i32* %4, align 4
  %259 = icmp slt i32 %257, %258
  br i1 %259, label %260, label %267
#BasicBlock: 817
  %262 = load i32, i32* %i, align 4
  %263 = sext i32 %262 to i64
  %264 = getelementptr inbounds double, double* %254, i64 %263
  store double 0.000000e+00, double* %264, align 8
  br label %265
#BasicBlock: 818
  %267 = load i32, i32* %i, align 4
  %268 = add nsw i32 %267, 1
  store i32 %268, i32* %i, align 4
  br label %256
#BasicBlock: 819
  store double 0.000000e+00, double* %xtempXprefact, align 8
  store i32 0, i32* %trailLen, align 4
  store i32 2, i32* %i, align 4
  br label %271
#BasicBlock: 820
  %273 = load i32, i32* %i, align 4
  %274 = load i32, i32* %TSteps, align 4
  %275 = icmp sle i32 %273, %274
  br i1 %275, label %276, label %949
#BasicBlock: 821
  store i32 0, i32* %j, align 4
  br label %278
#BasicBlock: 822
  %280 = load i32, i32* %j, align 4
  %281 = load i32, i32* %6, align 4
  %282 = icmp slt i32 %280, %281
  br i1 %282, label %283, label %303
#BasicBlock: 823
  store i32 0, i32* %k, align 4
  br label %285
#BasicBlock: 824
  %287 = load i32, i32* %k, align 4
  %288 = load i32, i32* %5, align 4
  %289 = icmp slt i32 %287, %288
  br i1 %289, label %290, label %301
#BasicBlock: 825
  %292 = load i32, i32* %k, align 4
  %293 = sext i32 %292 to i64
  %294 = load i32, i32* %j, align 4
  %295 = sext i32 %294 to i64
  %296 = mul nsw i64 %295, %216
  %297 = getelementptr inbounds double, double* %218, i64 %296
  %298 = getelementptr inbounds double, double* %297, i64 %293
  store double 0.000000e+00, double* %298, align 8
  br label %299
#BasicBlock: 826
  %301 = load i32, i32* %k, align 4
  %302 = add nsw i32 %301, 1
  store i32 %302, i32* %k, align 4
  br label %286
#BasicBlock: 827
  br label %305
#BasicBlock: 828
  %307 = load i32, i32* %j, align 4
  %308 = add nsw i32 %307, 1
  store i32 %308, i32* %j, align 4
  br label %279
#BasicBlock: 829
  store i32 0, i32* %j, align 4
  br label %311
#BasicBlock: 830
  %313 = load i32, i32* %j, align 4
  %314 = load i32, i32* %17, align 4
  %315 = icmp slt i32 %313, %314
  br i1 %315, label %316, label %348
#BasicBlock: 831
  store i32 0, i32* %k, align 4
  br label %318
#BasicBlock: 832
  %320 = load i32, i32* %k, align 4
  %321 = load i32, i32* %i, align 4
  %322 = sub nsw i32 %321, 1
  %323 = load i32, i32* %6, align 4
  %324 = mul nsw i32 %322, %323
  %325 = icmp slt i32 %320, %324
  br i1 %325, label %326, label %346
#BasicBlock: 833
  %328 = load i32, i32* %j, align 4
  %329 = load i32, i32* %5, align 4
  %330 = mul nsw i32 %328, %329
  %331 = load i32, i32* %k, align 4
  %332 = add nsw i32 %330, %331
  %333 = sext i32 %332 to i64
  %334 = load double*, double** %1, align 8
  %335 = getelementptr inbounds double, double* %334, i64 %333
  %336 = load double, double* %335, align 8
  %337 = load i32, i32* %k, align 4
  %338 = sext i32 %337 to i64
  %339 = load i32, i32* %j, align 4
  %340 = sext i32 %339 to i64
  %341 = mul nsw i64 %340, %216
  %342 = getelementptr inbounds double, double* %218, i64 %341
  %343 = getelementptr inbounds double, double* %342, i64 %338
  store double %336, double* %343, align 8
  br label %344
#BasicBlock: 834
  %346 = load i32, i32* %k, align 4
  %347 = add nsw i32 %346, 1
  store i32 %347, i32* %k, align 4
  br label %319
#BasicBlock: 835
  br label %350
#BasicBlock: 836
  %352 = load i32, i32* %j, align 4
  %353 = add nsw i32 %352, 1
  store i32 %353, i32* %j, align 4
  br label %312
#BasicBlock: 837
  store i32 0, i32* %stepInd, align 4
  br label %356
#BasicBlock: 838
  %358 = load i32, i32* %stepInd, align 4
  %359 = load i32, i32* %6, align 4
  %360 = icmp slt i32 %358, %359
  br i1 %360, label %361, label %928
#BasicBlock: 839
  store i32 0, i32* %chInd, align 4
  br label %363
#BasicBlock: 840
  %365 = load i32, i32* %chInd, align 4
  %366 = load i32, i32* %17, align 4
  %367 = icmp slt i32 %365, %366
  br i1 %367, label %368, label %753
#BasicBlock: 841
  store i32 0, i32* %j, align 4
  br label %370
#BasicBlock: 842
  %372 = load i32, i32* %j, align 4
  %373 = load i32, i32* %4, align 4
  %374 = icmp slt i32 %372, %373
  br i1 %374, label %375, label %391
#BasicBlock: 843
  %377 = load i32, i32* %chInd, align 4
  %378 = load i32, i32* %4, align 4
  %379 = mul nsw i32 %377, %378
  %380 = load i32, i32* %j, align 4
  %381 = add nsw i32 %379, %380
  %382 = sext i32 %381 to i64
  %383 = load double*, double** %2, align 8
  %384 = getelementptr inbounds double, double* %383, i64 %382
  %385 = load double, double* %384, align 8
  %386 = load i32, i32* %j, align 4
  %387 = sext i32 %386 to i64
  %388 = getelementptr inbounds double, double* %254, i64 %387
  store double %385, double* %388, align 8
  br label %389
#BasicBlock: 844
  %391 = load i32, i32* %j, align 4
  %392 = add nsw i32 %391, 1
  store i32 %392, i32* %j, align 4
  br label %371
#BasicBlock: 845
  %395 = load i32, i32* %16, align 4
  store i32 %395, i32* %trailLen, align 4
  %396 = load i32, i32* %16, align 4
  %397 = load i32, i32* %i, align 4
  %398 = sub nsw i32 %397, 1
  %399 = load i32, i32* %6, align 4
  %400 = mul nsw i32 %398, %399
  %401 = load i32, i32* %stepInd, align 4
  %402 = add nsw i32 %400, %401
  %403 = sub nsw i32 %402, 1
  %404 = icmp sgt i32 %396, %403
  br i1 %404, label %405, label %412
#BasicBlock: 846
  %407 = load i32, i32* %i, align 4
  %408 = sub nsw i32 %407, 1
  %409 = load i32, i32* %6, align 4
  %410 = mul nsw i32 %408, %409
  %411 = load i32, i32* %stepInd, align 4
  %412 = add nsw i32 %410, %411
  store i32 %412, i32* %trailLen, align 4
  br label %413
#BasicBlock: 847
  %415 = load i32, i32* %trailLen, align 4
  %416 = zext i32 %415 to i64
  %417 = call i8* @llvm.stacksave()
  br label %418
Builtin - llvm.stacksave
#BasicBlock: 848
  store i8* %418, i8** %20, align 8
  %420 = alloca i32, i64 %417, align 16
  store i32 0, i32* %j, align 4
  br label %421
#BasicBlock: 849
  %423 = load i32, i32* %j, align 4
  %424 = load i32, i32* %trailLen, align 4
  %425 = icmp slt i32 %423, %424
  br i1 %425, label %426, label %433
#BasicBlock: 850
  %428 = load i32, i32* %j, align 4
  %429 = sext i32 %428 to i64
  %430 = getelementptr inbounds i32, i32* %420, i64 %429
  store i32 0, i32* %430, align 4
  br label %431
#BasicBlock: 851
  %433 = load i32, i32* %j, align 4
  %434 = add nsw i32 %433, 1
  store i32 %434, i32* %j, align 4
  br label %422
#BasicBlock: 852
  %437 = load i32, i32* %trailLen, align 4
  %438 = zext i32 %437 to i64
  %439 = alloca double, i64 %438, align 16
  store i32 0, i32* %j, align 4
  br label %440
#BasicBlock: 853
  %442 = load i32, i32* %j, align 4
  %443 = load i32, i32* %trailLen, align 4
  %444 = icmp slt i32 %442, %443
  br i1 %444, label %445, label %452
#BasicBlock: 854
  %447 = load i32, i32* %j, align 4
  %448 = sext i32 %447 to i64
  %449 = getelementptr inbounds double, double* %439, i64 %448
  store double 0.000000e+00, double* %449, align 8
  br label %450
#BasicBlock: 855
  %452 = load i32, i32* %j, align 4
  %453 = add nsw i32 %452, 1
  store i32 %453, i32* %j, align 4
  br label %441
#BasicBlock: 856
  %456 = load i32, i32* %trailLen, align 4
  %457 = zext i32 %456 to i64
  %458 = alloca double, i64 %457, align 16
  store i32 0, i32* %j, align 4
  br label %459
#BasicBlock: 857
  %461 = load i32, i32* %j, align 4
  %462 = load i32, i32* %trailLen, align 4
  %463 = icmp slt i32 %461, %462
  br i1 %463, label %464, label %471
#BasicBlock: 858
  %466 = load i32, i32* %j, align 4
  %467 = sext i32 %466 to i64
  %468 = getelementptr inbounds double, double* %458, i64 %467
  store double 0.000000e+00, double* %468, align 8
  br label %469
#BasicBlock: 859
  %471 = load i32, i32* %j, align 4
  %472 = add nsw i32 %471, 1
  store i32 %472, i32* %j, align 4
  br label %460
#BasicBlock: 860
  store i32 0, i32* %j, align 4
  br label %475
#BasicBlock: 861
  %477 = load i32, i32* %j, align 4
  %478 = load i32, i32* %trailLen, align 4
  %479 = icmp slt i32 %477, %478
  br i1 %479, label %480, label %489
#BasicBlock: 862
  %482 = load i32, i32* %j, align 4
  %483 = add nsw i32 %482, 1
  %484 = load i32, i32* %j, align 4
  %485 = sext i32 %484 to i64
  %486 = getelementptr inbounds i32, i32* %420, i64 %485
  store i32 %483, i32* %486, align 4
  br label %487
#BasicBlock: 863
  %489 = load i32, i32* %j, align 4
  %490 = add nsw i32 %489, 1
  store i32 %490, i32* %j, align 4
  br label %476
#BasicBlock: 864
  %493 = load i32, i32* %4, align 4
  %494 = icmp sgt i32 %493, 1
  br i1 %494, label %495, label %653
#BasicBlock: 865
  store i32 0, i32* %aInd, align 4
  br label %497
#BasicBlock: 866
  %499 = load i32, i32* %aInd, align 4
  %500 = load i32, i32* %4, align 4
  %501 = icmp slt i32 %499, %500
  br i1 %501, label %502, label %625
#BasicBlock: 867
  store i32 0, i32* %j, align 4
  br label %504
#BasicBlock: 868
  %506 = load i32, i32* %j, align 4
  %507 = load i32, i32* %trailLen, align 4
  %508 = icmp slt i32 %506, %507
  br i1 %508, label %509, label %546
#BasicBlock: 869
  %511 = load i32, i32* %aInd, align 4
  %512 = sext i32 %511 to i64
  %513 = getelementptr inbounds double, double* %254, i64 %512
  %514 = load double, double* %513, align 8
  %515 = fmul double -1.000000e+00, %514
  %516 = load i32, i32* %j, align 4
  %517 = sext i32 %516 to i64
  %518 = getelementptr inbounds i32, i32* %420, i64 %517
  %519 = load i32, i32* %518, align 4
  %520 = sitofp i32 %519 to double
  %521 = fadd double %515, %520
  %522 = call double @sp_gamma(double %521)
  br label %523
#BasicBlock: 870
  %525 = load i32, i32* %aInd, align 4
  %526 = sext i32 %525 to i64
  %527 = getelementptr inbounds double, double* %254, i64 %526
  %528 = load double, double* %527, align 8
  %529 = fmul double -1.000000e+00, %528
  %530 = call double @sp_gamma(double %529)
  br label %531
#BasicBlock: 871
  %533 = load i32, i32* %i, align 4
  %534 = sext i32 %533 to i64
  %535 = getelementptr inbounds i32, i32* %420, i64 %534
  %536 = load i32, i32* %535, align 4
  %537 = add nsw i32 %536, 1
  %538 = sitofp i32 %537 to double
  %539 = call double @sp_gamma(double %538)
  br label %540
#BasicBlock: 872
  %542 = fmul double %531, %540
  %543 = fdiv double %523, %542
  %544 = load i32, i32* %j, align 4
  %545 = sext i32 %544 to i64
  %546 = getelementptr inbounds double, double* %439, i64 %545
  store double %543, double* %546, align 8
  br label %547
#BasicBlock: 873
  %549 = load i32, i32* %j, align 4
  %550 = add nsw i32 %549, 1
  store i32 %550, i32* %j, align 4
  br label %505
#BasicBlock: 874
  store i32 0, i32* %j, align 4
  br label %553
#BasicBlock: 875
  %555 = load i32, i32* %j, align 4
  %556 = load i32, i32* %trailLen, align 4
  %557 = icmp slt i32 %555, %556
  br i1 %557, label %558, label %583
#BasicBlock: 876
  %560 = load i32, i32* %i, align 4
  %561 = sub nsw i32 %560, 1
  %562 = load i32, i32* %6, align 4
  %563 = mul nsw i32 %561, %562
  %564 = load i32, i32* %stepInd, align 4
  %565 = add nsw i32 %563, %564
  %566 = load i32, i32* %j, align 4
  %567 = sext i32 %566 to i64
  %568 = getelementptr inbounds i32, i32* %420, i64 %567
  %569 = load i32, i32* %568, align 4
  %570 = sub nsw i32 %565, %569
  %571 = sext i32 %570 to i64
  %572 = load i32, i32* %chInd, align 4
  %573 = sext i32 %572 to i64
  %574 = mul nsw i64 %573, %216
  %575 = getelementptr inbounds double, double* %218, i64 %574
  %576 = getelementptr inbounds double, double* %575, i64 %571
  %577 = load double, double* %576, align 8
  %578 = load i32, i32* %j, align 4
  %579 = sext i32 %578 to i64
  %580 = getelementptr inbounds double, double* %458, i64 %579
  store double %577, double* %580, align 8
  br label %581
#BasicBlock: 877
  %583 = load i32, i32* %j, align 4
  %584 = add nsw i32 %583, 1
  store i32 %584, i32* %j, align 4
  br label %554
#BasicBlock: 878
  store i32 0, i32* %j, align 4
  br label %587
#BasicBlock: 879
  %589 = load i32, i32* %j, align 4
  %590 = load i32, i32* %trailLen, align 4
  %591 = icmp slt i32 %589, %590
  br i1 %591, label %592, label %634
#BasicBlock: 880
  %594 = load double, double* %xtempXprefact, align 8
  %595 = load i32, i32* %j, align 4
  %596 = sext i32 %595 to i64
  %597 = getelementptr inbounds double, double* %458, i64 %596
  %598 = load double, double* %597, align 8
  %599 = load i32, i32* %j, align 4
  %600 = sext i32 %599 to i64
  %601 = getelementptr inbounds double, double* %439, i64 %600
  %602 = load double, double* %601, align 8
  %603 = fmul double %598, %602
  %604 = fadd double %594, %603
  store double %604, double* %xtempXprefact, align 8
  %605 = load i32, i32* %i, align 4
  %606 = sub nsw i32 %605, 1
  %607 = load i32, i32* %6, align 4
  %608 = mul nsw i32 %606, %607
  %609 = load i32, i32* %stepInd, align 4
  %610 = add nsw i32 %608, %609
  %611 = sext i32 %610 to i64
  %612 = load i32, i32* %chInd, align 4
  %613 = sext i32 %612 to i64
  %614 = mul nsw i64 %613, %216
  %615 = getelementptr inbounds double, double* %218, i64 %614
  %616 = getelementptr inbounds double, double* %615, i64 %611
  %617 = load double, double* %616, align 8
  %618 = load double, double* %xtempXprefact, align 8
  %619 = fsub double %617, %618
  %620 = load i32, i32* %i, align 4
  %621 = sub nsw i32 %620, 1
  %622 = load i32, i32* %6, align 4
  %623 = mul nsw i32 %621, %622
  %624 = load i32, i32* %stepInd, align 4
  %625 = add nsw i32 %623, %624
  %626 = sext i32 %625 to i64
  %627 = load i32, i32* %chInd, align 4
  %628 = sext i32 %627 to i64
  %629 = mul nsw i64 %628, %216
  %630 = getelementptr inbounds double, double* %218, i64 %629
  %631 = getelementptr inbounds double, double* %630, i64 %626
  store double %619, double* %631, align 8
  br label %632
#BasicBlock: 881
  %634 = load i32, i32* %j, align 4
  %635 = add nsw i32 %634, 1
  store i32 %635, i32* %j, align 4
  br label %588
#BasicBlock: 882
  br label %638
#BasicBlock: 883
  %640 = load i32, i32* %aInd, align 4
  %641 = add nsw i32 %640, 1
  store i32 %641, i32* %aInd, align 4
  br label %498
#BasicBlock: 884
  %644 = load i32, i32* %i, align 4
  %645 = sub nsw i32 %644, 1
  %646 = load i32, i32* %6, align 4
  %647 = mul nsw i32 %645, %646
  %648 = load i32, i32* %stepInd, align 4
  %649 = add nsw i32 %647, %648
  %650 = sext i32 %649 to i64
  %651 = load i32, i32* %chInd, align 4
  %652 = sext i32 %651 to i64
  %653 = mul nsw i64 %652, %216
  %654 = getelementptr inbounds double, double* %218, i64 %653
  %655 = getelementptr inbounds double, double* %654, i64 %650
  %656 = load double, double* %655, align 8
  %657 = load i32, i32* %4, align 4
  %658 = sitofp i32 %657 to double
  %659 = fdiv double %656, %658
  %660 = load i32, i32* %i, align 4
  %661 = sub nsw i32 %660, 1
  %662 = load i32, i32* %6, align 4
  %663 = mul nsw i32 %661, %662
  %664 = load i32, i32* %stepInd, align 4
  %665 = add nsw i32 %663, %664
  %666 = sext i32 %665 to i64
  %667 = load i32, i32* %chInd, align 4
  %668 = sext i32 %667 to i64
  %669 = mul nsw i64 %668, %216
  %670 = getelementptr inbounds double, double* %218, i64 %669
  %671 = getelementptr inbounds double, double* %670, i64 %666
  store double %659, double* %671, align 8
  %672 = load i8*, i8** %20, align 8
  call void @llvm.stackrestore(i8* %672)
  br label %794
Builtin - llvm.stackrestore
#BasicBlock: 885
  store i32 0, i32* %j, align 4
  br label %675
#BasicBlock: 886
  %677 = load i32, i32* %j, align 4
  %678 = load i32, i32* %trailLen, align 4
  %679 = icmp slt i32 %677, %678
  br i1 %679, label %680, label %713
#BasicBlock: 887
  %682 = getelementptr inbounds double, double* %254, i64 0
  %683 = load double, double* %682, align 16
  %684 = fmul double -1.000000e+00, %683
  %685 = load i32, i32* %j, align 4
  %686 = sext i32 %685 to i64
  %687 = getelementptr inbounds i32, i32* %420, i64 %686
  %688 = load i32, i32* %687, align 4
  %689 = sitofp i32 %688 to double
  %690 = fadd double %684, %689
  %691 = call double @sp_gamma(double %690)
  br label %692
#BasicBlock: 888
  %694 = getelementptr inbounds double, double* %254, i64 0
  %695 = load double, double* %694, align 16
  %696 = fmul double -1.000000e+00, %695
  %697 = call double @sp_gamma(double %696)
  br label %698
#BasicBlock: 889
  %700 = load i32, i32* %j, align 4
  %701 = sext i32 %700 to i64
  %702 = getelementptr inbounds i32, i32* %420, i64 %701
  %703 = load i32, i32* %702, align 4
  %704 = add nsw i32 %703, 1
  %705 = sitofp i32 %704 to double
  %706 = call double @sp_gamma(double %705)
  br label %707
#BasicBlock: 890
  %709 = fmul double %698, %707
  %710 = fdiv double %692, %709
  %711 = load i32, i32* %j, align 4
  %712 = sext i32 %711 to i64
  %713 = getelementptr inbounds double, double* %439, i64 %712
  store double %710, double* %713, align 8
  br label %714
#BasicBlock: 891
  %716 = load i32, i32* %j, align 4
  %717 = add nsw i32 %716, 1
  store i32 %717, i32* %j, align 4
  br label %676
#BasicBlock: 892
  store i32 0, i32* %j, align 4
  br label %720
#BasicBlock: 893
  %722 = load i32, i32* %j, align 4
  %723 = load i32, i32* %trailLen, align 4
  %724 = icmp slt i32 %722, %723
  br i1 %724, label %725, label %756
#BasicBlock: 894
  %727 = load i32, i32* %i, align 4
  %728 = sub nsw i32 %727, 1
  %729 = load i32, i32* %6, align 4
  %730 = mul nsw i32 %728, %729
  %731 = load i32, i32* %stepInd, align 4
  %732 = add nsw i32 %730, %731
  %733 = load i32, i32* %j, align 4
  %734 = sext i32 %733 to i64
  %735 = getelementptr inbounds i32, i32* %420, i64 %734
  %736 = load i32, i32* %735, align 4
  %737 = sub nsw i32 %732, %736
  %738 = sext i32 %737 to i64
  %739 = load i32, i32* %chInd, align 4
  %740 = sext i32 %739 to i64
  %741 = mul nsw i64 %740, %216
  %742 = getelementptr inbounds double, double* %218, i64 %741
  %743 = getelementptr inbounds double, double* %742, i64 %738
  %744 = load double, double* %743, align 8
  %745 = load i32, i32* %j, align 4
  %746 = sext i32 %745 to i64
  %747 = getelementptr inbounds double, double* %458, i64 %746
  store double %744, double* %747, align 8
  %748 = load i32, i32* %i, align 4
  %749 = sub nsw i32 %748, 1
  %750 = load i32, i32* %6, align 4
  %751 = mul nsw i32 %749, %750
  %752 = load i32, i32* %stepInd, align 4
  %753 = add nsw i32 %751, %752
  store i32 %753, i32* %a, align 4
  br label %754
#BasicBlock: 895
  %756 = load i32, i32* %j, align 4
  %757 = add nsw i32 %756, 1
  store i32 %757, i32* %j, align 4
  br label %721
#BasicBlock: 896
  store i32 0, i32* %j, align 4
  br label %760
#BasicBlock: 897
  %762 = load i32, i32* %j, align 4
  %763 = load i32, i32* %trailLen, align 4
  %764 = icmp slt i32 %762, %763
  br i1 %764, label %765, label %805
#BasicBlock: 898
  %767 = load i32, i32* %j, align 4
  %768 = sext i32 %767 to i64
  %769 = getelementptr inbounds double, double* %458, i64 %768
  %770 = load double, double* %769, align 8
  %771 = load i32, i32* %j, align 4
  %772 = sext i32 %771 to i64
  %773 = getelementptr inbounds double, double* %439, i64 %772
  %774 = load double, double* %773, align 8
  %775 = fmul double %770, %774
  store double %775, double* %xtempXprefact, align 8
  %776 = load i32, i32* %i, align 4
  %777 = sub nsw i32 %776, 1
  %778 = load i32, i32* %6, align 4
  %779 = mul nsw i32 %777, %778
  %780 = load i32, i32* %stepInd, align 4
  %781 = add nsw i32 %779, %780
  %782 = sext i32 %781 to i64
  %783 = load i32, i32* %chInd, align 4
  %784 = sext i32 %783 to i64
  %785 = mul nsw i64 %784, %216
  %786 = getelementptr inbounds double, double* %218, i64 %785
  %787 = getelementptr inbounds double, double* %786, i64 %782
  %788 = load double, double* %787, align 8
  %789 = load double, double* %xtempXprefact, align 8
  %790 = fsub double %788, %789
  %791 = load i32, i32* %i, align 4
  %792 = sub nsw i32 %791, 1
  %793 = load i32, i32* %6, align 4
  %794 = mul nsw i32 %792, %793
  %795 = load i32, i32* %stepInd, align 4
  %796 = add nsw i32 %794, %795
  %797 = sext i32 %796 to i64
  %798 = load i32, i32* %chInd, align 4
  %799 = sext i32 %798 to i64
  %800 = mul nsw i64 %799, %216
  %801 = getelementptr inbounds double, double* %218, i64 %800
  %802 = getelementptr inbounds double, double* %801, i64 %797
  store double %790, double* %802, align 8
  br label %803
#BasicBlock: 899
  %805 = load i32, i32* %j, align 4
  %806 = add nsw i32 %805, 1
  store i32 %806, i32* %j, align 4
  br label %761
#BasicBlock: 900
  %809 = load i8*, i8** %20, align 8
  call void @llvm.stackrestore(i8* %809)
  br label %810
Builtin - llvm.stackrestore
#BasicBlock: 901
  %812 = load i32, i32* %chInd, align 4
  %813 = add nsw i32 %812, 1
  store i32 %813, i32* %chInd, align 4
  br label %364
#BasicBlock: 902
  %816 = load i32, i32* %8, align 4
  %817 = zext i32 %816 to i64
  %818 = call i8* @llvm.stacksave()
  br label %819
Builtin - llvm.stacksave
#BasicBlock: 903
  store i8* %819, i8** %21, align 8
  %821 = alloca double, i64 %818, align 16
  store i32 0, i32* %j, align 4
  br label %822
#BasicBlock: 904
  %824 = load i32, i32* %j, align 4
  %825 = load i32, i32* %8, align 4
  %826 = icmp slt i32 %824, %825
  br i1 %826, label %827, label %834
#BasicBlock: 905
  %829 = load i32, i32* %j, align 4
  %830 = sext i32 %829 to i64
  %831 = getelementptr inbounds double, double* %821, i64 %830
  store double 0.000000e+00, double* %831, align 8
  br label %832
#BasicBlock: 906
  %834 = load i32, i32* %j, align 4
  %835 = add nsw i32 %834, 1
  store i32 %835, i32* %j, align 4
  br label %823
#BasicBlock: 907
  %838 = load i32, i32* %11, align 4
  %839 = zext i32 %838 to i64
  %840 = alloca double, i64 %839, align 16
  store i32 0, i32* %j, align 4
  br label %841
#BasicBlock: 908
  %843 = load i32, i32* %j, align 4
  %844 = load i32, i32* %11, align 4
  %845 = icmp slt i32 %843, %844
  br i1 %845, label %846, label %853
#BasicBlock: 909
  %848 = load i32, i32* %j, align 4
  %849 = sext i32 %848 to i64
  %850 = getelementptr inbounds double, double* %840, i64 %849
  store double 0.000000e+00, double* %850, align 8
  br label %851
#BasicBlock: 910
  %853 = load i32, i32* %j, align 4
  %854 = add nsw i32 %853, 1
  store i32 %854, i32* %j, align 4
  br label %842
#BasicBlock: 911
  %857 = load i32, i32* %17, align 4
  %858 = mul nsw i32 %857, 1
  %859 = zext i32 %858 to i64
  %860 = alloca double, i64 %859, align 16
  store i32 0, i32* %j, align 4
  br label %861
#BasicBlock: 912
  %863 = load i32, i32* %j, align 4
  %864 = load i32, i32* %17, align 4
  %865 = mul nsw i32 %864, 1
  %866 = icmp slt i32 %863, %865
  br i1 %866, label %867, label %874
#BasicBlock: 913
  %869 = load i32, i32* %j, align 4
  %870 = sext i32 %869 to i64
  %871 = getelementptr inbounds double, double* %860, i64 %870
  store double 0.000000e+00, double* %871, align 8
  br label %872
#BasicBlock: 914
  %874 = load i32, i32* %j, align 4
  %875 = add nsw i32 %874, 1
  store i32 %875, i32* %j, align 4
  br label %862
#BasicBlock: 915
  %878 = load i32, i32* %14, align 4
  %879 = mul nsw i32 %878, 1
  %880 = zext i32 %879 to i64
  %881 = alloca double, i64 %880, align 16
  store i32 0, i32* %j, align 4
  br label %882
#BasicBlock: 916
  %884 = load i32, i32* %j, align 4
  %885 = load i32, i32* %14, align 4
  %886 = mul nsw i32 %885, 1
  %887 = icmp slt i32 %884, %886
  br i1 %887, label %888, label %895
#BasicBlock: 917
  %890 = load i32, i32* %j, align 4
  %891 = sext i32 %890 to i64
  %892 = getelementptr inbounds double, double* %881, i64 %891
  store double 0.000000e+00, double* %892, align 8
  br label %893
#BasicBlock: 918
  %895 = load i32, i32* %j, align 4
  %896 = add nsw i32 %895, 1
  store i32 %896, i32* %j, align 4
  br label %883
#BasicBlock: 919
  store i32 0, i32* %j, align 4
  br label %899
#BasicBlock: 920
  %901 = load i32, i32* %j, align 4
  %902 = load i32, i32* %17, align 4
  %903 = icmp slt i32 %901, %902
  br i1 %903, label %904, label %925
#BasicBlock: 921
  %906 = load i32, i32* %i, align 4
  %907 = sub nsw i32 %906, 1
  %908 = load i32, i32* %6, align 4
  %909 = mul nsw i32 %907, %908
  %910 = load i32, i32* %stepInd, align 4
  %911 = add nsw i32 %909, %910
  %912 = sub nsw i32 %911, 1
  %913 = sext i32 %912 to i64
  %914 = load i32, i32* %j, align 4
  %915 = sext i32 %914 to i64
  %916 = mul nsw i64 %915, %216
  %917 = getelementptr inbounds double, double* %218, i64 %916
  %918 = getelementptr inbounds double, double* %917, i64 %913
  %919 = load double, double* %918, align 8
  %920 = load i32, i32* %j, align 4
  %921 = sext i32 %920 to i64
  %922 = getelementptr inbounds double, double* %860, i64 %921
  store double %919, double* %922, align 8
  br label %923
#BasicBlock: 922
  %925 = load i32, i32* %j, align 4
  %926 = add nsw i32 %925, 1
  store i32 %926, i32* %j, align 4
  br label %900
#BasicBlock: 923
  store i32 0, i32* %j, align 4
  br label %929
#BasicBlock: 924
  %931 = load i32, i32* %j, align 4
  %932 = load i32, i32* %14, align 4
  %933 = icmp slt i32 %931, %932
  br i1 %933, label %934, label %955
#BasicBlock: 925
  %936 = load i32, i32* %j, align 4
  %937 = load i32, i32* %15, align 4
  %938 = mul nsw i32 %936, %937
  %939 = load i32, i32* %i, align 4
  %940 = sub nsw i32 %939, 1
  %941 = load i32, i32* %6, align 4
  %942 = mul nsw i32 %940, %941
  %943 = load i32, i32* %stepInd, align 4
  %944 = add nsw i32 %942, %943
  %945 = add nsw i32 %938, %944
  %946 = sext i32 %945 to i64
  %947 = load double*, double** %13, align 8
  %948 = getelementptr inbounds double, double* %947, i64 %946
  %949 = load double, double* %948, align 8
  %950 = load i32, i32* %j, align 4
  %951 = sext i32 %950 to i64
  %952 = getelementptr inbounds double, double* %881, i64 %951
  store double %949, double* %952, align 8
  br label %953
#BasicBlock: 926
  %955 = load i32, i32* %j, align 4
  %956 = add nsw i32 %955, 1
  store i32 %956, i32* %j, align 4
  br label %930
#BasicBlock: 927
  %959 = load double*, double** %7, align 8
  %960 = load i32, i32* %8, align 4
  %961 = load i32, i32* %9, align 4
  %962 = load i32, i32* %17, align 4
  call void @mult_double(double* %959, double* %860, double* %821, i32 %960, i32 %961, i32 %962, i32 1)
  br label %963
#BasicBlock: 928
  %965 = load double*, double** %10, align 8
  %966 = load i32, i32* %11, align 4
  %967 = load i32, i32* %12, align 4
  %968 = load i32, i32* %14, align 4
  call void @mult_double(double* %965, double* %881, double* %840, i32 %966, i32 %967, i32 %968, i32 1)
  br label %969
#BasicBlock: 929
  store i32 0, i32* %j, align 4
  br label %971
#BasicBlock: 930
  %973 = load i32, i32* %j, align 4
  %974 = load i32, i32* %17, align 4
  %975 = icmp slt i32 %973, %974
  br i1 %975, label %976, label %1015
#BasicBlock: 931
  %978 = load i32, i32* %i, align 4
  %979 = sub nsw i32 %978, 1
  %980 = load i32, i32* %6, align 4
  %981 = mul nsw i32 %979, %980
  %982 = load i32, i32* %stepInd, align 4
  %983 = add nsw i32 %981, %982
  %984 = sext i32 %983 to i64
  %985 = load i32, i32* %j, align 4
  %986 = sext i32 %985 to i64
  %987 = mul nsw i64 %986, %216
  %988 = getelementptr inbounds double, double* %218, i64 %987
  %989 = getelementptr inbounds double, double* %988, i64 %984
  %990 = load double, double* %989, align 8
  %991 = load i32, i32* %j, align 4
  %992 = sext i32 %991 to i64
  %993 = getelementptr inbounds double, double* %821, i64 %992
  %994 = load double, double* %993, align 8
  %995 = fadd double %990, %994
  %996 = load i32, i32* %j, align 4
  %997 = sext i32 %996 to i64
  %998 = getelementptr inbounds double, double* %840, i64 %997
  %999 = load double, double* %998, align 8
  %1000 = fadd double %995, %999
  %1001 = load i32, i32* %i, align 4
  %1002 = sub nsw i32 %1001, 1
  %1003 = load i32, i32* %6, align 4
  %1004 = mul nsw i32 %1002, %1003
  %1005 = load i32, i32* %stepInd, align 4
  %1006 = add nsw i32 %1004, %1005
  %1007 = sext i32 %1006 to i64
  %1008 = load i32, i32* %j, align 4
  %1009 = sext i32 %1008 to i64
  %1010 = mul nsw i64 %1009, %216
  %1011 = getelementptr inbounds double, double* %218, i64 %1010
  %1012 = getelementptr inbounds double, double* %1011, i64 %1007
  store double %1000, double* %1012, align 8
  br label %1013
#BasicBlock: 932
  %1015 = load i32, i32* %j, align 4
  %1016 = add nsw i32 %1015, 1
  store i32 %1016, i32* %j, align 4
  br label %972
#BasicBlock: 933
  %1019 = load i8*, i8** %21, align 8
  call void @llvm.stackrestore(i8* %1019)
  br label %1020
Builtin - llvm.stackrestore
#BasicBlock: 934
  %1022 = load i32, i32* %stepInd, align 4
  %1023 = add nsw i32 %1022, 1
  store i32 %1023, i32* %stepInd, align 4
  br label %357
#BasicBlock: 935
  store i32 0, i32* %j, align 4
  br label %1026
#BasicBlock: 936
  %1028 = load i32, i32* %j, align 4
  %1029 = load i32, i32* %17, align 4
  %1030 = icmp slt i32 %1028, %1029
  br i1 %1030, label %1031, label %1061
#BasicBlock: 937
  %1033 = load i32, i32* %i, align 4
  %1034 = sub nsw i32 %1033, 1
  store i32 %1034, i32* %k, align 4
  br label %1035
#BasicBlock: 938
  %1037 = load i32, i32* %k, align 4
  %1038 = load i32, i32* %i, align 4
  %1039 = icmp slt i32 %1037, %1038
  br i1 %1039, label %1040, label %1059
#BasicBlock: 939
  %1042 = load i32, i32* %k, align 4
  %1043 = sext i32 %1042 to i64
  %1044 = load i32, i32* %j, align 4
  %1045 = sext i32 %1044 to i64
  %1046 = mul nsw i64 %1045, %216
  %1047 = getelementptr inbounds double, double* %218, i64 %1046
  %1048 = getelementptr inbounds double, double* %1047, i64 %1043
  %1049 = load double, double* %1048, align 8
  %1050 = load i32, i32* %k, align 4
  %1051 = sext i32 %1050 to i64
  %1052 = load i32, i32* %j, align 4
  %1053 = sext i32 %1052 to i64
  %1054 = mul nsw i64 %1053, %29
  %1055 = getelementptr inbounds double, double* %33, i64 %1054
  %1056 = getelementptr inbounds double, double* %1055, i64 %1051
  store double %1049, double* %1056, align 8
  br label %1057
#BasicBlock: 940
  %1059 = load i32, i32* %k, align 4
  %1060 = add nsw i32 %1059, 1
  store i32 %1060, i32* %k, align 4
  br label %1036
#BasicBlock: 941
  br label %1063
#BasicBlock: 942
  %1065 = load i32, i32* %j, align 4
  %1066 = add nsw i32 %1065, 1
  store i32 %1066, i32* %j, align 4
  br label %1027
#BasicBlock: 943
  br label %1069
#BasicBlock: 944
  %1071 = load i32, i32* %i, align 4
  %1072 = add nsw i32 %1071, 1
  store i32 %1072, i32* %i, align 4
  br label %272
#BasicBlock: 945
  store i32 0, i32* %j, align 4
  br label %1075
#BasicBlock: 946
  %1077 = load i32, i32* %j, align 4
  %1078 = load i32, i32* %17, align 4
  %1079 = icmp slt i32 %1077, %1078
  br i1 %1079, label %1080, label %1109
#BasicBlock: 947
  store i32 0, i32* %k, align 4
  br label %1082
#BasicBlock: 948
  %1084 = load i32, i32* %k, align 4
  %1085 = load i32, i32* %5, align 4
  %1086 = icmp slt i32 %1084, %1085
  br i1 %1086, label %1087, label %1107
#BasicBlock: 949
  %1089 = load i32, i32* %k, align 4
  %1090 = sext i32 %1089 to i64
  %1091 = load i32, i32* %j, align 4
  %1092 = sext i32 %1091 to i64
  %1093 = mul nsw i64 %1092, %29
  %1094 = getelementptr inbounds double, double* %33, i64 %1093
  %1095 = getelementptr inbounds double, double* %1094, i64 %1090
  %1096 = load double, double* %1095, align 8
  %1097 = load i32, i32* %j, align 4
  %1098 = load i32, i32* %5, align 4
  %1099 = mul nsw i32 %1097, %1098
  %1100 = load i32, i32* %k, align 4
  %1101 = add nsw i32 %1099, %1100
  %1102 = sext i32 %1101 to i64
  %1103 = load double*, double** %18, align 8
  %1104 = getelementptr inbounds double, double* %1103, i64 %1102
  store double %1096, double* %1104, align 8
  br label %1105
#BasicBlock: 950
  %1107 = load i32, i32* %k, align 4
  %1108 = add nsw i32 %1107, 1
  store i32 %1108, i32* %k, align 4
  br label %1083
#BasicBlock: 951
  br label %1111
#BasicBlock: 952
  %1113 = load i32, i32* %j, align 4
  %1114 = add nsw i32 %1113, 1
  store i32 %1114, i32* %j, align 4
  br label %1076
#BasicBlock: 953
  %1117 = load i8*, i8** %19, align 8
  call void @llvm.stackrestore(i8* %1117)
  ret void
Builtin - llvm.stackrestore
current function name: cholesky
#BasicBlock: 954
  %1 = alloca double*, align 8
  %2 = alloca i32, align 4
  %3 = alloca double*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %s = alloca double, align 8
  store double* %A, double** %1, align 8
  store i32 %n, i32* %2, align 4
  store double* %Result, double** %3, align 8
  store i32 0, i32* %i, align 4
  br label %4
#BasicBlock: 955
  %6 = load i32, i32* %i, align 4
  %7 = load i32, i32* %2, align 4
  %8 = icmp slt i32 %6, %7
  br i1 %8, label %9, label %109
#BasicBlock: 956
  store i32 0, i32* %j, align 4
  br label %11
#BasicBlock: 957
  %13 = load i32, i32* %j, align 4
  %14 = load i32, i32* %i, align 4
  %15 = add nsw i32 %14, 1
  %16 = icmp slt i32 %13, %15
  br i1 %16, label %17, label %107
#BasicBlock: 958
  store double 0.000000e+00, double* %s, align 8
  store i32 0, i32* %k, align 4
  br label %19
#BasicBlock: 959
  %21 = load i32, i32* %k, align 4
  %22 = load i32, i32* %j, align 4
  %23 = icmp slt i32 %21, %22
  br i1 %23, label %24, label %49
#BasicBlock: 960
  %26 = load i32, i32* %i, align 4
  %27 = load i32, i32* %2, align 4
  %28 = mul nsw i32 %26, %27
  %29 = load i32, i32* %k, align 4
  %30 = add nsw i32 %28, %29
  %31 = sext i32 %30 to i64
  %32 = load double*, double** %3, align 8
  %33 = getelementptr inbounds double, double* %32, i64 %31
  %34 = load double, double* %33, align 8
  %35 = load i32, i32* %j, align 4
  %36 = load i32, i32* %2, align 4
  %37 = mul nsw i32 %35, %36
  %38 = load i32, i32* %k, align 4
  %39 = add nsw i32 %37, %38
  %40 = sext i32 %39 to i64
  %41 = load double*, double** %3, align 8
  %42 = getelementptr inbounds double, double* %41, i64 %40
  %43 = load double, double* %42, align 8
  %44 = fmul double %34, %43
  %45 = load double, double* %s, align 8
  %46 = fadd double %45, %44
  store double %46, double* %s, align 8
  br label %47
#BasicBlock: 961
  %49 = load i32, i32* %k, align 4
  %50 = add nsw i32 %49, 1
  store i32 %50, i32* %k, align 4
  br label %20
#BasicBlock: 962
  %53 = load i32, i32* %i, align 4
  %54 = load i32, i32* %j, align 4
  %55 = icmp eq i32 %53, %54
  br i1 %55, label %56, label %78
#BasicBlock: 963
  %58 = load i32, i32* %i, align 4
  %59 = load i32, i32* %2, align 4
  %60 = mul nsw i32 %58, %59
  %61 = load i32, i32* %i, align 4
  %62 = add nsw i32 %60, %61
  %63 = sext i32 %62 to i64
  %64 = load double*, double** %1, align 8
  %65 = getelementptr inbounds double, double* %64, i64 %63
  %66 = load double, double* %65, align 8
  %67 = load double, double* %s, align 8
  %68 = fsub double %66, %67
  %69 = call double @sqroot(double %68)
  br label %70
#BasicBlock: 964
  %72 = load i32, i32* %i, align 4
  %73 = load i32, i32* %2, align 4
  %74 = mul nsw i32 %72, %73
  %75 = load i32, i32* %j, align 4
  %76 = add nsw i32 %74, %75
  %77 = sext i32 %76 to i64
  %78 = load double*, double** %3, align 8
  %79 = getelementptr inbounds double, double* %78, i64 %77
  store double %70, double* %79, align 8
  br label %111
#BasicBlock: 965
  %82 = load i32, i32* %j, align 4
  %83 = load i32, i32* %2, align 4
  %84 = mul nsw i32 %82, %83
  %85 = load i32, i32* %j, align 4
  %86 = add nsw i32 %84, %85
  %87 = sext i32 %86 to i64
  %88 = load double*, double** %3, align 8
  %89 = getelementptr inbounds double, double* %88, i64 %87
  %90 = load double, double* %89, align 8
  %91 = fdiv double 1.000000e+00, %90
  %92 = load i32, i32* %i, align 4
  %93 = load i32, i32* %2, align 4
  %94 = mul nsw i32 %92, %93
  %95 = load i32, i32* %j, align 4
  %96 = add nsw i32 %94, %95
  %97 = sext i32 %96 to i64
  %98 = load double*, double** %1, align 8
  %99 = getelementptr inbounds double, double* %98, i64 %97
  %100 = load double, double* %99, align 8
  %101 = load double, double* %s, align 8
  %102 = fsub double %100, %101
  %103 = fmul double %91, %102
  %104 = load i32, i32* %i, align 4
  %105 = load i32, i32* %2, align 4
  %106 = mul nsw i32 %104, %105
  %107 = load i32, i32* %j, align 4
  %108 = add nsw i32 %106, %107
  %109 = sext i32 %108 to i64
  %110 = load double*, double** %3, align 8
  %111 = getelementptr inbounds double, double* %110, i64 %109
  store double %103, double* %111, align 8
  br label %112
#BasicBlock: 966
  %114 = load i32, i32* %j, align 4
  %115 = add nsw i32 %114, 1
  store i32 %115, i32* %j, align 4
  br label %12
#BasicBlock: 967
  br label %118
#BasicBlock: 968
  %120 = load i32, i32* %i, align 4
  %121 = add nsw i32 %120, 1
  store i32 %121, i32* %i, align 4
  br label %5
#BasicBlock: 969
  ret void
current function name: factor
#BasicBlock: 970
  %1 = alloca double*, align 8
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca double*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %temp = alloca i32, align 4
  %5 = alloca i8*, align 8
  %rho = alloca i32, align 4
  %l = alloca i32, align 4
  %i1 = alloca i32, align 4
  %j2 = alloca i32, align 4
  %s = alloca double, align 8
  %k3 = alloca i32, align 4
  store double* %A_1d, double** %1, align 8
  store i32 %m, i32* %2, align 4
  store i32 %n, i32* %3, align 4
  store double* %Result, double** %4, align 8
  %6 = load i32, i32* %3, align 4
  %7 = zext i32 %6 to i64
  %8 = load i32, i32* %3, align 4
  %9 = zext i32 %8 to i64
  %10 = call i8* @llvm.stacksave()
  br label %11
Builtin - llvm.stacksave
#BasicBlock: 971
  store i8* %11, i8** %5, align 8
  %13 = mul nuw i64 %7, %10
  %14 = alloca double, i64 %13, align 16
  store i32 0, i32* %i, align 4
  br label %15
#BasicBlock: 972
  %17 = load i32, i32* %i, align 4
  %18 = load i32, i32* %3, align 4
  %19 = icmp slt i32 %17, %18
  br i1 %19, label %20, label %40
#BasicBlock: 973
  store i32 0, i32* %j, align 4
  br label %22
#BasicBlock: 974
  %24 = load i32, i32* %j, align 4
  %25 = load i32, i32* %3, align 4
  %26 = icmp slt i32 %24, %25
  br i1 %26, label %27, label %38
#BasicBlock: 975
  %29 = load i32, i32* %j, align 4
  %30 = sext i32 %29 to i64
  %31 = load i32, i32* %i, align 4
  %32 = sext i32 %31 to i64
  %33 = mul nsw i64 %32, %10
  %34 = getelementptr inbounds double, double* %14, i64 %33
  %35 = getelementptr inbounds double, double* %34, i64 %30
  store double 0.000000e+00, double* %35, align 8
  br label %36
#BasicBlock: 976
  %38 = load i32, i32* %j, align 4
  %39 = add nsw i32 %38, 1
  store i32 %39, i32* %j, align 4
  br label %23
#BasicBlock: 977
  br label %42
#BasicBlock: 978
  %44 = load i32, i32* %i, align 4
  %45 = add nsw i32 %44, 1
  store i32 %45, i32* %i, align 4
  br label %16
#BasicBlock: 979
  %48 = load i32, i32* %2, align 4
  %49 = zext i32 %48 to i64
  %50 = load i32, i32* %2, align 4
  %51 = zext i32 %50 to i64
  %52 = mul nuw i64 %49, %51
  %53 = alloca double, i64 %52, align 16
  store i32 0, i32* %i, align 4
  br label %54
#BasicBlock: 980
  %56 = load i32, i32* %i, align 4
  %57 = load i32, i32* %2, align 4
  %58 = icmp slt i32 %56, %57
  br i1 %58, label %59, label %79
#BasicBlock: 981
  store i32 0, i32* %j, align 4
  br label %61
#BasicBlock: 982
  %63 = load i32, i32* %j, align 4
  %64 = load i32, i32* %2, align 4
  %65 = icmp slt i32 %63, %64
  br i1 %65, label %66, label %77
#BasicBlock: 983
  %68 = load i32, i32* %j, align 4
  %69 = sext i32 %68 to i64
  %70 = load i32, i32* %i, align 4
  %71 = sext i32 %70 to i64
  %72 = mul nsw i64 %71, %51
  %73 = getelementptr inbounds double, double* %53, i64 %72
  %74 = getelementptr inbounds double, double* %73, i64 %69
  store double 0.000000e+00, double* %74, align 8
  br label %75
#BasicBlock: 984
  %77 = load i32, i32* %j, align 4
  %78 = add nsw i32 %77, 1
  store i32 %78, i32* %j, align 4
  br label %62
#BasicBlock: 985
  br label %81
#BasicBlock: 986
  %83 = load i32, i32* %i, align 4
  %84 = add nsw i32 %83, 1
  store i32 %84, i32* %i, align 4
  br label %55
#BasicBlock: 987
  %87 = load i32, i32* %3, align 4
  %88 = zext i32 %87 to i64
  %89 = load i32, i32* %2, align 4
  %90 = zext i32 %89 to i64
  %91 = mul nuw i64 %88, %90
  %92 = alloca double, i64 %91, align 16
  store i32 0, i32* %i, align 4
  br label %93
#BasicBlock: 988
  %95 = load i32, i32* %i, align 4
  %96 = load i32, i32* %3, align 4
  %97 = icmp slt i32 %95, %96
  br i1 %97, label %98, label %118
#BasicBlock: 989
  store i32 0, i32* %j, align 4
  br label %100
#BasicBlock: 990
  %102 = load i32, i32* %j, align 4
  %103 = load i32, i32* %2, align 4
  %104 = icmp slt i32 %102, %103
  br i1 %104, label %105, label %116
#BasicBlock: 991
  %107 = load i32, i32* %j, align 4
  %108 = sext i32 %107 to i64
  %109 = load i32, i32* %i, align 4
  %110 = sext i32 %109 to i64
  %111 = mul nsw i64 %110, %90
  %112 = getelementptr inbounds double, double* %92, i64 %111
  %113 = getelementptr inbounds double, double* %112, i64 %108
  store double 0.000000e+00, double* %113, align 8
  br label %114
#BasicBlock: 992
  %116 = load i32, i32* %j, align 4
  %117 = add nsw i32 %116, 1
  store i32 %117, i32* %j, align 4
  br label %101
#BasicBlock: 993
  br label %120
#BasicBlock: 994
  %122 = load i32, i32* %i, align 4
  %123 = add nsw i32 %122, 1
  store i32 %123, i32* %i, align 4
  br label %94
#BasicBlock: 995
  %126 = load i32, i32* %3, align 4
  %127 = zext i32 %126 to i64
  %128 = load i32, i32* %3, align 4
  %129 = zext i32 %128 to i64
  %130 = mul nuw i64 %127, %129
  %131 = alloca double, i64 %130, align 16
  store i32 0, i32* %i, align 4
  br label %132
#BasicBlock: 996
  %134 = load i32, i32* %i, align 4
  %135 = load i32, i32* %3, align 4
  %136 = icmp slt i32 %134, %135
  br i1 %136, label %137, label %157
#BasicBlock: 997
  store i32 0, i32* %j, align 4
  br label %139
#BasicBlock: 998
  %141 = load i32, i32* %j, align 4
  %142 = load i32, i32* %3, align 4
  %143 = icmp slt i32 %141, %142
  br i1 %143, label %144, label %155
#BasicBlock: 999
  %146 = load i32, i32* %j, align 4
  %147 = sext i32 %146 to i64
  %148 = load i32, i32* %i, align 4
  %149 = sext i32 %148 to i64
  %150 = mul nsw i64 %149, %129
  %151 = getelementptr inbounds double, double* %131, i64 %150
  %152 = getelementptr inbounds double, double* %151, i64 %147
  store double 0.000000e+00, double* %152, align 8
  br label %153
#BasicBlock: 1000
  %155 = load i32, i32* %j, align 4
  %156 = add nsw i32 %155, 1
  store i32 %156, i32* %j, align 4
  br label %140
#BasicBlock: 1001
  br label %159
#BasicBlock: 1002
  %161 = load i32, i32* %i, align 4
  %162 = add nsw i32 %161, 1
  store i32 %162, i32* %i, align 4
  br label %133
#BasicBlock: 1003
  %165 = load i32, i32* %3, align 4
  %166 = load i32, i32* %3, align 4
  %167 = mul nsw i32 %165, %166
  %168 = zext i32 %167 to i64
  %169 = alloca double, i64 %168, align 16
  store i32 0, i32* %i, align 4
  br label %170
#BasicBlock: 1004
  %172 = load i32, i32* %i, align 4
  %173 = load i32, i32* %3, align 4
  %174 = load i32, i32* %3, align 4
  %175 = mul nsw i32 %173, %174
  %176 = icmp slt i32 %172, %175
  br i1 %176, label %177, label %184
#BasicBlock: 1005
  %179 = load i32, i32* %i, align 4
  %180 = sext i32 %179 to i64
  %181 = getelementptr inbounds double, double* %169, i64 %180
  store double 0.000000e+00, double* %181, align 8
  br label %182
#BasicBlock: 1006
  %184 = load i32, i32* %i, align 4
  %185 = add nsw i32 %184, 1
  store i32 %185, i32* %i, align 4
  br label %171
#BasicBlock: 1007
  %188 = load i32, i32* %2, align 4
  %189 = load i32, i32* %2, align 4
  %190 = mul nsw i32 %188, %189
  %191 = zext i32 %190 to i64
  %192 = alloca double, i64 %191, align 16
  store i32 0, i32* %i, align 4
  br label %193
#BasicBlock: 1008
  %195 = load i32, i32* %i, align 4
  %196 = load i32, i32* %2, align 4
  %197 = load i32, i32* %2, align 4
  %198 = mul nsw i32 %196, %197
  %199 = icmp slt i32 %195, %198
  br i1 %199, label %200, label %207
#BasicBlock: 1009
  %202 = load i32, i32* %i, align 4
  %203 = sext i32 %202 to i64
  %204 = getelementptr inbounds double, double* %192, i64 %203
  store double 0.000000e+00, double* %204, align 8
  br label %205
#BasicBlock: 1010
  %207 = load i32, i32* %i, align 4
  %208 = add nsw i32 %207, 1
  store i32 %208, i32* %i, align 4
  br label %194
#BasicBlock: 1011
  %211 = load i32, i32* %2, align 4
  %212 = zext i32 %211 to i64
  %213 = load i32, i32* %2, align 4
  %214 = zext i32 %213 to i64
  %215 = mul nuw i64 %212, %214
  %216 = alloca double, i64 %215, align 16
  store i32 0, i32* %i, align 4
  br label %217
#BasicBlock: 1012
  %219 = load i32, i32* %i, align 4
  %220 = load i32, i32* %2, align 4
  %221 = icmp slt i32 %219, %220
  br i1 %221, label %222, label %242
#BasicBlock: 1013
  store i32 0, i32* %j, align 4
  br label %224
#BasicBlock: 1014
  %226 = load i32, i32* %j, align 4
  %227 = load i32, i32* %2, align 4
  %228 = icmp slt i32 %226, %227
  br i1 %228, label %229, label %240
#BasicBlock: 1015
  %231 = load i32, i32* %j, align 4
  %232 = sext i32 %231 to i64
  %233 = load i32, i32* %i, align 4
  %234 = sext i32 %233 to i64
  %235 = mul nsw i64 %234, %214
  %236 = getelementptr inbounds double, double* %216, i64 %235
  %237 = getelementptr inbounds double, double* %236, i64 %232
  store double 0.000000e+00, double* %237, align 8
  br label %238
#BasicBlock: 1016
  %240 = load i32, i32* %j, align 4
  %241 = add nsw i32 %240, 1
  store i32 %241, i32* %j, align 4
  br label %225
#BasicBlock: 1017
  br label %244
#BasicBlock: 1018
  %246 = load i32, i32* %i, align 4
  %247 = add nsw i32 %246, 1
  store i32 %247, i32* %i, align 4
  br label %218
#BasicBlock: 1019
  %250 = load i32, i32* %3, align 4
  %251 = zext i32 %250 to i64
  %252 = load i32, i32* %3, align 4
  %253 = zext i32 %252 to i64
  %254 = mul nuw i64 %251, %253
  %255 = alloca double, i64 %254, align 16
  store i32 0, i32* %i, align 4
  br label %256
#BasicBlock: 1020
  %258 = load i32, i32* %i, align 4
  %259 = load i32, i32* %3, align 4
  %260 = icmp slt i32 %258, %259
  br i1 %260, label %261, label %281
#BasicBlock: 1021
  store i32 0, i32* %j, align 4
  br label %263
#BasicBlock: 1022
  %265 = load i32, i32* %j, align 4
  %266 = load i32, i32* %3, align 4
  %267 = icmp slt i32 %265, %266
  br i1 %267, label %268, label %279
#BasicBlock: 1023
  %270 = load i32, i32* %j, align 4
  %271 = sext i32 %270 to i64
  %272 = load i32, i32* %i, align 4
  %273 = sext i32 %272 to i64
  %274 = mul nsw i64 %273, %253
  %275 = getelementptr inbounds double, double* %255, i64 %274
  %276 = getelementptr inbounds double, double* %275, i64 %271
  store double 0.000000e+00, double* %276, align 8
  br label %277
#BasicBlock: 1024
  %279 = load i32, i32* %j, align 4
  %280 = add nsw i32 %279, 1
  store i32 %280, i32* %j, align 4
  br label %264
#BasicBlock: 1025
  br label %283
#BasicBlock: 1026
  %285 = load i32, i32* %i, align 4
  %286 = add nsw i32 %285, 1
  store i32 %286, i32* %i, align 4
  br label %257
#BasicBlock: 1027
  %289 = load i32, i32* %2, align 4
  %290 = zext i32 %289 to i64
  %291 = load i32, i32* %2, align 4
  %292 = zext i32 %291 to i64
  %293 = mul nuw i64 %290, %292
  %294 = alloca double, i64 %293, align 16
  store i32 0, i32* %i, align 4
  br label %295
#BasicBlock: 1028
  %297 = load i32, i32* %i, align 4
  %298 = load i32, i32* %2, align 4
  %299 = icmp slt i32 %297, %298
  br i1 %299, label %300, label %320
#BasicBlock: 1029
  store i32 0, i32* %j, align 4
  br label %302
#BasicBlock: 1030
  %304 = load i32, i32* %j, align 4
  %305 = load i32, i32* %2, align 4
  %306 = icmp slt i32 %304, %305
  br i1 %306, label %307, label %318
#BasicBlock: 1031
  %309 = load i32, i32* %j, align 4
  %310 = sext i32 %309 to i64
  %311 = load i32, i32* %i, align 4
  %312 = sext i32 %311 to i64
  %313 = mul nsw i64 %312, %292
  %314 = getelementptr inbounds double, double* %294, i64 %313
  %315 = getelementptr inbounds double, double* %314, i64 %310
  store double 0.000000e+00, double* %315, align 8
  br label %316
#BasicBlock: 1032
  %318 = load i32, i32* %j, align 4
  %319 = add nsw i32 %318, 1
  store i32 %319, i32* %j, align 4
  br label %303
#BasicBlock: 1033
  br label %322
#BasicBlock: 1034
  %324 = load i32, i32* %i, align 4
  %325 = add nsw i32 %324, 1
  store i32 %325, i32* %i, align 4
  br label %296
#BasicBlock: 1035
  store i32 2, i32* %rho, align 4
  %328 = load i32, i32* %2, align 4
  %329 = zext i32 %328 to i64
  %330 = load i32, i32* %3, align 4
  %331 = zext i32 %330 to i64
  %332 = mul nuw i64 %329, %331
  %333 = alloca double, i64 %332, align 16
  store i32 0, i32* %l, align 4
  store i32 0, i32* %i, align 4
  br label %334
#BasicBlock: 1036
  %336 = load i32, i32* %i, align 4
  %337 = load i32, i32* %2, align 4
  %338 = icmp slt i32 %336, %337
  br i1 %338, label %339, label %366
#BasicBlock: 1037
  store i32 0, i32* %j, align 4
  br label %341
#BasicBlock: 1038
  %343 = load i32, i32* %j, align 4
  %344 = load i32, i32* %3, align 4
  %345 = icmp slt i32 %343, %344
  br i1 %345, label %346, label %364
#BasicBlock: 1039
  %348 = load i32, i32* %l, align 4
  %349 = sext i32 %348 to i64
  %350 = load double*, double** %1, align 8
  %351 = getelementptr inbounds double, double* %350, i64 %349
  %352 = load double, double* %351, align 8
  %353 = load i32, i32* %j, align 4
  %354 = sext i32 %353 to i64
  %355 = load i32, i32* %i, align 4
  %356 = sext i32 %355 to i64
  %357 = mul nsw i64 %356, %331
  %358 = getelementptr inbounds double, double* %333, i64 %357
  %359 = getelementptr inbounds double, double* %358, i64 %354
  store double %352, double* %359, align 8
  %360 = load i32, i32* %l, align 4
  %361 = add nsw i32 %360, 1
  store i32 %361, i32* %l, align 4
  br label %362
#BasicBlock: 1040
  %364 = load i32, i32* %j, align 4
  %365 = add nsw i32 %364, 1
  store i32 %365, i32* %j, align 4
  br label %342
#BasicBlock: 1041
  br label %368
#BasicBlock: 1042
  %370 = load i32, i32* %i, align 4
  %371 = add nsw i32 %370, 1
  store i32 %371, i32* %i, align 4
  br label %335
#BasicBlock: 1043
  %374 = load i32, i32* %2, align 4
  %375 = load i32, i32* %3, align 4
  %376 = icmp sge i32 %374, %375
  br i1 %376, label %377, label %611
#BasicBlock: 1044
  store i32 0, i32* %i, align 4
  br label %379
#BasicBlock: 1045
  %381 = load i32, i32* %i, align 4
  %382 = load i32, i32* %3, align 4
  %383 = icmp slt i32 %381, %382
  br i1 %383, label %384, label %412
#BasicBlock: 1046
  store i32 0, i32* %j, align 4
  br label %386
#BasicBlock: 1047
  %388 = load i32, i32* %j, align 4
  %389 = load i32, i32* %3, align 4
  %390 = icmp slt i32 %388, %389
  br i1 %390, label %391, label %410
#BasicBlock: 1048
  %393 = load i32, i32* %i, align 4
  %394 = load i32, i32* %j, align 4
  %395 = icmp eq i32 %393, %394
  br i1 %395, label %396, label %407
#BasicBlock: 1049
  %398 = load i32, i32* %rho, align 4
  %399 = sitofp i32 %398 to double
  %400 = fmul double 1.000000e+00, %399
  %401 = load i32, i32* %j, align 4
  %402 = sext i32 %401 to i64
  %403 = load i32, i32* %i, align 4
  %404 = sext i32 %403 to i64
  %405 = mul nsw i64 %404, %10
  %406 = getelementptr inbounds double, double* %14, i64 %405
  %407 = getelementptr inbounds double, double* %406, i64 %402
  store double %400, double* %407, align 8
  br label %408
#BasicBlock: 1050
  br label %410
#BasicBlock: 1051
  %412 = load i32, i32* %j, align 4
  %413 = add nsw i32 %412, 1
  store i32 %413, i32* %j, align 4
  br label %387
#BasicBlock: 1052
  br label %416
#BasicBlock: 1053
  %418 = load i32, i32* %i, align 4
  %419 = add nsw i32 %418, 1
  store i32 %419, i32* %i, align 4
  br label %380
#BasicBlock: 1054
  store i32 0, i32* %i, align 4
  br label %422
#BasicBlock: 1055
  %424 = load i32, i32* %i, align 4
  %425 = load i32, i32* %3, align 4
  %426 = icmp slt i32 %424, %425
  br i1 %426, label %427, label %452
#BasicBlock: 1056
  store i32 0, i32* %j, align 4
  br label %429
#BasicBlock: 1057
  %431 = load i32, i32* %j, align 4
  %432 = load i32, i32* %3, align 4
  %433 = icmp slt i32 %431, %432
  br i1 %433, label %434, label %450
#BasicBlock: 1058
  %436 = load i32, i32* %i, align 4
  %437 = load i32, i32* %j, align 4
  %438 = icmp ne i32 %436, %437
  br i1 %438, label %439, label %447
#BasicBlock: 1059
  %441 = load i32, i32* %j, align 4
  %442 = sext i32 %441 to i64
  %443 = load i32, i32* %i, align 4
  %444 = sext i32 %443 to i64
  %445 = mul nsw i64 %444, %10
  %446 = getelementptr inbounds double, double* %14, i64 %445
  %447 = getelementptr inbounds double, double* %446, i64 %442
  store double 0.000000e+00, double* %447, align 8
  br label %448
#BasicBlock: 1060
  br label %450
#BasicBlock: 1061
  %452 = load i32, i32* %j, align 4
  %453 = add nsw i32 %452, 1
  store i32 %453, i32* %j, align 4
  br label %430
#BasicBlock: 1062
  br label %456
#BasicBlock: 1063
  %458 = load i32, i32* %i, align 4
  %459 = add nsw i32 %458, 1
  store i32 %459, i32* %i, align 4
  br label %423
#BasicBlock: 1064
  store i32 0, i32* %i, align 4
  br label %462
#BasicBlock: 1065
  %464 = load i32, i32* %i, align 4
  %465 = load i32, i32* %2, align 4
  %466 = icmp slt i32 %464, %465
  br i1 %466, label %467, label %495
#BasicBlock: 1066
  store i32 0, i32* %j, align 4
  br label %469
#BasicBlock: 1067
  %471 = load i32, i32* %j, align 4
  %472 = load i32, i32* %3, align 4
  %473 = icmp slt i32 %471, %472
  br i1 %473, label %474, label %493
#BasicBlock: 1068
  %476 = load i32, i32* %j, align 4
  %477 = sext i32 %476 to i64
  %478 = load i32, i32* %i, align 4
  %479 = sext i32 %478 to i64
  %480 = mul nsw i64 %479, %331
  %481 = getelementptr inbounds double, double* %333, i64 %480
  %482 = getelementptr inbounds double, double* %481, i64 %477
  %483 = load double, double* %482, align 8
  %484 = load i32, i32* %i, align 4
  %485 = sext i32 %484 to i64
  %486 = load i32, i32* %j, align 4
  %487 = sext i32 %486 to i64
  %488 = mul nsw i64 %487, %90
  %489 = getelementptr inbounds double, double* %92, i64 %488
  %490 = getelementptr inbounds double, double* %489, i64 %485
  store double %483, double* %490, align 8
  br label %491
#BasicBlock: 1069
  %493 = load i32, i32* %j, align 4
  %494 = add nsw i32 %493, 1
  store i32 %494, i32* %j, align 4
  br label %470
#BasicBlock: 1070
  br label %497
#BasicBlock: 1071
  %499 = load i32, i32* %i, align 4
  %500 = add nsw i32 %499, 1
  store i32 %500, i32* %i, align 4
  br label %463
#BasicBlock: 1072
  store i32 0, i32* %i, align 4
  br label %503
#BasicBlock: 1073
  %505 = load i32, i32* %i, align 4
  %506 = load i32, i32* %3, align 4
  %507 = icmp slt i32 %505, %506
  br i1 %507, label %508, label %563
#BasicBlock: 1074
  store i32 0, i32* %j, align 4
  br label %510
#BasicBlock: 1075
  %512 = load i32, i32* %j, align 4
  %513 = load i32, i32* %3, align 4
  %514 = icmp slt i32 %512, %513
  br i1 %514, label %515, label %561
#BasicBlock: 1076
  store i32 0, i32* %k, align 4
  br label %517
#BasicBlock: 1077
  %519 = load i32, i32* %k, align 4
  %520 = load i32, i32* %2, align 4
  %521 = icmp slt i32 %519, %520
  br i1 %521, label %522, label %559
#BasicBlock: 1078
  %524 = load i32, i32* %j, align 4
  %525 = sext i32 %524 to i64
  %526 = load i32, i32* %i, align 4
  %527 = sext i32 %526 to i64
  %528 = mul nsw i64 %527, %129
  %529 = getelementptr inbounds double, double* %131, i64 %528
  %530 = getelementptr inbounds double, double* %529, i64 %525
  %531 = load double, double* %530, align 8
  %532 = load i32, i32* %k, align 4
  %533 = sext i32 %532 to i64
  %534 = load i32, i32* %i, align 4
  %535 = sext i32 %534 to i64
  %536 = mul nsw i64 %535, %90
  %537 = getelementptr inbounds double, double* %92, i64 %536
  %538 = getelementptr inbounds double, double* %537, i64 %533
  %539 = load double, double* %538, align 8
  %540 = load i32, i32* %j, align 4
  %541 = sext i32 %540 to i64
  %542 = load i32, i32* %k, align 4
  %543 = sext i32 %542 to i64
  %544 = mul nsw i64 %543, %331
  %545 = getelementptr inbounds double, double* %333, i64 %544
  %546 = getelementptr inbounds double, double* %545, i64 %541
  %547 = load double, double* %546, align 8
  %548 = fmul double %539, %547
  %549 = fadd double %531, %548
  %550 = load i32, i32* %j, align 4
  %551 = sext i32 %550 to i64
  %552 = load i32, i32* %i, align 4
  %553 = sext i32 %552 to i64
  %554 = mul nsw i64 %553, %129
  %555 = getelementptr inbounds double, double* %131, i64 %554
  %556 = getelementptr inbounds double, double* %555, i64 %551
  store double %549, double* %556, align 8
  br label %557
#BasicBlock: 1079
  %559 = load i32, i32* %k, align 4
  %560 = add nsw i32 %559, 1
  store i32 %560, i32* %k, align 4
  br label %518
#BasicBlock: 1080
  br label %563
#BasicBlock: 1081
  %565 = load i32, i32* %j, align 4
  %566 = add nsw i32 %565, 1
  store i32 %566, i32* %j, align 4
  br label %511
#BasicBlock: 1082
  br label %569
#BasicBlock: 1083
  %571 = load i32, i32* %i, align 4
  %572 = add nsw i32 %571, 1
  store i32 %572, i32* %i, align 4
  br label %504
#BasicBlock: 1084
  store i32 0, i32* %i, align 4
  br label %575
#BasicBlock: 1085
  %577 = load i32, i32* %i, align 4
  %578 = load i32, i32* %3, align 4
  %579 = icmp slt i32 %577, %578
  br i1 %579, label %580, label %617
#BasicBlock: 1086
  store i32 0, i32* %j, align 4
  br label %582
#BasicBlock: 1087
  %584 = load i32, i32* %j, align 4
  %585 = load i32, i32* %3, align 4
  %586 = icmp slt i32 %584, %585
  br i1 %586, label %587, label %615
#BasicBlock: 1088
  %589 = load i32, i32* %j, align 4
  %590 = sext i32 %589 to i64
  %591 = load i32, i32* %i, align 4
  %592 = sext i32 %591 to i64
  %593 = mul nsw i64 %592, %129
  %594 = getelementptr inbounds double, double* %131, i64 %593
  %595 = getelementptr inbounds double, double* %594, i64 %590
  %596 = load double, double* %595, align 8
  %597 = load i32, i32* %j, align 4
  %598 = sext i32 %597 to i64
  %599 = load i32, i32* %i, align 4
  %600 = sext i32 %599 to i64
  %601 = mul nsw i64 %600, %10
  %602 = getelementptr inbounds double, double* %14, i64 %601
  %603 = getelementptr inbounds double, double* %602, i64 %598
  %604 = load double, double* %603, align 8
  %605 = fadd double %596, %604
  %606 = load i32, i32* %j, align 4
  %607 = sext i32 %606 to i64
  %608 = load i32, i32* %i, align 4
  %609 = sext i32 %608 to i64
  %610 = mul nsw i64 %609, %253
  %611 = getelementptr inbounds double, double* %255, i64 %610
  %612 = getelementptr inbounds double, double* %611, i64 %607
  store double %605, double* %612, align 8
  br label %613
#BasicBlock: 1089
  %615 = load i32, i32* %j, align 4
  %616 = add nsw i32 %615, 1
  store i32 %616, i32* %j, align 4
  br label %583
#BasicBlock: 1090
  br label %619
#BasicBlock: 1091
  %621 = load i32, i32* %i, align 4
  %622 = add nsw i32 %621, 1
  store i32 %622, i32* %i, align 4
  br label %576
#BasicBlock: 1092
  store i32 0, i32* %i, align 4
  br label %625
#BasicBlock: 1093
  %627 = load i32, i32* %i, align 4
  %628 = load i32, i32* %3, align 4
  %629 = icmp slt i32 %627, %628
  br i1 %629, label %630, label %658
#BasicBlock: 1094
  store i32 0, i32* %j, align 4
  br label %632
#BasicBlock: 1095
  %634 = load i32, i32* %j, align 4
  %635 = load i32, i32* %3, align 4
  %636 = icmp slt i32 %634, %635
  br i1 %636, label %637, label %656
#BasicBlock: 1096
  %639 = load i32, i32* %j, align 4
  %640 = sext i32 %639 to i64
  %641 = load i32, i32* %i, align 4
  %642 = sext i32 %641 to i64
  %643 = mul nsw i64 %642, %253
  %644 = getelementptr inbounds double, double* %255, i64 %643
  %645 = getelementptr inbounds double, double* %644, i64 %640
  %646 = load double, double* %645, align 8
  %647 = load i32, i32* %i, align 4
  %648 = load i32, i32* %3, align 4
  %649 = mul nsw i32 %647, %648
  %650 = load i32, i32* %j, align 4
  %651 = add nsw i32 %649, %650
  %652 = sext i32 %651 to i64
  %653 = getelementptr inbounds double, double* %169, i64 %652
  store double %646, double* %653, align 8
  br label %654
#BasicBlock: 1097
  %656 = load i32, i32* %j, align 4
  %657 = add nsw i32 %656, 1
  store i32 %657, i32* %j, align 4
  br label %633
#BasicBlock: 1098
  br label %660
#BasicBlock: 1099
  %662 = load i32, i32* %i, align 4
  %663 = add nsw i32 %662, 1
  store i32 %663, i32* %i, align 4
  br label %626
#BasicBlock: 1100
  %666 = load i32, i32* %3, align 4
  %667 = load double*, double** %4, align 8
  call void @cholesky(double* %169, i32 %666, double* %667)
  br label %1003
#BasicBlock: 1101
  store i32 0, i32* %i, align 4
  br label %670
#BasicBlock: 1102
  %672 = load i32, i32* %i, align 4
  %673 = load i32, i32* %2, align 4
  %674 = icmp slt i32 %672, %673
  br i1 %674, label %675, label %700
#BasicBlock: 1103
  store i32 0, i32* %j, align 4
  br label %677
#BasicBlock: 1104
  %679 = load i32, i32* %j, align 4
  %680 = load i32, i32* %2, align 4
  %681 = icmp slt i32 %679, %680
  br i1 %681, label %682, label %698
#BasicBlock: 1105
  %684 = load i32, i32* %i, align 4
  %685 = load i32, i32* %j, align 4
  %686 = icmp eq i32 %684, %685
  br i1 %686, label %687, label %695
#BasicBlock: 1106
  %689 = load i32, i32* %j, align 4
  %690 = sext i32 %689 to i64
  %691 = load i32, i32* %i, align 4
  %692 = sext i32 %691 to i64
  %693 = mul nsw i64 %692, %51
  %694 = getelementptr inbounds double, double* %53, i64 %693
  %695 = getelementptr inbounds double, double* %694, i64 %690
  store double 1.000000e+00, double* %695, align 8
  br label %696
#BasicBlock: 1107
  br label %698
#BasicBlock: 1108
  %700 = load i32, i32* %j, align 4
  %701 = add nsw i32 %700, 1
  store i32 %701, i32* %j, align 4
  br label %678
#BasicBlock: 1109
  br label %704
#BasicBlock: 1110
  %706 = load i32, i32* %i, align 4
  %707 = add nsw i32 %706, 1
  store i32 %707, i32* %i, align 4
  br label %671
#BasicBlock: 1111
  store i32 0, i32* %i, align 4
  br label %710
#BasicBlock: 1112
  %712 = load i32, i32* %i, align 4
  %713 = load i32, i32* %2, align 4
  %714 = icmp slt i32 %712, %713
  br i1 %714, label %715, label %740
#BasicBlock: 1113
  store i32 0, i32* %j, align 4
  br label %717
#BasicBlock: 1114
  %719 = load i32, i32* %j, align 4
  %720 = load i32, i32* %2, align 4
  %721 = icmp slt i32 %719, %720
  br i1 %721, label %722, label %738
#BasicBlock: 1115
  %724 = load i32, i32* %i, align 4
  %725 = load i32, i32* %j, align 4
  %726 = icmp ne i32 %724, %725
  br i1 %726, label %727, label %735
#BasicBlock: 1116
  %729 = load i32, i32* %j, align 4
  %730 = sext i32 %729 to i64
  %731 = load i32, i32* %i, align 4
  %732 = sext i32 %731 to i64
  %733 = mul nsw i64 %732, %51
  %734 = getelementptr inbounds double, double* %53, i64 %733
  %735 = getelementptr inbounds double, double* %734, i64 %730
  store double 0.000000e+00, double* %735, align 8
  br label %736
#BasicBlock: 1117
  br label %738
#BasicBlock: 1118
  %740 = load i32, i32* %j, align 4
  %741 = add nsw i32 %740, 1
  store i32 %741, i32* %j, align 4
  br label %718
#BasicBlock: 1119
  br label %744
#BasicBlock: 1120
  %746 = load i32, i32* %i, align 4
  %747 = add nsw i32 %746, 1
  store i32 %747, i32* %i, align 4
  br label %711
#BasicBlock: 1121
  store i32 0, i32* %i, align 4
  br label %750
#BasicBlock: 1122
  %752 = load i32, i32* %i, align 4
  %753 = load i32, i32* %2, align 4
  %754 = icmp slt i32 %752, %753
  br i1 %754, label %755, label %810
#BasicBlock: 1123
  store i32 0, i32* %j, align 4
  br label %757
#BasicBlock: 1124
  %759 = load i32, i32* %j, align 4
  %760 = load i32, i32* %2, align 4
  %761 = icmp slt i32 %759, %760
  br i1 %761, label %762, label %808
#BasicBlock: 1125
  store i32 0, i32* %k, align 4
  br label %764
#BasicBlock: 1126
  %766 = load i32, i32* %k, align 4
  %767 = load i32, i32* %3, align 4
  %768 = icmp slt i32 %766, %767
  br i1 %768, label %769, label %806
#BasicBlock: 1127
  %771 = load i32, i32* %j, align 4
  %772 = sext i32 %771 to i64
  %773 = load i32, i32* %i, align 4
  %774 = sext i32 %773 to i64
  %775 = mul nsw i64 %774, %214
  %776 = getelementptr inbounds double, double* %216, i64 %775
  %777 = getelementptr inbounds double, double* %776, i64 %772
  %778 = load double, double* %777, align 8
  %779 = load i32, i32* %k, align 4
  %780 = sext i32 %779 to i64
  %781 = load i32, i32* %i, align 4
  %782 = sext i32 %781 to i64
  %783 = mul nsw i64 %782, %331
  %784 = getelementptr inbounds double, double* %333, i64 %783
  %785 = getelementptr inbounds double, double* %784, i64 %780
  %786 = load double, double* %785, align 8
  %787 = load i32, i32* %j, align 4
  %788 = sext i32 %787 to i64
  %789 = load i32, i32* %k, align 4
  %790 = sext i32 %789 to i64
  %791 = mul nsw i64 %790, %90
  %792 = getelementptr inbounds double, double* %92, i64 %791
  %793 = getelementptr inbounds double, double* %792, i64 %788
  %794 = load double, double* %793, align 8
  %795 = fmul double %786, %794
  %796 = fadd double %778, %795
  %797 = load i32, i32* %j, align 4
  %798 = sext i32 %797 to i64
  %799 = load i32, i32* %i, align 4
  %800 = sext i32 %799 to i64
  %801 = mul nsw i64 %800, %214
  %802 = getelementptr inbounds double, double* %216, i64 %801
  %803 = getelementptr inbounds double, double* %802, i64 %798
  store double %796, double* %803, align 8
  br label %804
#BasicBlock: 1128
  %806 = load i32, i32* %k, align 4
  %807 = add nsw i32 %806, 1
  store i32 %807, i32* %k, align 4
  br label %765
#BasicBlock: 1129
  br label %810
#BasicBlock: 1130
  %812 = load i32, i32* %j, align 4
  %813 = add nsw i32 %812, 1
  store i32 %813, i32* %j, align 4
  br label %758
#BasicBlock: 1131
  br label %816
#BasicBlock: 1132
  %818 = load i32, i32* %i, align 4
  %819 = add nsw i32 %818, 1
  store i32 %819, i32* %i, align 4
  br label %751
#BasicBlock: 1133
  store i32 0, i32* %i, align 4
  br label %822
#BasicBlock: 1134
  %824 = load i32, i32* %i, align 4
  %825 = load i32, i32* %2, align 4
  %826 = icmp slt i32 %824, %825
  br i1 %826, label %827, label %859
#BasicBlock: 1135
  store i32 0, i32* %j, align 4
  br label %829
#BasicBlock: 1136
  %831 = load i32, i32* %j, align 4
  %832 = load i32, i32* %2, align 4
  %833 = icmp slt i32 %831, %832
  br i1 %833, label %834, label %857
#BasicBlock: 1137
  %836 = load i32, i32* %rho, align 4
  %837 = sdiv i32 1, %836
  %838 = sitofp i32 %837 to double
  %839 = load i32, i32* %j, align 4
  %840 = sext i32 %839 to i64
  %841 = load i32, i32* %i, align 4
  %842 = sext i32 %841 to i64
  %843 = mul nsw i64 %842, %214
  %844 = getelementptr inbounds double, double* %216, i64 %843
  %845 = getelementptr inbounds double, double* %844, i64 %840
  %846 = load double, double* %845, align 8
  %847 = fmul double %838, %846
  %848 = load i32, i32* %j, align 4
  %849 = sext i32 %848 to i64
  %850 = load i32, i32* %i, align 4
  %851 = sext i32 %850 to i64
  %852 = mul nsw i64 %851, %214
  %853 = getelementptr inbounds double, double* %216, i64 %852
  %854 = getelementptr inbounds double, double* %853, i64 %849
  store double %847, double* %854, align 8
  br label %855
#BasicBlock: 1138
  %857 = load i32, i32* %j, align 4
  %858 = add nsw i32 %857, 1
  store i32 %858, i32* %j, align 4
  br label %830
#BasicBlock: 1139
  br label %861
#BasicBlock: 1140
  %863 = load i32, i32* %i, align 4
  %864 = add nsw i32 %863, 1
  store i32 %864, i32* %i, align 4
  br label %823
#BasicBlock: 1141
  store i32 0, i32* %i, align 4
  br label %867
#BasicBlock: 1142
  %869 = load i32, i32* %i, align 4
  %870 = load i32, i32* %2, align 4
  %871 = icmp slt i32 %869, %870
  br i1 %871, label %872, label %909
#BasicBlock: 1143
  store i32 0, i32* %j, align 4
  br label %874
#BasicBlock: 1144
  %876 = load i32, i32* %j, align 4
  %877 = load i32, i32* %2, align 4
  %878 = icmp slt i32 %876, %877
  br i1 %878, label %879, label %907
#BasicBlock: 1145
  %881 = load i32, i32* %j, align 4
  %882 = sext i32 %881 to i64
  %883 = load i32, i32* %i, align 4
  %884 = sext i32 %883 to i64
  %885 = mul nsw i64 %884, %214
  %886 = getelementptr inbounds double, double* %216, i64 %885
  %887 = getelementptr inbounds double, double* %886, i64 %882
  %888 = load double, double* %887, align 8
  %889 = load i32, i32* %j, align 4
  %890 = sext i32 %889 to i64
  %891 = load i32, i32* %i, align 4
  %892 = sext i32 %891 to i64
  %893 = mul nsw i64 %892, %51
  %894 = getelementptr inbounds double, double* %53, i64 %893
  %895 = getelementptr inbounds double, double* %894, i64 %890
  %896 = load double, double* %895, align 8
  %897 = fadd double %888, %896
  %898 = load i32, i32* %j, align 4
  %899 = sext i32 %898 to i64
  %900 = load i32, i32* %i, align 4
  %901 = sext i32 %900 to i64
  %902 = mul nsw i64 %901, %292
  %903 = getelementptr inbounds double, double* %294, i64 %902
  %904 = getelementptr inbounds double, double* %903, i64 %899
  store double %897, double* %904, align 8
  br label %905
#BasicBlock: 1146
  %907 = load i32, i32* %j, align 4
  %908 = add nsw i32 %907, 1
  store i32 %908, i32* %j, align 4
  br label %875
#BasicBlock: 1147
  br label %911
#BasicBlock: 1148
  %913 = load i32, i32* %i, align 4
  %914 = add nsw i32 %913, 1
  store i32 %914, i32* %i, align 4
  br label %868
#BasicBlock: 1149
  store i32 0, i32* %i, align 4
  br label %917
#BasicBlock: 1150
  %919 = load i32, i32* %i, align 4
  %920 = load i32, i32* %2, align 4
  %921 = icmp slt i32 %919, %920
  br i1 %921, label %922, label %950
#BasicBlock: 1151
  store i32 0, i32* %j, align 4
  br label %924
#BasicBlock: 1152
  %926 = load i32, i32* %j, align 4
  %927 = load i32, i32* %2, align 4
  %928 = icmp slt i32 %926, %927
  br i1 %928, label %929, label %948
#BasicBlock: 1153
  %931 = load i32, i32* %j, align 4
  %932 = sext i32 %931 to i64
  %933 = load i32, i32* %i, align 4
  %934 = sext i32 %933 to i64
  %935 = mul nsw i64 %934, %292
  %936 = getelementptr inbounds double, double* %294, i64 %935
  %937 = getelementptr inbounds double, double* %936, i64 %932
  %938 = load double, double* %937, align 8
  %939 = load i32, i32* %i, align 4
  %940 = load i32, i32* %2, align 4
  %941 = mul nsw i32 %939, %940
  %942 = load i32, i32* %j, align 4
  %943 = add nsw i32 %941, %942
  %944 = sext i32 %943 to i64
  %945 = getelementptr inbounds double, double* %192, i64 %944
  store double %938, double* %945, align 8
  br label %946
#BasicBlock: 1154
  %948 = load i32, i32* %j, align 4
  %949 = add nsw i32 %948, 1
  store i32 %949, i32* %j, align 4
  br label %925
#BasicBlock: 1155
  br label %952
#BasicBlock: 1156
  %954 = load i32, i32* %i, align 4
  %955 = add nsw i32 %954, 1
  store i32 %955, i32* %i, align 4
  br label %918
#BasicBlock: 1157
  store i32 0, i32* %i1, align 4
  br label %958
#BasicBlock: 1158
  %960 = load i32, i32* %i1, align 4
  %961 = load i32, i32* %3, align 4
  %962 = icmp slt i32 %960, %961
  br i1 %962, label %963, label %1060
#BasicBlock: 1159
  store i32 0, i32* %j2, align 4
  br label %965
#BasicBlock: 1160
  %967 = load i32, i32* %j2, align 4
  %968 = load i32, i32* %i1, align 4
  %969 = add nsw i32 %968, 1
  %970 = icmp slt i32 %967, %969
  br i1 %970, label %971, label %1058
#BasicBlock: 1161
  store double 0.000000e+00, double* %s, align 8
  store i32 0, i32* %k3, align 4
  br label %973
#BasicBlock: 1162
  %975 = load i32, i32* %k3, align 4
  %976 = load i32, i32* %j2, align 4
  %977 = icmp slt i32 %975, %976
  br i1 %977, label %978, label %1003
#BasicBlock: 1163
  %980 = load i32, i32* %i1, align 4
  %981 = load i32, i32* %3, align 4
  %982 = mul nsw i32 %980, %981
  %983 = load i32, i32* %k3, align 4
  %984 = add nsw i32 %982, %983
  %985 = sext i32 %984 to i64
  %986 = load double*, double** %4, align 8
  %987 = getelementptr inbounds double, double* %986, i64 %985
  %988 = load double, double* %987, align 8
  %989 = load i32, i32* %j2, align 4
  %990 = load i32, i32* %3, align 4
  %991 = mul nsw i32 %989, %990
  %992 = load i32, i32* %k3, align 4
  %993 = add nsw i32 %991, %992
  %994 = sext i32 %993 to i64
  %995 = load double*, double** %4, align 8
  %996 = getelementptr inbounds double, double* %995, i64 %994
  %997 = load double, double* %996, align 8
  %998 = fmul double %988, %997
  %999 = load double, double* %s, align 8
  %1000 = fadd double %999, %998
  store double %1000, double* %s, align 8
  br label %1001
#BasicBlock: 1164
  %1003 = load i32, i32* %k3, align 4
  %1004 = add nsw i32 %1003, 1
  store i32 %1004, i32* %k3, align 4
  br label %974
#BasicBlock: 1165
  %1007 = load i32, i32* %i1, align 4
  %1008 = load i32, i32* %j2, align 4
  %1009 = icmp eq i32 %1007, %1008
  br i1 %1009, label %1010, label %1030
#BasicBlock: 1166
  %1012 = load i32, i32* %i1, align 4
  %1013 = load i32, i32* %3, align 4
  %1014 = mul nsw i32 %1012, %1013
  %1015 = load i32, i32* %i1, align 4
  %1016 = add nsw i32 %1014, %1015
  %1017 = sext i32 %1016 to i64
  %1018 = getelementptr inbounds double, double* %192, i64 %1017
  %1019 = load double, double* %1018, align 8
  %1020 = load double, double* %s, align 8
  %1021 = fsub double %1019, %1020
  %1022 = call double @sqroot(double %1021)
  %1023 = load i32, i32* %i1, align 4
  %1024 = load i32, i32* %3, align 4
  %1025 = mul nsw i32 %1023, %1024
  %1026 = load i32, i32* %j2, align 4
  %1027 = add nsw i32 %1025, %1026
  %1028 = sext i32 %1027 to i64
  %1029 = load double*, double** %4, align 8
  %1030 = getelementptr inbounds double, double* %1029, i64 %1028
  store double %1022, double* %1030, align 8
  br label %1061
#BasicBlock: 1167
  %1033 = load i32, i32* %j2, align 4
  %1034 = load i32, i32* %3, align 4
  %1035 = mul nsw i32 %1033, %1034
  %1036 = load i32, i32* %j2, align 4
  %1037 = add nsw i32 %1035, %1036
  %1038 = sext i32 %1037 to i64
  %1039 = load double*, double** %4, align 8
  %1040 = getelementptr inbounds double, double* %1039, i64 %1038
  %1041 = load double, double* %1040, align 8
  %1042 = fdiv double 1.000000e+00, %1041
  %1043 = load i32, i32* %i1, align 4
  %1044 = load i32, i32* %3, align 4
  %1045 = mul nsw i32 %1043, %1044
  %1046 = load i32, i32* %j2, align 4
  %1047 = add nsw i32 %1045, %1046
  %1048 = sext i32 %1047 to i64
  %1049 = getelementptr inbounds double, double* %192, i64 %1048
  %1050 = load double, double* %1049, align 8
  %1051 = load double, double* %s, align 8
  %1052 = fsub double %1050, %1051
  %1053 = fmul double %1042, %1052
  %1054 = load i32, i32* %i1, align 4
  %1055 = load i32, i32* %3, align 4
  %1056 = mul nsw i32 %1054, %1055
  %1057 = load i32, i32* %j2, align 4
  %1058 = add nsw i32 %1056, %1057
  %1059 = sext i32 %1058 to i64
  %1060 = load double*, double** %4, align 8
  %1061 = getelementptr inbounds double, double* %1060, i64 %1059
  store double %1053, double* %1061, align 8
  br label %1062
#BasicBlock: 1168
  %1064 = load i32, i32* %j2, align 4
  %1065 = add nsw i32 %1064, 1
  store i32 %1065, i32* %j2, align 4
  br label %966
#BasicBlock: 1169
  br label %1068
#BasicBlock: 1170
  %1070 = load i32, i32* %i1, align 4
  %1071 = add nsw i32 %1070, 1
  store i32 %1071, i32* %i1, align 4
  br label %959
#BasicBlock: 1171
  br label %1074
#BasicBlock: 1172
  %1076 = load i8*, i8** %5, align 8
  call void @llvm.stackrestore(i8* %1076)
  ret void
Builtin - llvm.stackrestore
current function name: inverse
#BasicBlock: 1173
  %1 = alloca [3 x double]*, align 8
  %2 = alloca double*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %sum = alloca double, align 8
  %L = alloca [3 x [3 x double]], align 16
  %U = alloca [3 x [3 x double]], align 16
  %d = alloca [3 x [3 x double]], align 16
  %b = alloca [3 x [3 x double]], align 16
  %x = alloca [3 x [3 x double]], align 16
  %x_new = alloca [3 x [3 x double]], align 16
  %temp = alloca double, align 8
  %temp_1 = alloca double, align 8
  %temp_2 = alloca double, align 8
  %main_loop = alloca i32, align 4
  %m = alloca i32, align 4
  store [3 x double]* %A, [3 x double]** %1, align 8
  store double* %Result, double** %2, align 8
  store double 0.000000e+00, double* %sum, align 8
  store i32 0, i32* %i, align 4
  br label %3
#BasicBlock: 1174
  %5 = load i32, i32* %i, align 4
  %6 = icmp slt i32 %5, 3
  br i1 %6, label %7, label %25
#BasicBlock: 1175
  store i32 0, i32* %j, align 4
  br label %9
#BasicBlock: 1176
  %11 = load i32, i32* %j, align 4
  %12 = icmp slt i32 %11, 3
  br i1 %12, label %13, label %23
#BasicBlock: 1177
  %15 = load i32, i32* %j, align 4
  %16 = sext i32 %15 to i64
  %17 = load i32, i32* %i, align 4
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %L, i64 0, i64 %18
  %20 = getelementptr inbounds [3 x double], [3 x double]* %19, i64 0, i64 %16
  store double 0.000000e+00, double* %20, align 8
  br label %21
#BasicBlock: 1178
  %23 = load i32, i32* %j, align 4
  %24 = add nsw i32 %23, 1
  store i32 %24, i32* %j, align 4
  br label %10
#BasicBlock: 1179
  br label %27
#BasicBlock: 1180
  %29 = load i32, i32* %i, align 4
  %30 = add nsw i32 %29, 1
  store i32 %30, i32* %i, align 4
  br label %4
#BasicBlock: 1181
  store i32 0, i32* %i, align 4
  br label %33
#BasicBlock: 1182
  %35 = load i32, i32* %i, align 4
  %36 = icmp slt i32 %35, 3
  br i1 %36, label %37, label %55
#BasicBlock: 1183
  store i32 0, i32* %j, align 4
  br label %39
#BasicBlock: 1184
  %41 = load i32, i32* %j, align 4
  %42 = icmp slt i32 %41, 3
  br i1 %42, label %43, label %53
#BasicBlock: 1185
  %45 = load i32, i32* %j, align 4
  %46 = sext i32 %45 to i64
  %47 = load i32, i32* %i, align 4
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %U, i64 0, i64 %48
  %50 = getelementptr inbounds [3 x double], [3 x double]* %49, i64 0, i64 %46
  store double 0.000000e+00, double* %50, align 8
  br label %51
#BasicBlock: 1186
  %53 = load i32, i32* %j, align 4
  %54 = add nsw i32 %53, 1
  store i32 %54, i32* %j, align 4
  br label %40
#BasicBlock: 1187
  br label %57
#BasicBlock: 1188
  %59 = load i32, i32* %i, align 4
  %60 = add nsw i32 %59, 1
  store i32 %60, i32* %i, align 4
  br label %34
#BasicBlock: 1189
  store i32 0, i32* %i, align 4
  br label %63
#BasicBlock: 1190
  %65 = load i32, i32* %i, align 4
  %66 = icmp slt i32 %65, 3
  br i1 %66, label %67, label %77
#BasicBlock: 1191
  %69 = load i32, i32* %i, align 4
  %70 = sext i32 %69 to i64
  %71 = load i32, i32* %i, align 4
  %72 = sext i32 %71 to i64
  %73 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %U, i64 0, i64 %72
  %74 = getelementptr inbounds [3 x double], [3 x double]* %73, i64 0, i64 %70
  store double 1.000000e+00, double* %74, align 8
  br label %75
#BasicBlock: 1192
  %77 = load i32, i32* %i, align 4
  %78 = add nsw i32 %77, 1
  store i32 %78, i32* %i, align 4
  br label %64
#BasicBlock: 1193
  store i32 0, i32* %j, align 4
  br label %81
#BasicBlock: 1194
  %83 = load i32, i32* %j, align 4
  %84 = icmp slt i32 %83, 3
  br i1 %84, label %85, label %199
#BasicBlock: 1195
  %87 = load i32, i32* %j, align 4
  store i32 %87, i32* %i, align 4
  br label %88
#BasicBlock: 1196
  %90 = load i32, i32* %i, align 4
  %91 = icmp slt i32 %90, 3
  br i1 %91, label %92, label %138
#BasicBlock: 1197
  store double 0.000000e+00, double* %sum, align 8
  store i32 0, i32* %k, align 4
  br label %94
#BasicBlock: 1198
  %96 = load i32, i32* %k, align 4
  %97 = load i32, i32* %j, align 4
  %98 = icmp slt i32 %96, %97
  br i1 %98, label %99, label %120
#BasicBlock: 1199
  %101 = load double, double* %sum, align 8
  %102 = load i32, i32* %k, align 4
  %103 = sext i32 %102 to i64
  %104 = load i32, i32* %i, align 4
  %105 = sext i32 %104 to i64
  %106 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %L, i64 0, i64 %105
  %107 = getelementptr inbounds [3 x double], [3 x double]* %106, i64 0, i64 %103
  %108 = load double, double* %107, align 8
  %109 = load i32, i32* %j, align 4
  %110 = sext i32 %109 to i64
  %111 = load i32, i32* %k, align 4
  %112 = sext i32 %111 to i64
  %113 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %U, i64 0, i64 %112
  %114 = getelementptr inbounds [3 x double], [3 x double]* %113, i64 0, i64 %110
  %115 = load double, double* %114, align 8
  %116 = fmul double %108, %115
  %117 = fadd double %101, %116
  store double %117, double* %sum, align 8
  br label %118
#BasicBlock: 1200
  %120 = load i32, i32* %k, align 4
  %121 = add nsw i32 %120, 1
  store i32 %121, i32* %k, align 4
  br label %95
#BasicBlock: 1201
  %124 = load i32, i32* %j, align 4
  %125 = sext i32 %124 to i64
  %126 = load i32, i32* %i, align 4
  %127 = sext i32 %126 to i64
  %128 = load [3 x double]*, [3 x double]** %1, align 8
  %129 = getelementptr inbounds [3 x double], [3 x double]* %128, i64 %127
  %130 = getelementptr inbounds [3 x double], [3 x double]* %129, i64 0, i64 %125
  %131 = load double, double* %130, align 8
  %132 = load double, double* %sum, align 8
  %133 = fsub double %131, %132
  %134 = load i32, i32* %j, align 4
  %135 = sext i32 %134 to i64
  %136 = load i32, i32* %i, align 4
  %137 = sext i32 %136 to i64
  %138 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %L, i64 0, i64 %137
  %139 = getelementptr inbounds [3 x double], [3 x double]* %138, i64 0, i64 %135
  store double %133, double* %139, align 8
  br label %140
#BasicBlock: 1202
  %142 = load i32, i32* %i, align 4
  %143 = add nsw i32 %142, 1
  store i32 %143, i32* %i, align 4
  br label %89
#BasicBlock: 1203
  %146 = load i32, i32* %j, align 4
  store i32 %146, i32* %i, align 4
  br label %147
#BasicBlock: 1204
  %149 = load i32, i32* %i, align 4
  %150 = icmp slt i32 %149, 3
  br i1 %150, label %151, label %205
#BasicBlock: 1205
  store double 0.000000e+00, double* %sum, align 8
  store i32 0, i32* %k, align 4
  br label %153
#BasicBlock: 1206
  %155 = load i32, i32* %k, align 4
  %156 = load i32, i32* %j, align 4
  %157 = icmp slt i32 %155, %156
  br i1 %157, label %158, label %179
#BasicBlock: 1207
  %160 = load double, double* %sum, align 8
  %161 = load i32, i32* %k, align 4
  %162 = sext i32 %161 to i64
  %163 = load i32, i32* %j, align 4
  %164 = sext i32 %163 to i64
  %165 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %L, i64 0, i64 %164
  %166 = getelementptr inbounds [3 x double], [3 x double]* %165, i64 0, i64 %162
  %167 = load double, double* %166, align 8
  %168 = load i32, i32* %i, align 4
  %169 = sext i32 %168 to i64
  %170 = load i32, i32* %k, align 4
  %171 = sext i32 %170 to i64
  %172 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %U, i64 0, i64 %171
  %173 = getelementptr inbounds [3 x double], [3 x double]* %172, i64 0, i64 %169
  %174 = load double, double* %173, align 8
  %175 = fmul double %167, %174
  %176 = fadd double %160, %175
  store double %176, double* %sum, align 8
  br label %177
#BasicBlock: 1208
  %179 = load i32, i32* %k, align 4
  %180 = add nsw i32 %179, 1
  store i32 %180, i32* %k, align 4
  br label %154
#BasicBlock: 1209
  %183 = load i32, i32* %i, align 4
  %184 = sext i32 %183 to i64
  %185 = load i32, i32* %j, align 4
  %186 = sext i32 %185 to i64
  %187 = load [3 x double]*, [3 x double]** %1, align 8
  %188 = getelementptr inbounds [3 x double], [3 x double]* %187, i64 %186
  %189 = getelementptr inbounds [3 x double], [3 x double]* %188, i64 0, i64 %184
  %190 = load double, double* %189, align 8
  %191 = load double, double* %sum, align 8
  %192 = fsub double %190, %191
  %193 = load i32, i32* %j, align 4
  %194 = sext i32 %193 to i64
  %195 = load i32, i32* %j, align 4
  %196 = sext i32 %195 to i64
  %197 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %L, i64 0, i64 %196
  %198 = getelementptr inbounds [3 x double], [3 x double]* %197, i64 0, i64 %194
  %199 = load double, double* %198, align 8
  %200 = fdiv double %192, %199
  %201 = load i32, i32* %i, align 4
  %202 = sext i32 %201 to i64
  %203 = load i32, i32* %j, align 4
  %204 = sext i32 %203 to i64
  %205 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %U, i64 0, i64 %204
  %206 = getelementptr inbounds [3 x double], [3 x double]* %205, i64 0, i64 %202
  store double %200, double* %206, align 8
  br label %207
#BasicBlock: 1210
  %209 = load i32, i32* %i, align 4
  %210 = add nsw i32 %209, 1
  store i32 %210, i32* %i, align 4
  br label %148
#BasicBlock: 1211
  br label %213
#BasicBlock: 1212
  %215 = load i32, i32* %j, align 4
  %216 = add nsw i32 %215, 1
  store i32 %216, i32* %j, align 4
  br label %82
#BasicBlock: 1213
  store i32 0, i32* %i, align 4
  br label %219
#BasicBlock: 1214
  %221 = load i32, i32* %i, align 4
  %222 = icmp slt i32 %221, 3
  br i1 %222, label %223, label %241
#BasicBlock: 1215
  store i32 0, i32* %j, align 4
  br label %225
#BasicBlock: 1216
  %227 = load i32, i32* %j, align 4
  %228 = icmp slt i32 %227, 3
  br i1 %228, label %229, label %239
#BasicBlock: 1217
  %231 = load i32, i32* %j, align 4
  %232 = sext i32 %231 to i64
  %233 = load i32, i32* %i, align 4
  %234 = sext i32 %233 to i64
  %235 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %d, i64 0, i64 %234
  %236 = getelementptr inbounds [3 x double], [3 x double]* %235, i64 0, i64 %232
  store double 0.000000e+00, double* %236, align 8
  br label %237
#BasicBlock: 1218
  %239 = load i32, i32* %j, align 4
  %240 = add nsw i32 %239, 1
  store i32 %240, i32* %j, align 4
  br label %226
#BasicBlock: 1219
  br label %243
#BasicBlock: 1220
  %245 = load i32, i32* %i, align 4
  %246 = add nsw i32 %245, 1
  store i32 %246, i32* %i, align 4
  br label %220
#BasicBlock: 1221
  store i32 0, i32* %i, align 4
  br label %249
#BasicBlock: 1222
  %251 = load i32, i32* %i, align 4
  %252 = icmp slt i32 %251, 3
  br i1 %252, label %253, label %271
#BasicBlock: 1223
  store i32 0, i32* %j, align 4
  br label %255
#BasicBlock: 1224
  %257 = load i32, i32* %j, align 4
  %258 = icmp slt i32 %257, 3
  br i1 %258, label %259, label %269
#BasicBlock: 1225
  %261 = load i32, i32* %j, align 4
  %262 = sext i32 %261 to i64
  %263 = load i32, i32* %i, align 4
  %264 = sext i32 %263 to i64
  %265 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %b, i64 0, i64 %264
  %266 = getelementptr inbounds [3 x double], [3 x double]* %265, i64 0, i64 %262
  store double 0.000000e+00, double* %266, align 8
  br label %267
#BasicBlock: 1226
  %269 = load i32, i32* %j, align 4
  %270 = add nsw i32 %269, 1
  store i32 %270, i32* %j, align 4
  br label %256
#BasicBlock: 1227
  br label %273
#BasicBlock: 1228
  %275 = load i32, i32* %i, align 4
  %276 = add nsw i32 %275, 1
  store i32 %276, i32* %i, align 4
  br label %250
#BasicBlock: 1229
  store i32 0, i32* %i, align 4
  br label %279
#BasicBlock: 1230
  %281 = load i32, i32* %i, align 4
  %282 = icmp slt i32 %281, 3
  br i1 %282, label %283, label %301
#BasicBlock: 1231
  store i32 0, i32* %j, align 4
  br label %285
#BasicBlock: 1232
  %287 = load i32, i32* %j, align 4
  %288 = icmp slt i32 %287, 3
  br i1 %288, label %289, label %299
#BasicBlock: 1233
  %291 = load i32, i32* %j, align 4
  %292 = sext i32 %291 to i64
  %293 = load i32, i32* %i, align 4
  %294 = sext i32 %293 to i64
  %295 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %x, i64 0, i64 %294
  %296 = getelementptr inbounds [3 x double], [3 x double]* %295, i64 0, i64 %292
  store double 0.000000e+00, double* %296, align 8
  br label %297
#BasicBlock: 1234
  %299 = load i32, i32* %j, align 4
  %300 = add nsw i32 %299, 1
  store i32 %300, i32* %j, align 4
  br label %286
#BasicBlock: 1235
  br label %303
#BasicBlock: 1236
  %305 = load i32, i32* %i, align 4
  %306 = add nsw i32 %305, 1
  store i32 %306, i32* %i, align 4
  br label %280
#BasicBlock: 1237
  store i32 0, i32* %i, align 4
  br label %309
#BasicBlock: 1238
  %311 = load i32, i32* %i, align 4
  %312 = icmp slt i32 %311, 3
  br i1 %312, label %313, label %331
#BasicBlock: 1239
  store i32 0, i32* %j, align 4
  br label %315
#BasicBlock: 1240
  %317 = load i32, i32* %j, align 4
  %318 = icmp slt i32 %317, 3
  br i1 %318, label %319, label %329
#BasicBlock: 1241
  %321 = load i32, i32* %j, align 4
  %322 = sext i32 %321 to i64
  %323 = load i32, i32* %i, align 4
  %324 = sext i32 %323 to i64
  %325 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %x_new, i64 0, i64 %324
  %326 = getelementptr inbounds [3 x double], [3 x double]* %325, i64 0, i64 %322
  store double 0.000000e+00, double* %326, align 8
  br label %327
#BasicBlock: 1242
  %329 = load i32, i32* %j, align 4
  %330 = add nsw i32 %329, 1
  store i32 %330, i32* %j, align 4
  br label %316
#BasicBlock: 1243
  br label %333
#BasicBlock: 1244
  %335 = load i32, i32* %i, align 4
  %336 = add nsw i32 %335, 1
  store i32 %336, i32* %i, align 4
  br label %310
#BasicBlock: 1245
  store double 0.000000e+00, double* %temp, align 8
  store double 0.000000e+00, double* %temp_1, align 8
  store double 0.000000e+00, double* %temp_2, align 8
  store i32 0, i32* %i, align 4
  br label %339
#BasicBlock: 1246
  %341 = load i32, i32* %i, align 4
  %342 = icmp slt i32 %341, 3
  br i1 %342, label %343, label %372
#BasicBlock: 1247
  store i32 0, i32* %j, align 4
  br label %345
#BasicBlock: 1248
  %347 = load i32, i32* %j, align 4
  %348 = icmp slt i32 %347, 3
  br i1 %348, label %349, label %370
#BasicBlock: 1249
  %351 = load i32, i32* %i, align 4
  %352 = load i32, i32* %j, align 4
  %353 = icmp eq i32 %351, %352
  br i1 %353, label %354, label %361
#BasicBlock: 1250
  %356 = load i32, i32* %j, align 4
  %357 = sext i32 %356 to i64
  %358 = load i32, i32* %i, align 4
  %359 = sext i32 %358 to i64
  %360 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %b, i64 0, i64 %359
  %361 = getelementptr inbounds [3 x double], [3 x double]* %360, i64 0, i64 %357
  store double 1.000000e+00, double* %361, align 8
  br label %369
#BasicBlock: 1251
  %364 = load i32, i32* %j, align 4
  %365 = sext i32 %364 to i64
  %366 = load i32, i32* %i, align 4
  %367 = sext i32 %366 to i64
  %368 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %b, i64 0, i64 %367
  %369 = getelementptr inbounds [3 x double], [3 x double]* %368, i64 0, i64 %365
  store double 0.000000e+00, double* %369, align 8
  br label %370
#BasicBlock: 1252
  %372 = load i32, i32* %j, align 4
  %373 = add nsw i32 %372, 1
  store i32 %373, i32* %j, align 4
  br label %346
#BasicBlock: 1253
  br label %376
#BasicBlock: 1254
  %378 = load i32, i32* %i, align 4
  %379 = add nsw i32 %378, 1
  store i32 %379, i32* %i, align 4
  br label %340
#BasicBlock: 1255
  store i32 0, i32* %main_loop, align 4
  br label %382
#BasicBlock: 1256
  %384 = load i32, i32* %main_loop, align 4
  %385 = icmp slt i32 %384, 3
  br i1 %385, label %386, label %548
#BasicBlock: 1257
  %388 = load i32, i32* %main_loop, align 4
  %389 = sext i32 %388 to i64
  %390 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %b, i64 0, i64 0
  %391 = getelementptr inbounds [3 x double], [3 x double]* %390, i64 0, i64 %389
  %392 = load double, double* %391, align 8
  %393 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %L, i64 0, i64 0
  %394 = getelementptr inbounds [3 x double], [3 x double]* %393, i64 0, i64 0
  %395 = load double, double* %394, align 16
  %396 = fdiv double %392, %395
  %397 = load i32, i32* %main_loop, align 4
  %398 = sext i32 %397 to i64
  %399 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %d, i64 0, i64 %398
  %400 = getelementptr inbounds [3 x double], [3 x double]* %399, i64 0, i64 0
  store double %396, double* %400, align 8
  store i32 1, i32* %i, align 4
  br label %401
#BasicBlock: 1258
  %403 = load i32, i32* %i, align 4
  %404 = icmp slt i32 %403, 3
  br i1 %404, label %405, label %467
#BasicBlock: 1259
  store i32 0, i32* %j, align 4
  br label %407
#BasicBlock: 1260
  %409 = load i32, i32* %j, align 4
  %410 = load i32, i32* %i, align 4
  %411 = icmp slt i32 %409, %410
  br i1 %411, label %412, label %442
#BasicBlock: 1261
  %414 = load double, double* %temp, align 8
  %415 = load i32, i32* %j, align 4
  %416 = sext i32 %415 to i64
  %417 = load i32, i32* %i, align 4
  %418 = sext i32 %417 to i64
  %419 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %L, i64 0, i64 %418
  %420 = getelementptr inbounds [3 x double], [3 x double]* %419, i64 0, i64 %416
  %421 = load double, double* %420, align 8
  %422 = load i32, i32* %j, align 4
  %423 = sext i32 %422 to i64
  %424 = load i32, i32* %main_loop, align 4
  %425 = sext i32 %424 to i64
  %426 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %d, i64 0, i64 %425
  %427 = getelementptr inbounds [3 x double], [3 x double]* %426, i64 0, i64 %423
  %428 = load double, double* %427, align 8
  %429 = fmul double %421, %428
  %430 = fsub double -0.000000e+00, %429
  %431 = load i32, i32* %i, align 4
  %432 = sext i32 %431 to i64
  %433 = load i32, i32* %i, align 4
  %434 = sext i32 %433 to i64
  %435 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %L, i64 0, i64 %434
  %436 = getelementptr inbounds [3 x double], [3 x double]* %435, i64 0, i64 %432
  %437 = load double, double* %436, align 8
  %438 = fdiv double %430, %437
  %439 = fadd double %414, %438
  store double %439, double* %temp, align 8
  br label %440
#BasicBlock: 1262
  %442 = load i32, i32* %j, align 4
  %443 = add nsw i32 %442, 1
  store i32 %443, i32* %j, align 4
  br label %408
#BasicBlock: 1263
  %446 = load i32, i32* %i, align 4
  %447 = sext i32 %446 to i64
  %448 = load i32, i32* %main_loop, align 4
  %449 = sext i32 %448 to i64
  %450 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %b, i64 0, i64 %449
  %451 = getelementptr inbounds [3 x double], [3 x double]* %450, i64 0, i64 %447
  %452 = load double, double* %451, align 8
  %453 = load i32, i32* %i, align 4
  %454 = sext i32 %453 to i64
  %455 = load i32, i32* %i, align 4
  %456 = sext i32 %455 to i64
  %457 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %L, i64 0, i64 %456
  %458 = getelementptr inbounds [3 x double], [3 x double]* %457, i64 0, i64 %454
  %459 = load double, double* %458, align 8
  %460 = fdiv double %452, %459
  %461 = load double, double* %temp, align 8
  %462 = fadd double %460, %461
  %463 = load i32, i32* %i, align 4
  %464 = sext i32 %463 to i64
  %465 = load i32, i32* %main_loop, align 4
  %466 = sext i32 %465 to i64
  %467 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %d, i64 0, i64 %466
  %468 = getelementptr inbounds [3 x double], [3 x double]* %467, i64 0, i64 %464
  store double %462, double* %468, align 8
  store double 0.000000e+00, double* %temp, align 8
  br label %469
#BasicBlock: 1264
  %471 = load i32, i32* %i, align 4
  %472 = add nsw i32 %471, 1
  store i32 %472, i32* %i, align 4
  br label %402
#BasicBlock: 1265
  %475 = load i32, i32* %main_loop, align 4
  %476 = sext i32 %475 to i64
  %477 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %d, i64 0, i64 %476
  %478 = getelementptr inbounds [3 x double], [3 x double]* %477, i64 0, i64 2
  %479 = load double, double* %478, align 8
  %480 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %U, i64 0, i64 2
  %481 = getelementptr inbounds [3 x double], [3 x double]* %480, i64 0, i64 2
  %482 = load double, double* %481, align 16
  %483 = fdiv double %479, %482
  %484 = load i32, i32* %main_loop, align 4
  %485 = sext i32 %484 to i64
  %486 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %x, i64 0, i64 %485
  %487 = getelementptr inbounds [3 x double], [3 x double]* %486, i64 0, i64 2
  store double %483, double* %487, align 8
  store i32 1, i32* %i, align 4
  br label %488
#BasicBlock: 1266
  %490 = load i32, i32* %i, align 4
  %491 = icmp sge i32 %490, 0
  br i1 %491, label %492, label %554
#BasicBlock: 1267
  store i32 2, i32* %j, align 4
  br label %494
#BasicBlock: 1268
  %496 = load i32, i32* %j, align 4
  %497 = load i32, i32* %i, align 4
  %498 = icmp sgt i32 %496, %497
  br i1 %498, label %499, label %529
#BasicBlock: 1269
  %501 = load double, double* %temp, align 8
  %502 = load i32, i32* %j, align 4
  %503 = sext i32 %502 to i64
  %504 = load i32, i32* %i, align 4
  %505 = sext i32 %504 to i64
  %506 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %U, i64 0, i64 %505
  %507 = getelementptr inbounds [3 x double], [3 x double]* %506, i64 0, i64 %503
  %508 = load double, double* %507, align 8
  %509 = load i32, i32* %j, align 4
  %510 = sext i32 %509 to i64
  %511 = load i32, i32* %main_loop, align 4
  %512 = sext i32 %511 to i64
  %513 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %x, i64 0, i64 %512
  %514 = getelementptr inbounds [3 x double], [3 x double]* %513, i64 0, i64 %510
  %515 = load double, double* %514, align 8
  %516 = fmul double %508, %515
  %517 = fsub double -0.000000e+00, %516
  %518 = load i32, i32* %i, align 4
  %519 = sext i32 %518 to i64
  %520 = load i32, i32* %i, align 4
  %521 = sext i32 %520 to i64
  %522 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %U, i64 0, i64 %521
  %523 = getelementptr inbounds [3 x double], [3 x double]* %522, i64 0, i64 %519
  %524 = load double, double* %523, align 8
  %525 = fdiv double %517, %524
  %526 = fadd double %501, %525
  store double %526, double* %temp, align 8
  br label %527
#BasicBlock: 1270
  %529 = load i32, i32* %j, align 4
  %530 = add nsw i32 %529, -1
  store i32 %530, i32* %j, align 4
  br label %495
#BasicBlock: 1271
  %533 = load i32, i32* %i, align 4
  %534 = sext i32 %533 to i64
  %535 = load i32, i32* %main_loop, align 4
  %536 = sext i32 %535 to i64
  %537 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %d, i64 0, i64 %536
  %538 = getelementptr inbounds [3 x double], [3 x double]* %537, i64 0, i64 %534
  %539 = load double, double* %538, align 8
  %540 = load i32, i32* %i, align 4
  %541 = sext i32 %540 to i64
  %542 = load i32, i32* %i, align 4
  %543 = sext i32 %542 to i64
  %544 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %U, i64 0, i64 %543
  %545 = getelementptr inbounds [3 x double], [3 x double]* %544, i64 0, i64 %541
  %546 = load double, double* %545, align 8
  %547 = fdiv double %539, %546
  %548 = load double, double* %temp, align 8
  %549 = fadd double %547, %548
  %550 = load i32, i32* %i, align 4
  %551 = sext i32 %550 to i64
  %552 = load i32, i32* %main_loop, align 4
  %553 = sext i32 %552 to i64
  %554 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %x, i64 0, i64 %553
  %555 = getelementptr inbounds [3 x double], [3 x double]* %554, i64 0, i64 %551
  store double %549, double* %555, align 8
  store double 0.000000e+00, double* %temp, align 8
  br label %556
#BasicBlock: 1272
  %558 = load i32, i32* %i, align 4
  %559 = add nsw i32 %558, -1
  store i32 %559, i32* %i, align 4
  br label %489
#BasicBlock: 1273
  br label %562
#BasicBlock: 1274
  %564 = load i32, i32* %main_loop, align 4
  %565 = add nsw i32 %564, 1
  store i32 %565, i32* %main_loop, align 4
  br label %383
#BasicBlock: 1275
  store i32 0, i32* %i, align 4
  br label %568
#BasicBlock: 1276
  %570 = load i32, i32* %i, align 4
  %571 = icmp slt i32 %570, 3
  br i1 %571, label %572, label %597
#BasicBlock: 1277
  store i32 0, i32* %j, align 4
  br label %574
#BasicBlock: 1278
  %576 = load i32, i32* %j, align 4
  %577 = icmp slt i32 %576, 3
  br i1 %577, label %578, label %595
#BasicBlock: 1279
  %580 = load i32, i32* %j, align 4
  %581 = sext i32 %580 to i64
  %582 = load i32, i32* %i, align 4
  %583 = sext i32 %582 to i64
  %584 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %x, i64 0, i64 %583
  %585 = getelementptr inbounds [3 x double], [3 x double]* %584, i64 0, i64 %581
  %586 = load double, double* %585, align 8
  %587 = load i32, i32* %i, align 4
  %588 = sext i32 %587 to i64
  %589 = load i32, i32* %j, align 4
  %590 = sext i32 %589 to i64
  %591 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %x_new, i64 0, i64 %590
  %592 = getelementptr inbounds [3 x double], [3 x double]* %591, i64 0, i64 %588
  store double %586, double* %592, align 8
  br label %593
#BasicBlock: 1280
  %595 = load i32, i32* %j, align 4
  %596 = add nsw i32 %595, 1
  store i32 %596, i32* %j, align 4
  br label %575
#BasicBlock: 1281
  br label %599
#BasicBlock: 1282
  %601 = load i32, i32* %i, align 4
  %602 = add nsw i32 %601, 1
  store i32 %602, i32* %i, align 4
  br label %569
#BasicBlock: 1283
  store i32 0, i32* %m, align 4
  store i32 0, i32* %i, align 4
  br label %605
#BasicBlock: 1284
  %607 = load i32, i32* %i, align 4
  %608 = icmp slt i32 %607, 3
  br i1 %608, label %609, label %634
#BasicBlock: 1285
  store i32 0, i32* %j, align 4
  br label %611
#BasicBlock: 1286
  %613 = load i32, i32* %j, align 4
  %614 = icmp slt i32 %613, 3
  br i1 %614, label %615, label %632
#BasicBlock: 1287
  %617 = load i32, i32* %j, align 4
  %618 = sext i32 %617 to i64
  %619 = load i32, i32* %i, align 4
  %620 = sext i32 %619 to i64
  %621 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %x_new, i64 0, i64 %620
  %622 = getelementptr inbounds [3 x double], [3 x double]* %621, i64 0, i64 %618
  %623 = load double, double* %622, align 8
  %624 = load i32, i32* %m, align 4
  %625 = sext i32 %624 to i64
  %626 = load double*, double** %2, align 8
  %627 = getelementptr inbounds double, double* %626, i64 %625
  store double %623, double* %627, align 8
  %628 = load i32, i32* %m, align 4
  %629 = add nsw i32 %628, 1
  store i32 %629, i32* %m, align 4
  br label %630
#BasicBlock: 1288
  %632 = load i32, i32* %j, align 4
  %633 = add nsw i32 %632, 1
  store i32 %633, i32* %j, align 4
  br label %612
#BasicBlock: 1289
  br label %636
#BasicBlock: 1290
  %638 = load i32, i32* %i, align 4
  %639 = add nsw i32 %638, 1
  store i32 %639, i32* %i, align 4
  br label %606
#BasicBlock: 1291
  ret void
current function name: getlassosolun
#BasicBlock: 1292
  %1 = alloca double*, align 8
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca double*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca double*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %inc = alloca i32, align 4
  %inc_b = alloca i32, align 4
  %8 = alloca i8*, align 8
  %i1 = alloca i32, align 4
  %j2 = alloca i32, align 4
  %Atb = alloca [16 x [1 x double]], align 16
  %rho = alloca i32, align 4
  %alpha = alloca i32, align 4
  %L_sparse = alloca [3 x [3 x double]], align 16
  %U = alloca [3 x [3 x double]], align 16
  %L_1d_m = alloca i32, align 4
  %Max_iter = alloca i32, align 4
  %L_const = alloca i32, align 4
  %U_const = alloca i32, align 4
  %i3 = alloca i32, align 4
  store double* %arr_1D, double** %1, align 8
  store i32 %m, i32* %2, align 4
  store i32 %n, i32* %3, align 4
  store double* %b_1D, double** %4, align 8
  store i32 %b_r, i32* %5, align 4
  store i32 %b_c, i32* %6, align 4
  store double* %Result, double** %7, align 8
  store i32 0, i32* %inc, align 4
  store i32 0, i32* %inc_b, align 4
  %9 = load i32, i32* %2, align 4
  %10 = zext i32 %9 to i64
  %11 = load i32, i32* %3, align 4
  %12 = zext i32 %11 to i64
  %13 = call i8* @llvm.stacksave()
  br label %14
Builtin - llvm.stacksave
#BasicBlock: 1293
  store i8* %14, i8** %8, align 8
  %16 = mul nuw i64 %10, %13
  %17 = alloca double, i64 %16, align 16
  store i32 0, i32* %i, align 4
  br label %18
#BasicBlock: 1294
  %20 = load i32, i32* %i, align 4
  %21 = load i32, i32* %2, align 4
  %22 = icmp slt i32 %20, %21
  br i1 %22, label %23, label %43
#BasicBlock: 1295
  store i32 0, i32* %j, align 4
  br label %25
#BasicBlock: 1296
  %27 = load i32, i32* %j, align 4
  %28 = load i32, i32* %3, align 4
  %29 = icmp slt i32 %27, %28
  br i1 %29, label %30, label %41
#BasicBlock: 1297
  %32 = load i32, i32* %j, align 4
  %33 = sext i32 %32 to i64
  %34 = load i32, i32* %i, align 4
  %35 = sext i32 %34 to i64
  %36 = mul nsw i64 %35, %13
  %37 = getelementptr inbounds double, double* %17, i64 %36
  %38 = getelementptr inbounds double, double* %37, i64 %33
  store double 0.000000e+00, double* %38, align 8
  br label %39
#BasicBlock: 1298
  %41 = load i32, i32* %j, align 4
  %42 = add nsw i32 %41, 1
  store i32 %42, i32* %j, align 4
  br label %26
#BasicBlock: 1299
  br label %45
#BasicBlock: 1300
  %47 = load i32, i32* %i, align 4
  %48 = add nsw i32 %47, 1
  store i32 %48, i32* %i, align 4
  br label %19
#BasicBlock: 1301
  %51 = load i32, i32* %5, align 4
  %52 = zext i32 %51 to i64
  %53 = load i32, i32* %6, align 4
  %54 = zext i32 %53 to i64
  %55 = mul nuw i64 %52, %54
  %56 = alloca double, i64 %55, align 16
  store i32 0, i32* %i, align 4
  br label %57
#BasicBlock: 1302
  %59 = load i32, i32* %i, align 4
  %60 = load i32, i32* %5, align 4
  %61 = icmp slt i32 %59, %60
  br i1 %61, label %62, label %82
#BasicBlock: 1303
  store i32 0, i32* %j, align 4
  br label %64
#BasicBlock: 1304
  %66 = load i32, i32* %j, align 4
  %67 = load i32, i32* %6, align 4
  %68 = icmp slt i32 %66, %67
  br i1 %68, label %69, label %80
#BasicBlock: 1305
  %71 = load i32, i32* %j, align 4
  %72 = sext i32 %71 to i64
  %73 = load i32, i32* %i, align 4
  %74 = sext i32 %73 to i64
  %75 = mul nsw i64 %74, %54
  %76 = getelementptr inbounds double, double* %56, i64 %75
  %77 = getelementptr inbounds double, double* %76, i64 %72
  store double 0.000000e+00, double* %77, align 8
  br label %78
#BasicBlock: 1306
  %80 = load i32, i32* %j, align 4
  %81 = add nsw i32 %80, 1
  store i32 %81, i32* %j, align 4
  br label %65
#BasicBlock: 1307
  br label %84
#BasicBlock: 1308
  %86 = load i32, i32* %i, align 4
  %87 = add nsw i32 %86, 1
  store i32 %87, i32* %i, align 4
  br label %58
#BasicBlock: 1309
  store i32 0, i32* %i, align 4
  br label %90
#BasicBlock: 1310
  %92 = load i32, i32* %i, align 4
  %93 = load i32, i32* %2, align 4
  %94 = icmp slt i32 %92, %93
  br i1 %94, label %95, label %122
#BasicBlock: 1311
  store i32 0, i32* %j, align 4
  br label %97
#BasicBlock: 1312
  %99 = load i32, i32* %j, align 4
  %100 = load i32, i32* %3, align 4
  %101 = icmp slt i32 %99, %100
  br i1 %101, label %102, label %120
#BasicBlock: 1313
  %104 = load i32, i32* %inc, align 4
  %105 = sext i32 %104 to i64
  %106 = load double*, double** %1, align 8
  %107 = getelementptr inbounds double, double* %106, i64 %105
  %108 = load double, double* %107, align 8
  %109 = load i32, i32* %j, align 4
  %110 = sext i32 %109 to i64
  %111 = load i32, i32* %i, align 4
  %112 = sext i32 %111 to i64
  %113 = mul nsw i64 %112, %13
  %114 = getelementptr inbounds double, double* %17, i64 %113
  %115 = getelementptr inbounds double, double* %114, i64 %110
  store double %108, double* %115, align 8
  %116 = load i32, i32* %inc, align 4
  %117 = add nsw i32 %116, 1
  store i32 %117, i32* %inc, align 4
  br label %118
#BasicBlock: 1314
  %120 = load i32, i32* %j, align 4
  %121 = add nsw i32 %120, 1
  store i32 %121, i32* %j, align 4
  br label %98
#BasicBlock: 1315
  br label %124
#BasicBlock: 1316
  %126 = load i32, i32* %i, align 4
  %127 = add nsw i32 %126, 1
  store i32 %127, i32* %i, align 4
  br label %91
#BasicBlock: 1317
  store i32 0, i32* %i, align 4
  br label %130
#BasicBlock: 1318
  %132 = load i32, i32* %i, align 4
  %133 = load i32, i32* %5, align 4
  %134 = icmp slt i32 %132, %133
  br i1 %134, label %135, label %162
#BasicBlock: 1319
  store i32 0, i32* %j, align 4
  br label %137
#BasicBlock: 1320
  %139 = load i32, i32* %j, align 4
  %140 = load i32, i32* %6, align 4
  %141 = icmp slt i32 %139, %140
  br i1 %141, label %142, label %160
#BasicBlock: 1321
  %144 = load i32, i32* %inc_b, align 4
  %145 = sext i32 %144 to i64
  %146 = load double*, double** %4, align 8
  %147 = getelementptr inbounds double, double* %146, i64 %145
  %148 = load double, double* %147, align 8
  %149 = load i32, i32* %j, align 4
  %150 = sext i32 %149 to i64
  %151 = load i32, i32* %i, align 4
  %152 = sext i32 %151 to i64
  %153 = mul nsw i64 %152, %54
  %154 = getelementptr inbounds double, double* %56, i64 %153
  %155 = getelementptr inbounds double, double* %154, i64 %150
  store double %148, double* %155, align 8
  %156 = load i32, i32* %inc_b, align 4
  %157 = add nsw i32 %156, 1
  store i32 %157, i32* %inc_b, align 4
  br label %158
#BasicBlock: 1322
  %160 = load i32, i32* %j, align 4
  %161 = add nsw i32 %160, 1
  store i32 %161, i32* %j, align 4
  br label %138
#BasicBlock: 1323
  br label %164
#BasicBlock: 1324
  %166 = load i32, i32* %i, align 4
  %167 = add nsw i32 %166, 1
  store i32 %167, i32* %i, align 4
  br label %131
#BasicBlock: 1325
  %170 = load i32, i32* %3, align 4
  %171 = zext i32 %170 to i64
  %172 = load i32, i32* %2, align 4
  %173 = zext i32 %172 to i64
  %174 = mul nuw i64 %171, %173
  %175 = alloca double, i64 %174, align 16
  store i32 0, i32* %i, align 4
  br label %176
#BasicBlock: 1326
  %178 = load i32, i32* %i, align 4
  %179 = load i32, i32* %3, align 4
  %180 = icmp slt i32 %178, %179
  br i1 %180, label %181, label %201
#BasicBlock: 1327
  store i32 0, i32* %j, align 4
  br label %183
#BasicBlock: 1328
  %185 = load i32, i32* %j, align 4
  %186 = load i32, i32* %2, align 4
  %187 = icmp slt i32 %185, %186
  br i1 %187, label %188, label %199
#BasicBlock: 1329
  %190 = load i32, i32* %j, align 4
  %191 = sext i32 %190 to i64
  %192 = load i32, i32* %i, align 4
  %193 = sext i32 %192 to i64
  %194 = mul nsw i64 %193, %173
  %195 = getelementptr inbounds double, double* %175, i64 %194
  %196 = getelementptr inbounds double, double* %195, i64 %191
  store double 0.000000e+00, double* %196, align 8
  br label %197
#BasicBlock: 1330
  %199 = load i32, i32* %j, align 4
  %200 = add nsw i32 %199, 1
  store i32 %200, i32* %j, align 4
  br label %184
#BasicBlock: 1331
  br label %203
#BasicBlock: 1332
  %205 = load i32, i32* %i, align 4
  %206 = add nsw i32 %205, 1
  store i32 %206, i32* %i, align 4
  br label %177
#BasicBlock: 1333
  store i32 0, i32* %i1, align 4
  br label %209
#BasicBlock: 1334
  %211 = load i32, i32* %i1, align 4
  %212 = load i32, i32* %2, align 4
  %213 = icmp slt i32 %211, %212
  br i1 %213, label %214, label %242
#BasicBlock: 1335
  store i32 0, i32* %j2, align 4
  br label %216
#BasicBlock: 1336
  %218 = load i32, i32* %j2, align 4
  %219 = load i32, i32* %3, align 4
  %220 = icmp slt i32 %218, %219
  br i1 %220, label %221, label %240
#BasicBlock: 1337
  %223 = load i32, i32* %j2, align 4
  %224 = sext i32 %223 to i64
  %225 = load i32, i32* %i1, align 4
  %226 = sext i32 %225 to i64
  %227 = mul nsw i64 %226, %13
  %228 = getelementptr inbounds double, double* %17, i64 %227
  %229 = getelementptr inbounds double, double* %228, i64 %224
  %230 = load double, double* %229, align 8
  %231 = load i32, i32* %i1, align 4
  %232 = sext i32 %231 to i64
  %233 = load i32, i32* %j2, align 4
  %234 = sext i32 %233 to i64
  %235 = mul nsw i64 %234, %173
  %236 = getelementptr inbounds double, double* %175, i64 %235
  %237 = getelementptr inbounds double, double* %236, i64 %232
  store double %230, double* %237, align 8
  br label %238
#BasicBlock: 1338
  %240 = load i32, i32* %j2, align 4
  %241 = add nsw i32 %240, 1
  store i32 %241, i32* %j2, align 4
  br label %217
#BasicBlock: 1339
  br label %244
#BasicBlock: 1340
  %246 = load i32, i32* %i1, align 4
  %247 = add nsw i32 %246, 1
  store i32 %247, i32* %i1, align 4
  br label %210
#BasicBlock: 1341
  store i32 0, i32* %i, align 4
  br label %250
#BasicBlock: 1342
  %252 = load i32, i32* %i, align 4
  %253 = icmp slt i32 %252, 16
  br i1 %253, label %254, label %272
#BasicBlock: 1343
  store i32 0, i32* %j, align 4
  br label %256
#BasicBlock: 1344
  %258 = load i32, i32* %j, align 4
  %259 = icmp slt i32 %258, 1
  br i1 %259, label %260, label %270
#BasicBlock: 1345
  %262 = load i32, i32* %j, align 4
  %263 = sext i32 %262 to i64
  %264 = load i32, i32* %i, align 4
  %265 = sext i32 %264 to i64
  %266 = getelementptr inbounds [16 x [1 x double]], [16 x [1 x double]]* %Atb, i64 0, i64 %265
  %267 = getelementptr inbounds [1 x double], [1 x double]* %266, i64 0, i64 %263
  store double 0.000000e+00, double* %267, align 8
  br label %268
#BasicBlock: 1346
  %270 = load i32, i32* %j, align 4
  %271 = add nsw i32 %270, 1
  store i32 %271, i32* %j, align 4
  br label %257
#BasicBlock: 1347
  br label %274
#BasicBlock: 1348
  %276 = load i32, i32* %i, align 4
  %277 = add nsw i32 %276, 1
  store i32 %277, i32* %i, align 4
  br label %251
#BasicBlock: 1349
  store i32 0, i32* %i, align 4
  br label %280
#BasicBlock: 1350
  %282 = load i32, i32* %i, align 4
  %283 = load i32, i32* %3, align 4
  %284 = icmp slt i32 %282, %283
  br i1 %284, label %285, label %337
#BasicBlock: 1351
  store i32 0, i32* %j, align 4
  br label %287
#BasicBlock: 1352
  %289 = load i32, i32* %j, align 4
  %290 = icmp slt i32 %289, 1
  br i1 %290, label %291, label %335
#BasicBlock: 1353
  store i32 0, i32* %k, align 4
  br label %293
#BasicBlock: 1354
  %295 = load i32, i32* %k, align 4
  %296 = load i32, i32* %2, align 4
  %297 = icmp slt i32 %295, %296
  br i1 %297, label %298, label %333
#BasicBlock: 1355
  %300 = load i32, i32* %j, align 4
  %301 = sext i32 %300 to i64
  %302 = load i32, i32* %i, align 4
  %303 = sext i32 %302 to i64
  %304 = getelementptr inbounds [16 x [1 x double]], [16 x [1 x double]]* %Atb, i64 0, i64 %303
  %305 = getelementptr inbounds [1 x double], [1 x double]* %304, i64 0, i64 %301
  %306 = load double, double* %305, align 8
  %307 = load i32, i32* %k, align 4
  %308 = sext i32 %307 to i64
  %309 = load i32, i32* %i, align 4
  %310 = sext i32 %309 to i64
  %311 = mul nsw i64 %310, %173
  %312 = getelementptr inbounds double, double* %175, i64 %311
  %313 = getelementptr inbounds double, double* %312, i64 %308
  %314 = load double, double* %313, align 8
  %315 = load i32, i32* %j, align 4
  %316 = sext i32 %315 to i64
  %317 = load i32, i32* %k, align 4
  %318 = sext i32 %317 to i64
  %319 = mul nsw i64 %318, %54
  %320 = getelementptr inbounds double, double* %56, i64 %319
  %321 = getelementptr inbounds double, double* %320, i64 %316
  %322 = load double, double* %321, align 8
  %323 = fmul double %314, %322
  %324 = fadd double %306, %323
  %325 = load i32, i32* %j, align 4
  %326 = sext i32 %325 to i64
  %327 = load i32, i32* %i, align 4
  %328 = sext i32 %327 to i64
  %329 = getelementptr inbounds [16 x [1 x double]], [16 x [1 x double]]* %Atb, i64 0, i64 %328
  %330 = getelementptr inbounds [1 x double], [1 x double]* %329, i64 0, i64 %326
  store double %324, double* %330, align 8
  br label %331
#BasicBlock: 1356
  %333 = load i32, i32* %k, align 4
  %334 = add nsw i32 %333, 1
  store i32 %334, i32* %k, align 4
  br label %294
#BasicBlock: 1357
  br label %337
#BasicBlock: 1358
  %339 = load i32, i32* %j, align 4
  %340 = add nsw i32 %339, 1
  store i32 %340, i32* %j, align 4
  br label %288
#BasicBlock: 1359
  br label %343
#BasicBlock: 1360
  %345 = load i32, i32* %i, align 4
  %346 = add nsw i32 %345, 1
  store i32 %346, i32* %i, align 4
  br label %281
#BasicBlock: 1361
  store i32 2, i32* %rho, align 4
  store i32 1, i32* %alpha, align 4
  %349 = load i32, i32* %3, align 4
  %350 = zext i32 %349 to i64
  %351 = alloca [1 x double], i64 %350, align 16
  store i32 0, i32* %i, align 4
  br label %352
#BasicBlock: 1362
  %354 = load i32, i32* %i, align 4
  %355 = load i32, i32* %3, align 4
  %356 = icmp slt i32 %354, %355
  br i1 %356, label %357, label %375
#BasicBlock: 1363
  store i32 0, i32* %j, align 4
  br label %359
#BasicBlock: 1364
  %361 = load i32, i32* %j, align 4
  %362 = icmp slt i32 %361, 1
  br i1 %362, label %363, label %373
#BasicBlock: 1365
  %365 = load i32, i32* %j, align 4
  %366 = sext i32 %365 to i64
  %367 = load i32, i32* %i, align 4
  %368 = sext i32 %367 to i64
  %369 = getelementptr inbounds [1 x double], [1 x double]* %351, i64 %368
  %370 = getelementptr inbounds [1 x double], [1 x double]* %369, i64 0, i64 %366
  store double 0.000000e+00, double* %370, align 8
  br label %371
#BasicBlock: 1366
  %373 = load i32, i32* %j, align 4
  %374 = add nsw i32 %373, 1
  store i32 %374, i32* %j, align 4
  br label %360
#BasicBlock: 1367
  br label %377
#BasicBlock: 1368
  %379 = load i32, i32* %i, align 4
  %380 = add nsw i32 %379, 1
  store i32 %380, i32* %i, align 4
  br label %353
#BasicBlock: 1369
  %383 = load i32, i32* %3, align 4
  %384 = zext i32 %383 to i64
  %385 = load i32, i32* %3, align 4
  %386 = zext i32 %385 to i64
  %387 = mul nuw i64 %384, %386
  %388 = alloca double, i64 %387, align 16
  store i32 0, i32* %i, align 4
  br label %389
#BasicBlock: 1370
  %391 = load i32, i32* %i, align 4
  %392 = load i32, i32* %3, align 4
  %393 = icmp slt i32 %391, %392
  br i1 %393, label %394, label %414
#BasicBlock: 1371
  store i32 0, i32* %j, align 4
  br label %396
#BasicBlock: 1372
  %398 = load i32, i32* %j, align 4
  %399 = load i32, i32* %3, align 4
  %400 = icmp slt i32 %398, %399
  br i1 %400, label %401, label %412
#BasicBlock: 1373
  %403 = load i32, i32* %j, align 4
  %404 = sext i32 %403 to i64
  %405 = load i32, i32* %i, align 4
  %406 = sext i32 %405 to i64
  %407 = mul nsw i64 %406, %386
  %408 = getelementptr inbounds double, double* %388, i64 %407
  %409 = getelementptr inbounds double, double* %408, i64 %404
  store double 0.000000e+00, double* %409, align 8
  br label %410
#BasicBlock: 1374
  %412 = load i32, i32* %j, align 4
  %413 = add nsw i32 %412, 1
  store i32 %413, i32* %j, align 4
  br label %397
#BasicBlock: 1375
  br label %416
#BasicBlock: 1376
  %418 = load i32, i32* %i, align 4
  %419 = add nsw i32 %418, 1
  store i32 %419, i32* %i, align 4
  br label %390
#BasicBlock: 1377
  %422 = load i32, i32* %3, align 4
  %423 = zext i32 %422 to i64
  %424 = alloca [1 x double], i64 %423, align 16
  store i32 0, i32* %i, align 4
  br label %425
#BasicBlock: 1378
  %427 = load i32, i32* %i, align 4
  %428 = load i32, i32* %3, align 4
  %429 = icmp slt i32 %427, %428
  br i1 %429, label %430, label %448
#BasicBlock: 1379
  store i32 0, i32* %j, align 4
  br label %432
#BasicBlock: 1380
  %434 = load i32, i32* %j, align 4
  %435 = icmp slt i32 %434, 1
  br i1 %435, label %436, label %446
#BasicBlock: 1381
  %438 = load i32, i32* %j, align 4
  %439 = sext i32 %438 to i64
  %440 = load i32, i32* %i, align 4
  %441 = sext i32 %440 to i64
  %442 = getelementptr inbounds [1 x double], [1 x double]* %424, i64 %441
  %443 = getelementptr inbounds [1 x double], [1 x double]* %442, i64 0, i64 %439
  store double 0.000000e+00, double* %443, align 8
  br label %444
#BasicBlock: 1382
  %446 = load i32, i32* %j, align 4
  %447 = add nsw i32 %446, 1
  store i32 %447, i32* %j, align 4
  br label %433
#BasicBlock: 1383
  br label %450
#BasicBlock: 1384
  %452 = load i32, i32* %i, align 4
  %453 = add nsw i32 %452, 1
  store i32 %453, i32* %i, align 4
  br label %426
#BasicBlock: 1385
  %456 = load i32, i32* %3, align 4
  %457 = zext i32 %456 to i64
  %458 = alloca [1 x double], i64 %457, align 16
  store i32 0, i32* %i, align 4
  br label %459
#BasicBlock: 1386
  %461 = load i32, i32* %i, align 4
  %462 = load i32, i32* %3, align 4
  %463 = icmp slt i32 %461, %462
  br i1 %463, label %464, label %482
#BasicBlock: 1387
  store i32 0, i32* %j, align 4
  br label %466
#BasicBlock: 1388
  %468 = load i32, i32* %j, align 4
  %469 = icmp slt i32 %468, 1
  br i1 %469, label %470, label %480
#BasicBlock: 1389
  %472 = load i32, i32* %j, align 4
  %473 = sext i32 %472 to i64
  %474 = load i32, i32* %i, align 4
  %475 = sext i32 %474 to i64
  %476 = getelementptr inbounds [1 x double], [1 x double]* %458, i64 %475
  %477 = getelementptr inbounds [1 x double], [1 x double]* %476, i64 0, i64 %473
  store double 0.000000e+00, double* %477, align 8
  br label %478
#BasicBlock: 1390
  %480 = load i32, i32* %j, align 4
  %481 = add nsw i32 %480, 1
  store i32 %481, i32* %j, align 4
  br label %467
#BasicBlock: 1391
  br label %484
#BasicBlock: 1392
  %486 = load i32, i32* %i, align 4
  %487 = add nsw i32 %486, 1
  store i32 %487, i32* %i, align 4
  br label %460
#BasicBlock: 1393
  %490 = load i32, i32* %3, align 4
  %491 = zext i32 %490 to i64
  %492 = alloca [1 x double], i64 %491, align 16
  store i32 0, i32* %i, align 4
  br label %493
#BasicBlock: 1394
  %495 = load i32, i32* %i, align 4
  %496 = load i32, i32* %3, align 4
  %497 = icmp slt i32 %495, %496
  br i1 %497, label %498, label %516
#BasicBlock: 1395
  store i32 0, i32* %j, align 4
  br label %500
#BasicBlock: 1396
  %502 = load i32, i32* %j, align 4
  %503 = icmp slt i32 %502, 1
  br i1 %503, label %504, label %514
#BasicBlock: 1397
  %506 = load i32, i32* %j, align 4
  %507 = sext i32 %506 to i64
  %508 = load i32, i32* %i, align 4
  %509 = sext i32 %508 to i64
  %510 = getelementptr inbounds [1 x double], [1 x double]* %492, i64 %509
  %511 = getelementptr inbounds [1 x double], [1 x double]* %510, i64 0, i64 %507
  store double 0.000000e+00, double* %511, align 8
  br label %512
#BasicBlock: 1398
  %514 = load i32, i32* %j, align 4
  %515 = add nsw i32 %514, 1
  store i32 %515, i32* %j, align 4
  br label %501
#BasicBlock: 1399
  br label %518
#BasicBlock: 1400
  %520 = load i32, i32* %i, align 4
  %521 = add nsw i32 %520, 1
  store i32 %521, i32* %i, align 4
  br label %494
#BasicBlock: 1401
  store i32 0, i32* %i, align 4
  br label %524
#BasicBlock: 1402
  %526 = load i32, i32* %i, align 4
  %527 = icmp slt i32 %526, 3
  br i1 %527, label %528, label %546
#BasicBlock: 1403
  store i32 0, i32* %j, align 4
  br label %530
#BasicBlock: 1404
  %532 = load i32, i32* %j, align 4
  %533 = icmp slt i32 %532, 3
  br i1 %533, label %534, label %544
#BasicBlock: 1405
  %536 = load i32, i32* %j, align 4
  %537 = sext i32 %536 to i64
  %538 = load i32, i32* %i, align 4
  %539 = sext i32 %538 to i64
  %540 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %L_sparse, i64 0, i64 %539
  %541 = getelementptr inbounds [3 x double], [3 x double]* %540, i64 0, i64 %537
  store double 0.000000e+00, double* %541, align 8
  br label %542
#BasicBlock: 1406
  %544 = load i32, i32* %j, align 4
  %545 = add nsw i32 %544, 1
  store i32 %545, i32* %j, align 4
  br label %531
#BasicBlock: 1407
  br label %548
#BasicBlock: 1408
  %550 = load i32, i32* %i, align 4
  %551 = add nsw i32 %550, 1
  store i32 %551, i32* %i, align 4
  br label %525
#BasicBlock: 1409
  store i32 0, i32* %i, align 4
  br label %554
#BasicBlock: 1410
  %556 = load i32, i32* %i, align 4
  %557 = icmp slt i32 %556, 3
  br i1 %557, label %558, label %576
#BasicBlock: 1411
  store i32 0, i32* %j, align 4
  br label %560
#BasicBlock: 1412
  %562 = load i32, i32* %j, align 4
  %563 = icmp slt i32 %562, 3
  br i1 %563, label %564, label %574
#BasicBlock: 1413
  %566 = load i32, i32* %j, align 4
  %567 = sext i32 %566 to i64
  %568 = load i32, i32* %i, align 4
  %569 = sext i32 %568 to i64
  %570 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %U, i64 0, i64 %569
  %571 = getelementptr inbounds [3 x double], [3 x double]* %570, i64 0, i64 %567
  store double 0.000000e+00, double* %571, align 8
  br label %572
#BasicBlock: 1414
  %574 = load i32, i32* %j, align 4
  %575 = add nsw i32 %574, 1
  store i32 %575, i32* %j, align 4
  br label %561
#BasicBlock: 1415
  br label %578
#BasicBlock: 1416
  %580 = load i32, i32* %i, align 4
  %581 = add nsw i32 %580, 1
  store i32 %581, i32* %i, align 4
  br label %555
#BasicBlock: 1417
  %584 = load i32, i32* %3, align 4
  %585 = load i32, i32* %3, align 4
  %586 = mul nsw i32 %584, %585
  %587 = zext i32 %586 to i64
  %588 = alloca double, i64 %587, align 16
  store i32 0, i32* %i, align 4
  br label %589
#BasicBlock: 1418
  %591 = load i32, i32* %i, align 4
  %592 = load i32, i32* %3, align 4
  %593 = load i32, i32* %3, align 4
  %594 = mul nsw i32 %592, %593
  %595 = icmp slt i32 %591, %594
  br i1 %595, label %596, label %603
#BasicBlock: 1419
  %598 = load i32, i32* %i, align 4
  %599 = sext i32 %598 to i64
  %600 = getelementptr inbounds double, double* %588, i64 %599
  store double 0.000000e+00, double* %600, align 8
  br label %601
#BasicBlock: 1420
  %603 = load i32, i32* %i, align 4
  %604 = add nsw i32 %603, 1
  store i32 %604, i32* %i, align 4
  br label %590
#BasicBlock: 1421
  %607 = load i32, i32* %3, align 4
  %608 = zext i32 %607 to i64
  %609 = alloca [1 x double], i64 %608, align 16
  store i32 0, i32* %i, align 4
  br label %610
#BasicBlock: 1422
  %612 = load i32, i32* %i, align 4
  %613 = load i32, i32* %3, align 4
  %614 = icmp slt i32 %612, %613
  br i1 %614, label %615, label %633
#BasicBlock: 1423
  store i32 0, i32* %j, align 4
  br label %617
#BasicBlock: 1424
  %619 = load i32, i32* %j, align 4
  %620 = icmp slt i32 %619, 1
  br i1 %620, label %621, label %631
#BasicBlock: 1425
  %623 = load i32, i32* %j, align 4
  %624 = sext i32 %623 to i64
  %625 = load i32, i32* %i, align 4
  %626 = sext i32 %625 to i64
  %627 = getelementptr inbounds [1 x double], [1 x double]* %609, i64 %626
  %628 = getelementptr inbounds [1 x double], [1 x double]* %627, i64 0, i64 %624
  store double 0.000000e+00, double* %628, align 8
  br label %629
#BasicBlock: 1426
  %631 = load i32, i32* %j, align 4
  %632 = add nsw i32 %631, 1
  store i32 %632, i32* %j, align 4
  br label %618
#BasicBlock: 1427
  br label %635
#BasicBlock: 1428
  %637 = load i32, i32* %i, align 4
  %638 = add nsw i32 %637, 1
  store i32 %638, i32* %i, align 4
  br label %611
#BasicBlock: 1429
  %641 = load i32, i32* %3, align 4
  %642 = zext i32 %641 to i64
  %643 = alloca [1 x double], i64 %642, align 16
  store i32 0, i32* %i, align 4
  br label %644
#BasicBlock: 1430
  %646 = load i32, i32* %i, align 4
  %647 = load i32, i32* %3, align 4
  %648 = icmp slt i32 %646, %647
  br i1 %648, label %649, label %667
#BasicBlock: 1431
  store i32 0, i32* %j, align 4
  br label %651
#BasicBlock: 1432
  %653 = load i32, i32* %j, align 4
  %654 = icmp slt i32 %653, 1
  br i1 %654, label %655, label %665
#BasicBlock: 1433
  %657 = load i32, i32* %j, align 4
  %658 = sext i32 %657 to i64
  %659 = load i32, i32* %i, align 4
  %660 = sext i32 %659 to i64
  %661 = getelementptr inbounds [1 x double], [1 x double]* %643, i64 %660
  %662 = getelementptr inbounds [1 x double], [1 x double]* %661, i64 0, i64 %658
  store double 0.000000e+00, double* %662, align 8
  br label %663
#BasicBlock: 1434
  %665 = load i32, i32* %j, align 4
  %666 = add nsw i32 %665, 1
  store i32 %666, i32* %j, align 4
  br label %652
#BasicBlock: 1435
  br label %669
#BasicBlock: 1436
  %671 = load i32, i32* %i, align 4
  %672 = add nsw i32 %671, 1
  store i32 %672, i32* %i, align 4
  br label %645
#BasicBlock: 1437
  %675 = load i32, i32* %3, align 4
  %676 = zext i32 %675 to i64
  %677 = alloca [1 x double], i64 %676, align 16
  store i32 0, i32* %i, align 4
  br label %678
#BasicBlock: 1438
  %680 = load i32, i32* %i, align 4
  %681 = load i32, i32* %3, align 4
  %682 = icmp slt i32 %680, %681
  br i1 %682, label %683, label %701
#BasicBlock: 1439
  store i32 0, i32* %j, align 4
  br label %685
#BasicBlock: 1440
  %687 = load i32, i32* %j, align 4
  %688 = icmp slt i32 %687, 1
  br i1 %688, label %689, label %699
#BasicBlock: 1441
  %691 = load i32, i32* %j, align 4
  %692 = sext i32 %691 to i64
  %693 = load i32, i32* %i, align 4
  %694 = sext i32 %693 to i64
  %695 = getelementptr inbounds [1 x double], [1 x double]* %677, i64 %694
  %696 = getelementptr inbounds [1 x double], [1 x double]* %695, i64 0, i64 %692
  store double 0.000000e+00, double* %696, align 8
  br label %697
#BasicBlock: 1442
  %699 = load i32, i32* %j, align 4
  %700 = add nsw i32 %699, 1
  store i32 %700, i32* %j, align 4
  br label %686
#BasicBlock: 1443
  br label %703
#BasicBlock: 1444
  %705 = load i32, i32* %i, align 4
  %706 = add nsw i32 %705, 1
  store i32 %706, i32* %i, align 4
  br label %679
#BasicBlock: 1445
  %709 = load double*, double** %1, align 8
  call void @factor(double* %709, i32 32, i32 16, double* %588)
  br label %710
#BasicBlock: 1446
  store i32 0, i32* %L_1d_m, align 4
  store i32 0, i32* %i, align 4
  br label %712
#BasicBlock: 1447
  %714 = load i32, i32* %i, align 4
  %715 = load i32, i32* %3, align 4
  %716 = icmp slt i32 %714, %715
  br i1 %716, label %717, label %742
#BasicBlock: 1448
  store i32 0, i32* %j, align 4
  br label %719
#BasicBlock: 1449
  %721 = load i32, i32* %j, align 4
  %722 = load i32, i32* %3, align 4
  %723 = icmp slt i32 %721, %722
  br i1 %723, label %724, label %740
#BasicBlock: 1450
  %726 = load i32, i32* %L_1d_m, align 4
  %727 = sext i32 %726 to i64
  %728 = getelementptr inbounds double, double* %588, i64 %727
  %729 = load double, double* %728, align 8
  %730 = load i32, i32* %j, align 4
  %731 = sext i32 %730 to i64
  %732 = load i32, i32* %i, align 4
  %733 = sext i32 %732 to i64
  %734 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %L_sparse, i64 0, i64 %733
  %735 = getelementptr inbounds [3 x double], [3 x double]* %734, i64 0, i64 %731
  store double %729, double* %735, align 8
  %736 = load i32, i32* %L_1d_m, align 4
  %737 = add nsw i32 %736, 1
  store i32 %737, i32* %L_1d_m, align 4
  br label %738
#BasicBlock: 1451
  %740 = load i32, i32* %j, align 4
  %741 = add nsw i32 %740, 1
  store i32 %741, i32* %j, align 4
  br label %720
#BasicBlock: 1452
  br label %744
#BasicBlock: 1453
  %746 = load i32, i32* %i, align 4
  %747 = add nsw i32 %746, 1
  store i32 %747, i32* %i, align 4
  br label %713
#BasicBlock: 1454
  store i32 0, i32* %i, align 4
  br label %750
#BasicBlock: 1455
  %752 = load i32, i32* %i, align 4
  %753 = load i32, i32* %3, align 4
  %754 = icmp slt i32 %752, %753
  br i1 %754, label %755, label %781
#BasicBlock: 1456
  store i32 0, i32* %j, align 4
  br label %757
#BasicBlock: 1457
  %759 = load i32, i32* %j, align 4
  %760 = load i32, i32* %3, align 4
  %761 = icmp slt i32 %759, %760
  br i1 %761, label %762, label %779
#BasicBlock: 1458
  %764 = load i32, i32* %j, align 4
  %765 = sext i32 %764 to i64
  %766 = load i32, i32* %i, align 4
  %767 = sext i32 %766 to i64
  %768 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %L_sparse, i64 0, i64 %767
  %769 = getelementptr inbounds [3 x double], [3 x double]* %768, i64 0, i64 %765
  %770 = load double, double* %769, align 8
  %771 = load i32, i32* %i, align 4
  %772 = sext i32 %771 to i64
  %773 = load i32, i32* %j, align 4
  %774 = sext i32 %773 to i64
  %775 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %U, i64 0, i64 %774
  %776 = getelementptr inbounds [3 x double], [3 x double]* %775, i64 0, i64 %772
  store double %770, double* %776, align 8
  br label %777
#BasicBlock: 1459
  %779 = load i32, i32* %j, align 4
  %780 = add nsw i32 %779, 1
  store i32 %780, i32* %j, align 4
  br label %758
#BasicBlock: 1460
  br label %783
#BasicBlock: 1461
  %785 = load i32, i32* %i, align 4
  %786 = add nsw i32 %785, 1
  store i32 %786, i32* %i, align 4
  br label %751
#BasicBlock: 1462
  store i32 0, i32* %i, align 4
  br label %789
#BasicBlock: 1463
  %791 = load i32, i32* %i, align 4
  %792 = load i32, i32* %3, align 4
  %793 = icmp slt i32 %791, %792
  br i1 %793, label %794, label %836
#BasicBlock: 1464
  store i32 0, i32* %j, align 4
  br label %796
#BasicBlock: 1465
  %798 = load i32, i32* %j, align 4
  %799 = icmp slt i32 %798, 1
  br i1 %799, label %800, label %834
#BasicBlock: 1466
  %802 = load i32, i32* %j, align 4
  %803 = sext i32 %802 to i64
  %804 = load i32, i32* %i, align 4
  %805 = sext i32 %804 to i64
  %806 = getelementptr inbounds [1 x double], [1 x double]* %492, i64 %805
  %807 = getelementptr inbounds [1 x double], [1 x double]* %806, i64 0, i64 %803
  store double 0.000000e+00, double* %807, align 8
  %808 = load i32, i32* %j, align 4
  %809 = sext i32 %808 to i64
  %810 = load i32, i32* %i, align 4
  %811 = sext i32 %810 to i64
  %812 = getelementptr inbounds [1 x double], [1 x double]* %351, i64 %811
  %813 = getelementptr inbounds [1 x double], [1 x double]* %812, i64 0, i64 %809
  store double 0.000000e+00, double* %813, align 8
  %814 = load i32, i32* %j, align 4
  %815 = sext i32 %814 to i64
  %816 = load i32, i32* %i, align 4
  %817 = sext i32 %816 to i64
  %818 = getelementptr inbounds [1 x double], [1 x double]* %458, i64 %817
  %819 = getelementptr inbounds [1 x double], [1 x double]* %818, i64 0, i64 %815
  store double 0.000000e+00, double* %819, align 8
  %820 = load i32, i32* %j, align 4
  %821 = sext i32 %820 to i64
  %822 = load i32, i32* %i, align 4
  %823 = sext i32 %822 to i64
  %824 = getelementptr inbounds [1 x double], [1 x double]* %643, i64 %823
  %825 = getelementptr inbounds [1 x double], [1 x double]* %824, i64 0, i64 %821
  store double 0.000000e+00, double* %825, align 8
  %826 = load i32, i32* %j, align 4
  %827 = sext i32 %826 to i64
  %828 = load i32, i32* %i, align 4
  %829 = sext i32 %828 to i64
  %830 = getelementptr inbounds [1 x double], [1 x double]* %677, i64 %829
  %831 = getelementptr inbounds [1 x double], [1 x double]* %830, i64 0, i64 %827
  store double 0.000000e+00, double* %831, align 8
  br label %832
#BasicBlock: 1467
  %834 = load i32, i32* %j, align 4
  %835 = add nsw i32 %834, 1
  store i32 %835, i32* %j, align 4
  br label %797
#BasicBlock: 1468
  br label %838
#BasicBlock: 1469
  %840 = load i32, i32* %i, align 4
  %841 = add nsw i32 %840, 1
  store i32 %841, i32* %i, align 4
  br label %790
#BasicBlock: 1470
  %844 = load i32, i32* %3, align 4
  %845 = load i32, i32* %3, align 4
  %846 = mul nsw i32 %844, %845
  %847 = zext i32 %846 to i64
  %848 = alloca double, i64 %847, align 16
  store i32 0, i32* %i, align 4
  br label %849
#BasicBlock: 1471
  %851 = load i32, i32* %i, align 4
  %852 = load i32, i32* %3, align 4
  %853 = load i32, i32* %3, align 4
  %854 = mul nsw i32 %852, %853
  %855 = icmp slt i32 %851, %854
  br i1 %855, label %856, label %863
#BasicBlock: 1472
  %858 = load i32, i32* %i, align 4
  %859 = sext i32 %858 to i64
  %860 = getelementptr inbounds double, double* %848, i64 %859
  store double 0.000000e+00, double* %860, align 8
  br label %861
#BasicBlock: 1473
  %863 = load i32, i32* %i, align 4
  %864 = add nsw i32 %863, 1
  store i32 %864, i32* %i, align 4
  br label %850
#BasicBlock: 1474
  %867 = load i32, i32* %3, align 4
  %868 = load i32, i32* %3, align 4
  %869 = mul nsw i32 %867, %868
  %870 = zext i32 %869 to i64
  %871 = alloca double, i64 %870, align 16
  store i32 0, i32* %i, align 4
  br label %872
#BasicBlock: 1475
  %874 = load i32, i32* %i, align 4
  %875 = load i32, i32* %3, align 4
  %876 = load i32, i32* %3, align 4
  %877 = mul nsw i32 %875, %876
  %878 = icmp slt i32 %874, %877
  br i1 %878, label %879, label %886
#BasicBlock: 1476
  %881 = load i32, i32* %i, align 4
  %882 = sext i32 %881 to i64
  %883 = getelementptr inbounds double, double* %871, i64 %882
  store double 0.000000e+00, double* %883, align 8
  br label %884
#BasicBlock: 1477
  %886 = load i32, i32* %i, align 4
  %887 = add nsw i32 %886, 1
  store i32 %887, i32* %i, align 4
  br label %873
#BasicBlock: 1478
  %890 = load i32, i32* %3, align 4
  %891 = zext i32 %890 to i64
  %892 = load i32, i32* %3, align 4
  %893 = zext i32 %892 to i64
  %894 = mul nuw i64 %891, %893
  %895 = alloca double, i64 %894, align 16
  store i32 0, i32* %i, align 4
  br label %896
#BasicBlock: 1479
  %898 = load i32, i32* %i, align 4
  %899 = load i32, i32* %3, align 4
  %900 = icmp slt i32 %898, %899
  br i1 %900, label %901, label %921
#BasicBlock: 1480
  store i32 0, i32* %j, align 4
  br label %903
#BasicBlock: 1481
  %905 = load i32, i32* %j, align 4
  %906 = load i32, i32* %3, align 4
  %907 = icmp slt i32 %905, %906
  br i1 %907, label %908, label %919
#BasicBlock: 1482
  %910 = load i32, i32* %j, align 4
  %911 = sext i32 %910 to i64
  %912 = load i32, i32* %i, align 4
  %913 = sext i32 %912 to i64
  %914 = mul nsw i64 %913, %893
  %915 = getelementptr inbounds double, double* %895, i64 %914
  %916 = getelementptr inbounds double, double* %915, i64 %911
  store double 0.000000e+00, double* %916, align 8
  br label %917
#BasicBlock: 1483
  %919 = load i32, i32* %j, align 4
  %920 = add nsw i32 %919, 1
  store i32 %920, i32* %j, align 4
  br label %904
#BasicBlock: 1484
  br label %923
#BasicBlock: 1485
  %925 = load i32, i32* %i, align 4
  %926 = add nsw i32 %925, 1
  store i32 %926, i32* %i, align 4
  br label %897
#BasicBlock: 1486
  store i32 0, i32* %L_const, align 4
  %929 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %L_sparse, i32 0, i32 0
  call void @inverse([3 x double]* %929, double* %848)
  br label %930
#BasicBlock: 1487
  store i32 0, i32* %i, align 4
  br label %932
#BasicBlock: 1488
  %934 = load i32, i32* %i, align 4
  %935 = load i32, i32* %3, align 4
  %936 = icmp slt i32 %934, %935
  br i1 %936, label %937, label %963
#BasicBlock: 1489
  store i32 0, i32* %j, align 4
  br label %939
#BasicBlock: 1490
  %941 = load i32, i32* %j, align 4
  %942 = load i32, i32* %3, align 4
  %943 = icmp slt i32 %941, %942
  br i1 %943, label %944, label %961
#BasicBlock: 1491
  %946 = load i32, i32* %L_const, align 4
  %947 = sext i32 %946 to i64
  %948 = getelementptr inbounds double, double* %848, i64 %947
  %949 = load double, double* %948, align 8
  %950 = load i32, i32* %j, align 4
  %951 = sext i32 %950 to i64
  %952 = load i32, i32* %i, align 4
  %953 = sext i32 %952 to i64
  %954 = mul nsw i64 %953, %893
  %955 = getelementptr inbounds double, double* %895, i64 %954
  %956 = getelementptr inbounds double, double* %955, i64 %951
  store double %949, double* %956, align 8
  %957 = load i32, i32* %L_const, align 4
  %958 = add nsw i32 %957, 1
  store i32 %958, i32* %L_const, align 4
  br label %959
#BasicBlock: 1492
  %961 = load i32, i32* %j, align 4
  %962 = add nsw i32 %961, 1
  store i32 %962, i32* %j, align 4
  br label %940
#BasicBlock: 1493
  br label %965
#BasicBlock: 1494
  %967 = load i32, i32* %i, align 4
  %968 = add nsw i32 %967, 1
  store i32 %968, i32* %i, align 4
  br label %933
#BasicBlock: 1495
  store i32 0, i32* %i, align 4
  br label %971
#BasicBlock: 1496
  %973 = load i32, i32* %i, align 4
  %974 = load i32, i32* %3, align 4
  %975 = icmp slt i32 %973, %974
  br i1 %975, label %976, label %1028
#BasicBlock: 1497
  store i32 0, i32* %j, align 4
  br label %978
#BasicBlock: 1498
  %980 = load i32, i32* %j, align 4
  %981 = icmp slt i32 %980, 1
  br i1 %981, label %982, label %1026
#BasicBlock: 1499
  store i32 0, i32* %k, align 4
  br label %984
#BasicBlock: 1500
  %986 = load i32, i32* %k, align 4
  %987 = load i32, i32* %3, align 4
  %988 = icmp slt i32 %986, %987
  br i1 %988, label %989, label %1024
#BasicBlock: 1501
  %991 = load i32, i32* %j, align 4
  %992 = sext i32 %991 to i64
  %993 = load i32, i32* %i, align 4
  %994 = sext i32 %993 to i64
  %995 = getelementptr inbounds [1 x double], [1 x double]* %424, i64 %994
  %996 = getelementptr inbounds [1 x double], [1 x double]* %995, i64 0, i64 %992
  %997 = load double, double* %996, align 8
  %998 = load i32, i32* %k, align 4
  %999 = sext i32 %998 to i64
  %1000 = load i32, i32* %i, align 4
  %1001 = sext i32 %1000 to i64
  %1002 = mul nsw i64 %1001, %893
  %1003 = getelementptr inbounds double, double* %895, i64 %1002
  %1004 = getelementptr inbounds double, double* %1003, i64 %999
  %1005 = load double, double* %1004, align 8
  %1006 = load i32, i32* %j, align 4
  %1007 = sext i32 %1006 to i64
  %1008 = load i32, i32* %k, align 4
  %1009 = sext i32 %1008 to i64
  %1010 = mul nsw i64 %1009, %386
  %1011 = getelementptr inbounds double, double* %388, i64 %1010
  %1012 = getelementptr inbounds double, double* %1011, i64 %1007
  %1013 = load double, double* %1012, align 8
  %1014 = fmul double %1005, %1013
  %1015 = fadd double %997, %1014
  %1016 = load i32, i32* %j, align 4
  %1017 = sext i32 %1016 to i64
  %1018 = load i32, i32* %i, align 4
  %1019 = sext i32 %1018 to i64
  %1020 = getelementptr inbounds [1 x double], [1 x double]* %424, i64 %1019
  %1021 = getelementptr inbounds [1 x double], [1 x double]* %1020, i64 0, i64 %1017
  store double %1015, double* %1021, align 8
  br label %1022
#BasicBlock: 1502
  %1024 = load i32, i32* %k, align 4
  %1025 = add nsw i32 %1024, 1
  store i32 %1025, i32* %k, align 4
  br label %985
#BasicBlock: 1503
  br label %1028
#BasicBlock: 1504
  %1030 = load i32, i32* %j, align 4
  %1031 = add nsw i32 %1030, 1
  store i32 %1031, i32* %j, align 4
  br label %979
#BasicBlock: 1505
  br label %1034
#BasicBlock: 1506
  %1036 = load i32, i32* %i, align 4
  %1037 = add nsw i32 %1036, 1
  store i32 %1037, i32* %i, align 4
  br label %972
#BasicBlock: 1507
  %1040 = load i32, i32* %3, align 4
  %1041 = zext i32 %1040 to i64
  %1042 = load i32, i32* %3, align 4
  %1043 = zext i32 %1042 to i64
  %1044 = mul nuw i64 %1041, %1043
  %1045 = alloca double, i64 %1044, align 16
  store i32 0, i32* %i, align 4
  br label %1046
#BasicBlock: 1508
  %1048 = load i32, i32* %i, align 4
  %1049 = load i32, i32* %3, align 4
  %1050 = icmp slt i32 %1048, %1049
  br i1 %1050, label %1051, label %1071
#BasicBlock: 1509
  store i32 0, i32* %j, align 4
  br label %1053
#BasicBlock: 1510
  %1055 = load i32, i32* %j, align 4
  %1056 = load i32, i32* %3, align 4
  %1057 = icmp slt i32 %1055, %1056
  br i1 %1057, label %1058, label %1069
#BasicBlock: 1511
  %1060 = load i32, i32* %j, align 4
  %1061 = sext i32 %1060 to i64
  %1062 = load i32, i32* %i, align 4
  %1063 = sext i32 %1062 to i64
  %1064 = mul nsw i64 %1063, %1043
  %1065 = getelementptr inbounds double, double* %1045, i64 %1064
  %1066 = getelementptr inbounds double, double* %1065, i64 %1061
  store double 0.000000e+00, double* %1066, align 8
  br label %1067
#BasicBlock: 1512
  %1069 = load i32, i32* %j, align 4
  %1070 = add nsw i32 %1069, 1
  store i32 %1070, i32* %j, align 4
  br label %1054
#BasicBlock: 1513
  br label %1073
#BasicBlock: 1514
  %1075 = load i32, i32* %i, align 4
  %1076 = add nsw i32 %1075, 1
  store i32 %1076, i32* %i, align 4
  br label %1047
#BasicBlock: 1515
  store i32 0, i32* %U_const, align 4
  %1079 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %U, i32 0, i32 0
  call void @inverse([3 x double]* %1079, double* %871)
  br label %1080
#BasicBlock: 1516
  store i32 0, i32* %i, align 4
  br label %1082
#BasicBlock: 1517
  %1084 = load i32, i32* %i, align 4
  %1085 = load i32, i32* %3, align 4
  %1086 = icmp slt i32 %1084, %1085
  br i1 %1086, label %1087, label %1113
#BasicBlock: 1518
  store i32 0, i32* %j, align 4
  br label %1089
#BasicBlock: 1519
  %1091 = load i32, i32* %j, align 4
  %1092 = load i32, i32* %3, align 4
  %1093 = icmp slt i32 %1091, %1092
  br i1 %1093, label %1094, label %1111
#BasicBlock: 1520
  %1096 = load i32, i32* %U_const, align 4
  %1097 = sext i32 %1096 to i64
  %1098 = getelementptr inbounds double, double* %871, i64 %1097
  %1099 = load double, double* %1098, align 8
  %1100 = load i32, i32* %j, align 4
  %1101 = sext i32 %1100 to i64
  %1102 = load i32, i32* %i, align 4
  %1103 = sext i32 %1102 to i64
  %1104 = mul nsw i64 %1103, %1043
  %1105 = getelementptr inbounds double, double* %1045, i64 %1104
  %1106 = getelementptr inbounds double, double* %1105, i64 %1101
  store double %1099, double* %1106, align 8
  %1107 = load i32, i32* %U_const, align 4
  %1108 = add nsw i32 %1107, 1
  store i32 %1108, i32* %U_const, align 4
  br label %1109
#BasicBlock: 1521
  %1111 = load i32, i32* %j, align 4
  %1112 = add nsw i32 %1111, 1
  store i32 %1112, i32* %j, align 4
  br label %1090
#BasicBlock: 1522
  br label %1115
#BasicBlock: 1523
  %1117 = load i32, i32* %i, align 4
  %1118 = add nsw i32 %1117, 1
  store i32 %1118, i32* %i, align 4
  br label %1083
#BasicBlock: 1524
  store i32 0, i32* %Max_iter, align 4
  br label %1121
#BasicBlock: 1525
  %1123 = load i32, i32* %Max_iter, align 4
  %1124 = icmp slt i32 %1123, 100
  br i1 %1124, label %1125, label %1555
#BasicBlock: 1526
  store i32 0, i32* %j, align 4
  br label %1127
#BasicBlock: 1527
  %1129 = load i32, i32* %j, align 4
  %1130 = load i32, i32* %3, align 4
  %1131 = icmp slt i32 %1129, %1130
  br i1 %1131, label %1132, label %1177
#BasicBlock: 1528
  store i32 0, i32* %k, align 4
  br label %1134
#BasicBlock: 1529
  %1136 = load i32, i32* %k, align 4
  %1137 = icmp slt i32 %1136, 1
  br i1 %1137, label %1138, label %1175
#BasicBlock: 1530
  %1140 = load i32, i32* %k, align 4
  %1141 = sext i32 %1140 to i64
  %1142 = load i32, i32* %j, align 4
  %1143 = sext i32 %1142 to i64
  %1144 = getelementptr inbounds [16 x [1 x double]], [16 x [1 x double]]* %Atb, i64 0, i64 %1143
  %1145 = getelementptr inbounds [1 x double], [1 x double]* %1144, i64 0, i64 %1141
  %1146 = load double, double* %1145, align 8
  %1147 = load i32, i32* %rho, align 4
  %1148 = sitofp i32 %1147 to double
  %1149 = load i32, i32* %k, align 4
  %1150 = sext i32 %1149 to i64
  %1151 = load i32, i32* %j, align 4
  %1152 = sext i32 %1151 to i64
  %1153 = getelementptr inbounds [1 x double], [1 x double]* %492, i64 %1152
  %1154 = getelementptr inbounds [1 x double], [1 x double]* %1153, i64 0, i64 %1150
  %1155 = load double, double* %1154, align 8
  %1156 = load i32, i32* %k, align 4
  %1157 = sext i32 %1156 to i64
  %1158 = load i32, i32* %j, align 4
  %1159 = sext i32 %1158 to i64
  %1160 = getelementptr inbounds [1 x double], [1 x double]* %351, i64 %1159
  %1161 = getelementptr inbounds [1 x double], [1 x double]* %1160, i64 0, i64 %1157
  %1162 = load double, double* %1161, align 8
  %1163 = fsub double %1155, %1162
  %1164 = fmul double %1148, %1163
  %1165 = fadd double %1146, %1164
  %1166 = load i32, i32* %k, align 4
  %1167 = sext i32 %1166 to i64
  %1168 = load i32, i32* %j, align 4
  %1169 = sext i32 %1168 to i64
  %1170 = mul nsw i64 %1169, %386
  %1171 = getelementptr inbounds double, double* %388, i64 %1170
  %1172 = getelementptr inbounds double, double* %1171, i64 %1167
  store double %1165, double* %1172, align 8
  br label %1173
#BasicBlock: 1531
  %1175 = load i32, i32* %k, align 4
  %1176 = add nsw i32 %1175, 1
  store i32 %1176, i32* %k, align 4
  br label %1135
#BasicBlock: 1532
  br label %1179
#BasicBlock: 1533
  %1181 = load i32, i32* %j, align 4
  %1182 = add nsw i32 %1181, 1
  store i32 %1182, i32* %j, align 4
  br label %1128
#BasicBlock: 1534
  store i32 0, i32* %i, align 4
  br label %1185
#BasicBlock: 1535
  %1187 = load i32, i32* %i, align 4
  %1188 = load i32, i32* %3, align 4
  %1189 = icmp slt i32 %1187, %1188
  br i1 %1189, label %1190, label %1241
#BasicBlock: 1536
  store i32 0, i32* %j, align 4
  br label %1192
#BasicBlock: 1537
  %1194 = load i32, i32* %j, align 4
  %1195 = icmp slt i32 %1194, 1
  br i1 %1195, label %1196, label %1239
#BasicBlock: 1538
  store i32 0, i32* %k, align 4
  br label %1198
#BasicBlock: 1539
  %1200 = load i32, i32* %k, align 4
  %1201 = load i32, i32* %3, align 4
  %1202 = icmp slt i32 %1200, %1201
  br i1 %1202, label %1203, label %1237
#BasicBlock: 1540
  %1205 = load i32, i32* %j, align 4
  %1206 = sext i32 %1205 to i64
  %1207 = load i32, i32* %i, align 4
  %1208 = sext i32 %1207 to i64
  %1209 = getelementptr inbounds [1 x double], [1 x double]* %609, i64 %1208
  %1210 = getelementptr inbounds [1 x double], [1 x double]* %1209, i64 0, i64 %1206
  %1211 = load double, double* %1210, align 8
  %1212 = load i32, i32* %k, align 4
  %1213 = sext i32 %1212 to i64
  %1214 = load i32, i32* %i, align 4
  %1215 = sext i32 %1214 to i64
  %1216 = mul nsw i64 %1215, %1043
  %1217 = getelementptr inbounds double, double* %1045, i64 %1216
  %1218 = getelementptr inbounds double, double* %1217, i64 %1213
  %1219 = load double, double* %1218, align 8
  %1220 = load i32, i32* %j, align 4
  %1221 = sext i32 %1220 to i64
  %1222 = load i32, i32* %k, align 4
  %1223 = sext i32 %1222 to i64
  %1224 = getelementptr inbounds [1 x double], [1 x double]* %424, i64 %1223
  %1225 = getelementptr inbounds [1 x double], [1 x double]* %1224, i64 0, i64 %1221
  %1226 = load double, double* %1225, align 8
  %1227 = fmul double %1219, %1226
  %1228 = fadd double %1211, %1227
  %1229 = load i32, i32* %j, align 4
  %1230 = sext i32 %1229 to i64
  %1231 = load i32, i32* %i, align 4
  %1232 = sext i32 %1231 to i64
  %1233 = getelementptr inbounds [1 x double], [1 x double]* %609, i64 %1232
  %1234 = getelementptr inbounds [1 x double], [1 x double]* %1233, i64 0, i64 %1230
  store double %1228, double* %1234, align 8
  br label %1235
#BasicBlock: 1541
  %1237 = load i32, i32* %k, align 4
  %1238 = add nsw i32 %1237, 1
  store i32 %1238, i32* %k, align 4
  br label %1199
#BasicBlock: 1542
  br label %1241
#BasicBlock: 1543
  %1243 = load i32, i32* %j, align 4
  %1244 = add nsw i32 %1243, 1
  store i32 %1244, i32* %j, align 4
  br label %1193
#BasicBlock: 1544
  br label %1247
#BasicBlock: 1545
  %1249 = load i32, i32* %i, align 4
  %1250 = add nsw i32 %1249, 1
  store i32 %1250, i32* %i, align 4
  br label %1186
#BasicBlock: 1546
  store i32 0, i32* %i, align 4
  br label %1253
#BasicBlock: 1547
  %1255 = load i32, i32* %i, align 4
  %1256 = load i32, i32* %3, align 4
  %1257 = icmp slt i32 %1255, %1256
  br i1 %1257, label %1258, label %1283
#BasicBlock: 1548
  store i32 0, i32* %j, align 4
  br label %1260
#BasicBlock: 1549
  %1262 = load i32, i32* %j, align 4
  %1263 = icmp slt i32 %1262, 1
  br i1 %1263, label %1264, label %1281
#BasicBlock: 1550
  %1266 = load i32, i32* %j, align 4
  %1267 = sext i32 %1266 to i64
  %1268 = load i32, i32* %i, align 4
  %1269 = sext i32 %1268 to i64
  %1270 = getelementptr inbounds [1 x double], [1 x double]* %609, i64 %1269
  %1271 = getelementptr inbounds [1 x double], [1 x double]* %1270, i64 0, i64 %1267
  %1272 = load double, double* %1271, align 8
  %1273 = load i32, i32* %j, align 4
  %1274 = sext i32 %1273 to i64
  %1275 = load i32, i32* %i, align 4
  %1276 = sext i32 %1275 to i64
  %1277 = getelementptr inbounds [1 x double], [1 x double]* %458, i64 %1276
  %1278 = getelementptr inbounds [1 x double], [1 x double]* %1277, i64 0, i64 %1274
  store double %1272, double* %1278, align 8
  br label %1279
#BasicBlock: 1551
  %1281 = load i32, i32* %j, align 4
  %1282 = add nsw i32 %1281, 1
  store i32 %1282, i32* %j, align 4
  br label %1261
#BasicBlock: 1552
  br label %1285
#BasicBlock: 1553
  %1287 = load i32, i32* %i, align 4
  %1288 = add nsw i32 %1287, 1
  store i32 %1288, i32* %i, align 4
  br label %1254
#BasicBlock: 1554
  store i32 0, i32* %i, align 4
  br label %1291
#BasicBlock: 1555
  %1293 = load i32, i32* %i, align 4
  %1294 = load i32, i32* %3, align 4
  %1295 = icmp slt i32 %1293, %1294
  br i1 %1295, label %1296, label %1330
#BasicBlock: 1556
  store i32 0, i32* %j, align 4
  br label %1298
#BasicBlock: 1557
  %1300 = load i32, i32* %j, align 4
  %1301 = icmp slt i32 %1300, 1
  br i1 %1301, label %1302, label %1328
#BasicBlock: 1558
  %1304 = load i32, i32* %j, align 4
  %1305 = sext i32 %1304 to i64
  %1306 = load i32, i32* %i, align 4
  %1307 = sext i32 %1306 to i64
  %1308 = getelementptr inbounds [1 x double], [1 x double]* %351, i64 %1307
  %1309 = getelementptr inbounds [1 x double], [1 x double]* %1308, i64 0, i64 %1305
  %1310 = load double, double* %1309, align 8
  %1311 = load i32, i32* %j, align 4
  %1312 = sext i32 %1311 to i64
  %1313 = load i32, i32* %i, align 4
  %1314 = sext i32 %1313 to i64
  %1315 = getelementptr inbounds [1 x double], [1 x double]* %458, i64 %1314
  %1316 = getelementptr inbounds [1 x double], [1 x double]* %1315, i64 0, i64 %1312
  %1317 = load double, double* %1316, align 8
  %1318 = fadd double %1310, %1317
  %1319 = fsub double %1318, 2.500000e-01
  %1320 = load i32, i32* %j, align 4
  %1321 = sext i32 %1320 to i64
  %1322 = load i32, i32* %i, align 4
  %1323 = sext i32 %1322 to i64
  %1324 = getelementptr inbounds [1 x double], [1 x double]* %643, i64 %1323
  %1325 = getelementptr inbounds [1 x double], [1 x double]* %1324, i64 0, i64 %1321
  store double %1319, double* %1325, align 8
  br label %1326
#BasicBlock: 1559
  %1328 = load i32, i32* %j, align 4
  %1329 = add nsw i32 %1328, 1
  store i32 %1329, i32* %j, align 4
  br label %1299
#BasicBlock: 1560
  br label %1332
#BasicBlock: 1561
  %1334 = load i32, i32* %i, align 4
  %1335 = add nsw i32 %1334, 1
  store i32 %1335, i32* %i, align 4
  br label %1292
#BasicBlock: 1562
  store i32 0, i32* %i, align 4
  br label %1338
#BasicBlock: 1563
  %1340 = load i32, i32* %i, align 4
  %1341 = load i32, i32* %3, align 4
  %1342 = icmp slt i32 %1340, %1341
  br i1 %1342, label %1343, label %1378
#BasicBlock: 1564
  store i32 0, i32* %j, align 4
  br label %1345
#BasicBlock: 1565
  %1347 = load i32, i32* %j, align 4
  %1348 = icmp slt i32 %1347, 1
  br i1 %1348, label %1349, label %1376
#BasicBlock: 1566
  %1351 = load i32, i32* %j, align 4
  %1352 = sext i32 %1351 to i64
  %1353 = load i32, i32* %i, align 4
  %1354 = sext i32 %1353 to i64
  %1355 = getelementptr inbounds [1 x double], [1 x double]* %351, i64 %1354
  %1356 = getelementptr inbounds [1 x double], [1 x double]* %1355, i64 0, i64 %1352
  %1357 = load double, double* %1356, align 8
  %1358 = load i32, i32* %j, align 4
  %1359 = sext i32 %1358 to i64
  %1360 = load i32, i32* %i, align 4
  %1361 = sext i32 %1360 to i64
  %1362 = getelementptr inbounds [1 x double], [1 x double]* %458, i64 %1361
  %1363 = getelementptr inbounds [1 x double], [1 x double]* %1362, i64 0, i64 %1359
  %1364 = load double, double* %1363, align 8
  %1365 = fadd double %1357, %1364
  %1366 = fsub double -0.000000e+00, %1365
  %1367 = fsub double %1366, 2.500000e-01
  %1368 = load i32, i32* %j, align 4
  %1369 = sext i32 %1368 to i64
  %1370 = load i32, i32* %i, align 4
  %1371 = sext i32 %1370 to i64
  %1372 = getelementptr inbounds [1 x double], [1 x double]* %677, i64 %1371
  %1373 = getelementptr inbounds [1 x double], [1 x double]* %1372, i64 0, i64 %1369
  store double %1367, double* %1373, align 8
  br label %1374
#BasicBlock: 1567
  %1376 = load i32, i32* %j, align 4
  %1377 = add nsw i32 %1376, 1
  store i32 %1377, i32* %j, align 4
  br label %1346
#BasicBlock: 1568
  br label %1380
#BasicBlock: 1569
  %1382 = load i32, i32* %i, align 4
  %1383 = add nsw i32 %1382, 1
  store i32 %1383, i32* %i, align 4
  br label %1339
#BasicBlock: 1570
  store i32 0, i32* %i, align 4
  br label %1386
#BasicBlock: 1571
  %1388 = load i32, i32* %i, align 4
  %1389 = load i32, i32* %3, align 4
  %1390 = icmp slt i32 %1388, %1389
  br i1 %1390, label %1391, label %1432
#BasicBlock: 1572
  store i32 0, i32* %j, align 4
  br label %1393
#BasicBlock: 1573
  %1395 = load i32, i32* %j, align 4
  %1396 = icmp slt i32 %1395, 1
  br i1 %1396, label %1397, label %1430
#BasicBlock: 1574
  %1399 = load i32, i32* %j, align 4
  %1400 = sext i32 %1399 to i64
  %1401 = load i32, i32* %i, align 4
  %1402 = sext i32 %1401 to i64
  %1403 = getelementptr inbounds [1 x double], [1 x double]* %643, i64 %1402
  %1404 = getelementptr inbounds [1 x double], [1 x double]* %1403, i64 0, i64 %1400
  %1405 = load double, double* %1404, align 8
  %1406 = fcmp olt double %1405, 0.000000e+00
  br i1 %1406, label %1407, label %1414
#BasicBlock: 1575
  %1409 = load i32, i32* %j, align 4
  %1410 = sext i32 %1409 to i64
  %1411 = load i32, i32* %i, align 4
  %1412 = sext i32 %1411 to i64
  %1413 = getelementptr inbounds [1 x double], [1 x double]* %643, i64 %1412
  %1414 = getelementptr inbounds [1 x double], [1 x double]* %1413, i64 0, i64 %1410
  store double 0.000000e+00, double* %1414, align 8
  br label %1429
#BasicBlock: 1576
  %1417 = load i32, i32* %j, align 4
  %1418 = sext i32 %1417 to i64
  %1419 = load i32, i32* %i, align 4
  %1420 = sext i32 %1419 to i64
  %1421 = getelementptr inbounds [1 x double], [1 x double]* %643, i64 %1420
  %1422 = getelementptr inbounds [1 x double], [1 x double]* %1421, i64 0, i64 %1418
  %1423 = load double, double* %1422, align 8
  %1424 = load i32, i32* %j, align 4
  %1425 = sext i32 %1424 to i64
  %1426 = load i32, i32* %i, align 4
  %1427 = sext i32 %1426 to i64
  %1428 = getelementptr inbounds [1 x double], [1 x double]* %643, i64 %1427
  %1429 = getelementptr inbounds [1 x double], [1 x double]* %1428, i64 0, i64 %1425
  store double %1423, double* %1429, align 8
  br label %1430
#BasicBlock: 1577
  %1432 = load i32, i32* %j, align 4
  %1433 = add nsw i32 %1432, 1
  store i32 %1433, i32* %j, align 4
  br label %1394
#BasicBlock: 1578
  br label %1436
#BasicBlock: 1579
  %1438 = load i32, i32* %i, align 4
  %1439 = add nsw i32 %1438, 1
  store i32 %1439, i32* %i, align 4
  br label %1387
#BasicBlock: 1580
  store i32 0, i32* %i, align 4
  br label %1442
#BasicBlock: 1581
  %1444 = load i32, i32* %i, align 4
  %1445 = load i32, i32* %3, align 4
  %1446 = icmp slt i32 %1444, %1445
  br i1 %1446, label %1447, label %1488
#BasicBlock: 1582
  store i32 0, i32* %j, align 4
  br label %1449
#BasicBlock: 1583
  %1451 = load i32, i32* %j, align 4
  %1452 = icmp slt i32 %1451, 1
  br i1 %1452, label %1453, label %1486
#BasicBlock: 1584
  %1455 = load i32, i32* %j, align 4
  %1456 = sext i32 %1455 to i64
  %1457 = load i32, i32* %i, align 4
  %1458 = sext i32 %1457 to i64
  %1459 = getelementptr inbounds [1 x double], [1 x double]* %677, i64 %1458
  %1460 = getelementptr inbounds [1 x double], [1 x double]* %1459, i64 0, i64 %1456
  %1461 = load double, double* %1460, align 8
  %1462 = fcmp olt double %1461, 0.000000e+00
  br i1 %1462, label %1463, label %1470
#BasicBlock: 1585
  %1465 = load i32, i32* %j, align 4
  %1466 = sext i32 %1465 to i64
  %1467 = load i32, i32* %i, align 4
  %1468 = sext i32 %1467 to i64
  %1469 = getelementptr inbounds [1 x double], [1 x double]* %677, i64 %1468
  %1470 = getelementptr inbounds [1 x double], [1 x double]* %1469, i64 0, i64 %1466
  store double 0.000000e+00, double* %1470, align 8
  br label %1485
#BasicBlock: 1586
  %1473 = load i32, i32* %j, align 4
  %1474 = sext i32 %1473 to i64
  %1475 = load i32, i32* %i, align 4
  %1476 = sext i32 %1475 to i64
  %1477 = getelementptr inbounds [1 x double], [1 x double]* %677, i64 %1476
  %1478 = getelementptr inbounds [1 x double], [1 x double]* %1477, i64 0, i64 %1474
  %1479 = load double, double* %1478, align 8
  %1480 = load i32, i32* %j, align 4
  %1481 = sext i32 %1480 to i64
  %1482 = load i32, i32* %i, align 4
  %1483 = sext i32 %1482 to i64
  %1484 = getelementptr inbounds [1 x double], [1 x double]* %677, i64 %1483
  %1485 = getelementptr inbounds [1 x double], [1 x double]* %1484, i64 0, i64 %1481
  store double %1479, double* %1485, align 8
  br label %1486
#BasicBlock: 1587
  %1488 = load i32, i32* %j, align 4
  %1489 = add nsw i32 %1488, 1
  store i32 %1489, i32* %j, align 4
  br label %1450
#BasicBlock: 1588
  br label %1492
#BasicBlock: 1589
  %1494 = load i32, i32* %i, align 4
  %1495 = add nsw i32 %1494, 1
  store i32 %1495, i32* %i, align 4
  br label %1443
#BasicBlock: 1590
  store i32 0, i32* %i, align 4
  br label %1498
#BasicBlock: 1591
  %1500 = load i32, i32* %i, align 4
  %1501 = load i32, i32* %3, align 4
  %1502 = icmp slt i32 %1500, %1501
  br i1 %1502, label %1503, label %1536
#BasicBlock: 1592
  store i32 0, i32* %j, align 4
  br label %1505
#BasicBlock: 1593
  %1507 = load i32, i32* %j, align 4
  %1508 = icmp slt i32 %1507, 1
  br i1 %1508, label %1509, label %1534
#BasicBlock: 1594
  %1511 = load i32, i32* %j, align 4
  %1512 = sext i32 %1511 to i64
  %1513 = load i32, i32* %i, align 4
  %1514 = sext i32 %1513 to i64
  %1515 = getelementptr inbounds [1 x double], [1 x double]* %643, i64 %1514
  %1516 = getelementptr inbounds [1 x double], [1 x double]* %1515, i64 0, i64 %1512
  %1517 = load double, double* %1516, align 8
  %1518 = load i32, i32* %j, align 4
  %1519 = sext i32 %1518 to i64
  %1520 = load i32, i32* %i, align 4
  %1521 = sext i32 %1520 to i64
  %1522 = getelementptr inbounds [1 x double], [1 x double]* %677, i64 %1521
  %1523 = getelementptr inbounds [1 x double], [1 x double]* %1522, i64 0, i64 %1519
  %1524 = load double, double* %1523, align 8
  %1525 = fsub double %1517, %1524
  %1526 = load i32, i32* %j, align 4
  %1527 = sext i32 %1526 to i64
  %1528 = load i32, i32* %i, align 4
  %1529 = sext i32 %1528 to i64
  %1530 = getelementptr inbounds [1 x double], [1 x double]* %492, i64 %1529
  %1531 = getelementptr inbounds [1 x double], [1 x double]* %1530, i64 0, i64 %1527
  store double %1525, double* %1531, align 8
  br label %1532
#BasicBlock: 1595
  %1534 = load i32, i32* %j, align 4
  %1535 = add nsw i32 %1534, 1
  store i32 %1535, i32* %j, align 4
  br label %1506
#BasicBlock: 1596
  br label %1538
#BasicBlock: 1597
  %1540 = load i32, i32* %i, align 4
  %1541 = add nsw i32 %1540, 1
  store i32 %1541, i32* %i, align 4
  br label %1499
#BasicBlock: 1598
  store i32 0, i32* %i, align 4
  br label %1544
#BasicBlock: 1599
  %1546 = load i32, i32* %i, align 4
  %1547 = load i32, i32* %3, align 4
  %1548 = icmp slt i32 %1546, %1547
  br i1 %1548, label %1549, label %1590
#BasicBlock: 1600
  store i32 0, i32* %j, align 4
  br label %1551
#BasicBlock: 1601
  %1553 = load i32, i32* %j, align 4
  %1554 = icmp slt i32 %1553, 1
  br i1 %1554, label %1555, label %1588
#BasicBlock: 1602
  %1557 = load i32, i32* %j, align 4
  %1558 = sext i32 %1557 to i64
  %1559 = load i32, i32* %i, align 4
  %1560 = sext i32 %1559 to i64
  %1561 = getelementptr inbounds [1 x double], [1 x double]* %351, i64 %1560
  %1562 = getelementptr inbounds [1 x double], [1 x double]* %1561, i64 0, i64 %1558
  %1563 = load double, double* %1562, align 8
  %1564 = load i32, i32* %j, align 4
  %1565 = sext i32 %1564 to i64
  %1566 = load i32, i32* %i, align 4
  %1567 = sext i32 %1566 to i64
  %1568 = getelementptr inbounds [1 x double], [1 x double]* %458, i64 %1567
  %1569 = getelementptr inbounds [1 x double], [1 x double]* %1568, i64 0, i64 %1565
  %1570 = load double, double* %1569, align 8
  %1571 = load i32, i32* %j, align 4
  %1572 = sext i32 %1571 to i64
  %1573 = load i32, i32* %i, align 4
  %1574 = sext i32 %1573 to i64
  %1575 = getelementptr inbounds [1 x double], [1 x double]* %492, i64 %1574
  %1576 = getelementptr inbounds [1 x double], [1 x double]* %1575, i64 0, i64 %1572
  %1577 = load double, double* %1576, align 8
  %1578 = fsub double %1570, %1577
  %1579 = fadd double %1563, %1578
  %1580 = load i32, i32* %j, align 4
  %1581 = sext i32 %1580 to i64
  %1582 = load i32, i32* %i, align 4
  %1583 = sext i32 %1582 to i64
  %1584 = getelementptr inbounds [1 x double], [1 x double]* %351, i64 %1583
  %1585 = getelementptr inbounds [1 x double], [1 x double]* %1584, i64 0, i64 %1581
  store double %1579, double* %1585, align 8
  br label %1586
#BasicBlock: 1603
  %1588 = load i32, i32* %j, align 4
  %1589 = add nsw i32 %1588, 1
  store i32 %1589, i32* %j, align 4
  br label %1552
#BasicBlock: 1604
  br label %1592
#BasicBlock: 1605
  %1594 = load i32, i32* %i, align 4
  %1595 = add nsw i32 %1594, 1
  store i32 %1595, i32* %i, align 4
  br label %1545
#BasicBlock: 1606
  store i32 0, i32* %i, align 4
  br label %1598
#BasicBlock: 1607
  %1600 = load i32, i32* %i, align 4
  %1601 = load i32, i32* %3, align 4
  %1602 = icmp slt i32 %1600, %1601
  br i1 %1602, label %1603, label %1633
#BasicBlock: 1608
  store i32 0, i32* %j, align 4
  br label %1605
#BasicBlock: 1609
  %1607 = load i32, i32* %j, align 4
  %1608 = icmp slt i32 %1607, 1
  br i1 %1608, label %1609, label %1631
#BasicBlock: 1610
  %1611 = load i32, i32* %j, align 4
  %1612 = sext i32 %1611 to i64
  %1613 = load i32, i32* %i, align 4
  %1614 = sext i32 %1613 to i64
  %1615 = getelementptr inbounds [1 x double], [1 x double]* %424, i64 %1614
  %1616 = getelementptr inbounds [1 x double], [1 x double]* %1615, i64 0, i64 %1612
  store double 0.000000e+00, double* %1616, align 8
  %1617 = load i32, i32* %j, align 4
  %1618 = sext i32 %1617 to i64
  %1619 = load i32, i32* %i, align 4
  %1620 = sext i32 %1619 to i64
  %1621 = getelementptr inbounds [1 x double], [1 x double]* %458, i64 %1620
  %1622 = getelementptr inbounds [1 x double], [1 x double]* %1621, i64 0, i64 %1618
  store double 0.000000e+00, double* %1622, align 8
  %1623 = load i32, i32* %j, align 4
  %1624 = sext i32 %1623 to i64
  %1625 = load i32, i32* %i, align 4
  %1626 = sext i32 %1625 to i64
  %1627 = getelementptr inbounds [1 x double], [1 x double]* %609, i64 %1626
  %1628 = getelementptr inbounds [1 x double], [1 x double]* %1627, i64 0, i64 %1624
  store double 0.000000e+00, double* %1628, align 8
  br label %1629
#BasicBlock: 1611
  %1631 = load i32, i32* %j, align 4
  %1632 = add nsw i32 %1631, 1
  store i32 %1632, i32* %j, align 4
  br label %1606
#BasicBlock: 1612
  br label %1635
#BasicBlock: 1613
  %1637 = load i32, i32* %i, align 4
  %1638 = add nsw i32 %1637, 1
  store i32 %1638, i32* %i, align 4
  br label %1599
#BasicBlock: 1614
  br label %1641
#BasicBlock: 1615
  %1643 = load i32, i32* %Max_iter, align 4
  %1644 = add nsw i32 %1643, 1
  store i32 %1644, i32* %Max_iter, align 4
  br label %1122
#BasicBlock: 1616
  store i32 0, i32* %i3, align 4
  br label %1647
#BasicBlock: 1617
  %1649 = load i32, i32* %i3, align 4
  %1650 = load i32, i32* %3, align 4
  %1651 = icmp slt i32 %1649, %1650
  br i1 %1651, label %1652, label %1665
#BasicBlock: 1618
  %1654 = load i32, i32* %i3, align 4
  %1655 = sext i32 %1654 to i64
  %1656 = getelementptr inbounds [1 x double], [1 x double]* %492, i64 %1655
  %1657 = getelementptr inbounds [1 x double], [1 x double]* %1656, i64 0, i64 0
  %1658 = load double, double* %1657, align 8
  %1659 = load i32, i32* %i3, align 4
  %1660 = sext i32 %1659 to i64
  %1661 = load double*, double** %7, align 8
  %1662 = getelementptr inbounds double, double* %1661, i64 %1660
  store double %1658, double* %1662, align 8
  br label %1663
#BasicBlock: 1619
  %1665 = load i32, i32* %i3, align 4
  %1666 = add nsw i32 %1665, 1
  store i32 %1666, i32* %i3, align 4
  br label %1648
#BasicBlock: 1620
  %1669 = load i8*, i8** %8, align 8
  call void @llvm.stackrestore(i8* %1669)
  ret void
Builtin - llvm.stackrestore
current function name: modelEstFinal
#BasicBlock: 1621
  %numCh = alloca i32, align 4
  %1 = alloca i8*, align 8
  %numInp = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %K = alloca i32, align 4
  %orderTest = alloca [32 x double], align 16
  %infit = alloca i32, align 4
  %sizeOfXSingleRow = alloca i32, align 4
  %colInd_Count = alloca i32, align 4
  store i32 1024, i32* %numCh, align 4
  %2 = load i32, i32* %numCh, align 4
  %3 = zext i32 %2 to i64
  %4 = call i8* @llvm.stacksave()
  br label %5
Builtin - llvm.stacksave
#BasicBlock: 1622
  store i8* %5, i8** %1, align 8
  %7 = alloca i32, i64 %4, align 16
  store i32 1024, i32* %numInp, align 4
  store i32 0, i32* %i, align 4
  br label %8
#BasicBlock: 1623
  %10 = load i32, i32* %i, align 4
  %11 = load i32, i32* %numCh, align 4
  %12 = icmp slt i32 %10, %11
  br i1 %12, label %13, label %21
#BasicBlock: 1624
  %15 = load i32, i32* %i, align 4
  %16 = load i32, i32* %i, align 4
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds i32, i32* %7, i64 %17
  store i32 %15, i32* %18, align 4
  br label %19
#BasicBlock: 1625
  %21 = load i32, i32* %i, align 4
  %22 = add nsw i32 %21, 1
  store i32 %22, i32* %i, align 4
  br label %9
#BasicBlock: 1626
  store i32 3, i32* %K, align 4
  %25 = bitcast [32 x double]* %orderTest to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %25, i8* bitcast ([32 x double]* @modelEstFinal.orderTest to i8*), i64 256, i32 16, i1 false)
  br label %26
#BasicBlock: 1627
  %28 = load i32, i32* %numCh, align 4
  %29 = zext i32 %28 to i64
  %30 = alloca double, i64 %29, align 16
  store i32 1, i32* %infit, align 4
  %31 = load i32, i32* %K, align 4
  %32 = zext i32 %31 to i64
  %33 = alloca double, i64 %32, align 16
  store i32 0, i32* %i, align 4
  br label %34
#BasicBlock: 1628
  %36 = load i32, i32* %i, align 4
  %37 = load i32, i32* %K, align 4
  %38 = icmp slt i32 %36, %37
  br i1 %38, label %39, label %46
#BasicBlock: 1629
  %41 = load i32, i32* %i, align 4
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds double, double* %33, i64 %42
  store double 0.000000e+00, double* %43, align 8
  br label %44
#BasicBlock: 1630
  %46 = load i32, i32* %i, align 4
  %47 = add nsw i32 %46, 1
  store i32 %47, i32* %i, align 4
  br label %35
#BasicBlock: 1631
  %50 = load i32, i32* %numCh, align 4
  %51 = zext i32 %50 to i64
  %52 = load i32, i32* %K, align 4
  %53 = zext i32 %52 to i64
  %54 = mul nuw i64 %51, %53
  %55 = alloca double, i64 %54, align 16
  store i32 3, i32* %sizeOfXSingleRow, align 4
  %56 = load i32, i32* %sizeOfXSingleRow, align 4
  %57 = zext i32 %56 to i64
  %58 = alloca double, i64 %57, align 16
  store i32 0, i32* %i, align 4
  br label %59
#BasicBlock: 1632
  %61 = load i32, i32* %i, align 4
  %62 = load i32, i32* %numCh, align 4
  %63 = icmp slt i32 %61, %62
  br i1 %63, label %64, label %88
#BasicBlock: 1633
  store i32 0, i32* %j, align 4
  br label %66
#BasicBlock: 1634
  %68 = load i32, i32* %j, align 4
  %69 = load i32, i32* %sizeOfXSingleRow, align 4
  %70 = icmp slt i32 %68, %69
  br i1 %70, label %71, label %80
#BasicBlock: 1635
  %73 = load i32, i32* %i, align 4
  %74 = sitofp i32 %73 to double
  %75 = load i32, i32* %j, align 4
  %76 = sext i32 %75 to i64
  %77 = getelementptr inbounds double, double* %58, i64 %76
  store double %74, double* %77, align 8
  br label %78
#BasicBlock: 1636
  %80 = load i32, i32* %j, align 4
  %81 = add nsw i32 %80, 1
  store i32 %81, i32* %j, align 4
  br label %67
#BasicBlock: 1637
  %84 = load i32, i32* %sizeOfXSingleRow, align 4
  %85 = call double @WT_estimator_v3(double* %58, double 1.000000e+00, i32 %84)
  br label %86
#BasicBlock: 1638
  %88 = load i32, i32* %i, align 4
  %89 = sext i32 %88 to i64
  %90 = getelementptr inbounds double, double* %30, i64 %89
  store double %86, double* %90, align 8
  br label %91
#BasicBlock: 1639
  %93 = load i32, i32* %i, align 4
  %94 = add nsw i32 %93, 1
  store i32 %94, i32* %i, align 4
  br label %60
#BasicBlock: 1640
  %97 = load i32, i32* %numInp, align 4
  %98 = zext i32 %97 to i64
  %99 = alloca i32, i64 %98, align 16
  store i32 0, i32* %colInd_Count, align 4
  store i32 0, i32* %i, align 4
  br label %100
#BasicBlock: 1641
  %102 = load i32, i32* %i, align 4
  %103 = load i32, i32* %numInp, align 4
  %104 = icmp slt i32 %102, %103
  br i1 %104, label %105, label %129
#BasicBlock: 1642
  %107 = load i32, i32* %i, align 4
  %108 = load i32, i32* %numCh, align 4
  %109 = srem i32 %107, %108
  %110 = sext i32 %109 to i64
  %111 = getelementptr inbounds double, double* %30, i64 %110
  %112 = load double, double* %111, align 8
  %113 = call double @abs1(double %112)
  br label %114
#BasicBlock: 1643
  %116 = fcmp ogt double %114, 1.000000e-07
  br i1 %116, label %117, label %124
#BasicBlock: 1644
  %119 = load i32, i32* %i, align 4
  %120 = load i32, i32* %colInd_Count, align 4
  %121 = sext i32 %120 to i64
  %122 = getelementptr inbounds i32, i32* %99, i64 %121
  store i32 %119, i32* %122, align 4
  %123 = load i32, i32* %colInd_Count, align 4
  %124 = add nsw i32 %123, 1
  store i32 %124, i32* %colInd_Count, align 4
  br label %129
#BasicBlock: 1645
  %127 = load i32, i32* %colInd_Count, align 4
  %128 = sext i32 %127 to i64
  %129 = getelementptr inbounds i32, i32* %99, i64 %128
  store i32 0, i32* %129, align 4
  br label %130
#BasicBlock: 1646
  %132 = load i32, i32* %i, align 4
  %133 = add nsw i32 %132, 1
  store i32 %133, i32* %i, align 4
  br label %101
#BasicBlock: 1647
  %136 = load i32, i32* %numCh, align 4
  %137 = zext i32 %136 to i64
  %138 = load i32, i32* %numInp, align 4
  %139 = zext i32 %138 to i64
  %140 = mul nuw i64 %137, %139
  %141 = alloca double, i64 %140, align 16
  %142 = load i32, i32* %colInd_Count, align 4
  %143 = load i32, i32* %numInp, align 4
  %144 = icmp slt i32 %142, %143
  br i1 %144, label %145, label %183
#BasicBlock: 1648
  store i32 0, i32* %i, align 4
  br label %147
#BasicBlock: 1649
  %149 = load i32, i32* %i, align 4
  %150 = load i32, i32* %numCh, align 4
  %151 = icmp slt i32 %149, %150
  br i1 %151, label %152, label %184
#BasicBlock: 1650
  store i32 0, i32* %j, align 4
  br label %154
#BasicBlock: 1651
  %156 = load i32, i32* %j, align 4
  %157 = load i32, i32* %numInp, align 4
  %158 = icmp slt i32 %156, %157
  br i1 %158, label %159, label %182
#BasicBlock: 1652
  %161 = load i32, i32* %i, align 4
  %162 = load i32, i32* %j, align 4
  %163 = icmp eq i32 %161, %162
  br i1 %163, label %164, label %172
#BasicBlock: 1653
  %166 = load i32, i32* %j, align 4
  %167 = sext i32 %166 to i64
  %168 = load i32, i32* %i, align 4
  %169 = sext i32 %168 to i64
  %170 = mul nsw i64 %169, %139
  %171 = getelementptr inbounds double, double* %141, i64 %170
  %172 = getelementptr inbounds double, double* %171, i64 %167
  store double 1.000000e+00, double* %172, align 8
  br label %181
#BasicBlock: 1654
  %175 = load i32, i32* %j, align 4
  %176 = sext i32 %175 to i64
  %177 = load i32, i32* %i, align 4
  %178 = sext i32 %177 to i64
  %179 = mul nsw i64 %178, %139
  %180 = getelementptr inbounds double, double* %141, i64 %179
  %181 = getelementptr inbounds double, double* %180, i64 %176
  store double 0.000000e+00, double* %181, align 8
  br label %182
#BasicBlock: 1655
  %184 = load i32, i32* %j, align 4
  %185 = add nsw i32 %184, 1
  store i32 %185, i32* %j, align 4
  br label %155
#BasicBlock: 1656
  br label %188
#BasicBlock: 1657
  %190 = load i32, i32* %i, align 4
  %191 = add nsw i32 %190, 1
  store i32 %191, i32* %i, align 4
  br label %148
#BasicBlock: 1658
  br label %224
#BasicBlock: 1659
  store i32 0, i32* %j, align 4
  br label %196
#BasicBlock: 1660
  %198 = load i32, i32* %j, align 4
  %199 = load i32, i32* %numInp, align 4
  %200 = icmp slt i32 %198, %199
  br i1 %200, label %201, label %225
#BasicBlock: 1661
  store i32 0, i32* %i, align 4
  br label %203
#BasicBlock: 1662
  %205 = load i32, i32* %i, align 4
  %206 = load i32, i32* %numCh, align 4
  %207 = icmp slt i32 %205, %206
  br i1 %207, label %208, label %223
#BasicBlock: 1663
  %210 = load i32, i32* %i, align 4
  %211 = sext i32 %210 to i64
  %212 = getelementptr inbounds double, double* %30, i64 %211
  %213 = load double, double* %212, align 8
  %214 = load i32, i32* %j, align 4
  %215 = sext i32 %214 to i64
  %216 = load i32, i32* %i, align 4
  %217 = sext i32 %216 to i64
  %218 = mul nsw i64 %217, %139
  %219 = getelementptr inbounds double, double* %141, i64 %218
  %220 = getelementptr inbounds double, double* %219, i64 %215
  store double %213, double* %220, align 8
  br label %221
#BasicBlock: 1664
  %223 = load i32, i32* %i, align 4
  %224 = add nsw i32 %223, 1
  store i32 %224, i32* %i, align 4
  br label %204
#BasicBlock: 1665
  br label %227
#BasicBlock: 1666
  %229 = load i32, i32* %j, align 4
  %230 = add nsw i32 %229, 1
  store i32 %230, i32* %j, align 4
  br label %197
#BasicBlock: 1667
  br label %233
#BasicBlock: 1668
  %235 = load i32, i32* %numCh, align 4
  %236 = load i32, i32* %numInp, align 4
  %237 = mul nsw i32 %235, %236
  %238 = zext i32 %237 to i64
  %239 = alloca double, i64 %238, align 16
  store i32 0, i32* %i, align 4
  br label %240
#BasicBlock: 1669
  %242 = load i32, i32* %i, align 4
  %243 = load i32, i32* %numCh, align 4
  %244 = load i32, i32* %numInp, align 4
  %245 = mul nsw i32 %243, %244
  %246 = icmp slt i32 %242, %245
  br i1 %246, label %247, label %254
#BasicBlock: 1670
  %249 = load i32, i32* %i, align 4
  %250 = sext i32 %249 to i64
  %251 = getelementptr inbounds double, double* %239, i64 %250
  store double 0.000000e+00, double* %251, align 8
  br label %252
#BasicBlock: 1671
  %254 = load i32, i32* %i, align 4
  %255 = add nsw i32 %254, 1
  store i32 %255, i32* %i, align 4
  br label %241
#BasicBlock: 1672
  store i32 0, i32* %i, align 4
  br label %258
#BasicBlock: 1673
  %260 = load i32, i32* %i, align 4
  %261 = load i32, i32* %numCh, align 4
  %262 = icmp slt i32 %260, %261
  br i1 %262, label %263, label %291
#BasicBlock: 1674
  store i32 0, i32* %j, align 4
  br label %265
#BasicBlock: 1675
  %267 = load i32, i32* %j, align 4
  %268 = load i32, i32* %numInp, align 4
  %269 = icmp slt i32 %267, %268
  br i1 %269, label %270, label %289
#BasicBlock: 1676
  %272 = load i32, i32* %j, align 4
  %273 = sext i32 %272 to i64
  %274 = load i32, i32* %i, align 4
  %275 = sext i32 %274 to i64
  %276 = mul nsw i64 %275, %139
  %277 = getelementptr inbounds double, double* %141, i64 %276
  %278 = getelementptr inbounds double, double* %277, i64 %273
  %279 = load double, double* %278, align 8
  %280 = load i32, i32* %i, align 4
  %281 = load i32, i32* %numInp, align 4
  %282 = mul nsw i32 %280, %281
  %283 = load i32, i32* %j, align 4
  %284 = add nsw i32 %282, %283
  %285 = sext i32 %284 to i64
  %286 = getelementptr inbounds double, double* %239, i64 %285
  store double %279, double* %286, align 8
  br label %287
#BasicBlock: 1677
  %289 = load i32, i32* %j, align 4
  %290 = add nsw i32 %289, 1
  store i32 %290, i32* %j, align 4
  br label %266
#BasicBlock: 1678
  br label %293
#BasicBlock: 1679
  %295 = load i32, i32* %i, align 4
  %296 = add nsw i32 %295, 1
  store i32 %296, i32* %i, align 4
  br label %259
#BasicBlock: 1680
  %299 = load i8*, i8** %1, align 8
  call void @llvm.stackrestore(i8* %299)
  ret void
Builtin - llvm.stackrestore
current function name: llvm.memcpy.p0i8.p0i8.i64
current function name: main
#BasicBlock: 1681
  call void @modelEstFinal()
  ret void
current function name: __ctGetBufferPos
current function name: __ctStoreBasicBlock
current function name: __ctStoreBasicBlockComplete
current function name: __ctStoreMemOp
current function name: __ctGetBuffer
current function name: __ctInitCilkSync
current function name: __ctAllocateLocalBuffer
current function name: __ctStoreMemReadMark
current function name: __ctStoreMemWriteMark
current function name: __ctOMPPushParent
current function name: __ctOMPPopParent
current function name: __ctOMPProcessJoinStack
current function name: __ctAllocateCTid
current function name: __ctGetLocalNumber
current function name: __ctGetCurrentTick
current function name: __ctAllocateTicket
current function name: __ctPeekParent
current function name: omp_get_level
current function name: __ctStoreSync
current function name: __ctStoreBasicBlockMark
current function name: pthread_exit
current function name: __ctOMPThreadCreate
current function name: __ctOMPThreadJoin
current function name: __ctOMPTaskCreate
current function name: __ctCheckBufferSize
current function name: __ctCheckBufferBySize
current function name: omp_get_ancestor_thread_num
current function name: __ctQueueBuffer
current function name: __ctOMPTaskJoin
current function name: __ctStoreBarrier
current function name: __ctAddThreadInfo
current function name: __ctStoreMPITransfer
current function name: __ctStoreMPIWait
current function name: __ctRecordCilkFrame
current function name: __ctRecordCilkSync
current function name: __ctRestoreCilkFrame
current function name: __ctCilkPromoteParent
current function name: __ctStoreThreadCreate
current function name: __ctStoreThreadJoin
current function name: __ctStoreMemoryEvent
current function name: __ctStoreBulkMemoryEvent
current function name: __ctOMPStoreInOutDeps
current function name: __ctThreadCreateActual
END

 llvm-link a.out_ct.link.bc -o a.out_ct.fin.bc

 rm -rf /tmp/tmp7lSspx

 objcopy --input binary --output elf64-x86-64 --binary-architecture i386 contech.bin contech_state.o

 clang a.out_ct.fin.bc /home/yao/ICML/common/runtime/ct_runtime.bc /home/yao/ICML/common/runtime/ct_main.bc /home/yao/ICML/common/runtime/ct_nompi.bc  --verbose -pthread -lm -Wmain-return-type -o a.out -lrt -ldl -lpthread contech_state.o
clang version 3.8.1 (tags/RELEASE_381/final)
Target: x86_64-unknown-linux-gnu
Thread model: posix
InstalledDir: /usr/local/bin
Found candidate GCC installation: /usr/lib/gcc/x86_64-linux-gnu/5.5.0
Found candidate GCC installation: /usr/lib/gcc/x86_64-linux-gnu/7.5.0
Selected GCC installation: /usr/lib/gcc/x86_64-linux-gnu/7.5.0
Candidate multilib: .;@m64
Selected multilib: .;@m64
 "/usr/local/bin/clang-3.8" -cc1 -triple x86_64-unknown-linux-gnu -emit-obj -mrelax-all -disable-free -disable-llvm-verifier -main-file-name a.out_ct.fin.bc -mrelocation-model static -mthread-model posix -mdisable-fp-elim -fmath-errno -masm-verbose -mconstructor-aliases -munwind-tables -fuse-init-array -target-cpu x86-64 -v -dwarf-column-info -debugger-tuning=gdb -resource-dir /usr/local/bin/../lib/clang/3.8.1 -Wmain-return-type -fdebug-compilation-dir /home/yao/ICML/scripts -ferror-limit 19 -fmessage-length 0 -pthread -fobjc-runtime=gcc -fdiagnostics-show-option -o /tmp/a-ad0ad0.o -x ir a.out_ct.fin.bc
clang -cc1 version 3.8.1 based upon LLVM 3.8.1 default target x86_64-unknown-linux-gnu
 "/usr/local/bin/clang-3.8" -cc1 -triple x86_64-unknown-linux-gnu -emit-obj -mrelax-all -disable-free -disable-llvm-verifier -main-file-name ct_runtime.bc -mrelocation-model static -mthread-model posix -mdisable-fp-elim -fmath-errno -masm-verbose -mconstructor-aliases -munwind-tables -fuse-init-array -target-cpu x86-64 -v -dwarf-column-info -debugger-tuning=gdb -resource-dir /usr/local/bin/../lib/clang/3.8.1 -Wmain-return-type -fdebug-compilation-dir /home/yao/ICML/scripts -ferror-limit 19 -fmessage-length 0 -pthread -fobjc-runtime=gcc -fdiagnostics-show-option -o /tmp/ct_runtime-53b280.o -x ir /home/yao/ICML/common/runtime/ct_runtime.bc
clang -cc1 version 3.8.1 based upon LLVM 3.8.1 default target x86_64-unknown-linux-gnu
 "/usr/local/bin/clang-3.8" -cc1 -triple x86_64-unknown-linux-gnu -emit-obj -mrelax-all -disable-free -disable-llvm-verifier -main-file-name ct_main.bc -mrelocation-model static -mthread-model posix -mdisable-fp-elim -fmath-errno -masm-verbose -mconstructor-aliases -munwind-tables -fuse-init-array -target-cpu x86-64 -v -dwarf-column-info -debugger-tuning=gdb -resource-dir /usr/local/bin/../lib/clang/3.8.1 -Wmain-return-type -fdebug-compilation-dir /home/yao/ICML/scripts -ferror-limit 19 -fmessage-length 0 -pthread -fobjc-runtime=gcc -fdiagnostics-show-option -o /tmp/ct_main-2a38a1.o -x ir /home/yao/ICML/common/runtime/ct_main.bc
clang -cc1 version 3.8.1 based upon LLVM 3.8.1 default target x86_64-unknown-linux-gnu
 "/usr/local/bin/clang-3.8" -cc1 -triple x86_64-unknown-linux-gnu -emit-obj -mrelax-all -disable-free -disable-llvm-verifier -main-file-name ct_nompi.bc -mrelocation-model static -mthread-model posix -mdisable-fp-elim -fmath-errno -masm-verbose -mconstructor-aliases -munwind-tables -fuse-init-array -target-cpu x86-64 -v -dwarf-column-info -debugger-tuning=gdb -resource-dir /usr/local/bin/../lib/clang/3.8.1 -Wmain-return-type -fdebug-compilation-dir /home/yao/ICML/scripts -ferror-limit 19 -fmessage-length 0 -pthread -fobjc-runtime=gcc -fdiagnostics-show-option -o /tmp/ct_nompi-49a466.o -x ir /home/yao/ICML/common/runtime/ct_nompi.bc
clang -cc1 version 3.8.1 based upon LLVM 3.8.1 default target x86_64-unknown-linux-gnu
 "/usr/bin/ld" --eh-frame-hdr -m elf_x86_64 -dynamic-linker /lib64/ld-linux-x86-64.so.2 -o a.out /usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../x86_64-linux-gnu/crt1.o /usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../x86_64-linux-gnu/crti.o /usr/lib/gcc/x86_64-linux-gnu/7.5.0/crtbegin.o -L/usr/lib/gcc/x86_64-linux-gnu/7.5.0 -L/usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../x86_64-linux-gnu -L/lib/x86_64-linux-gnu -L/lib/../lib64 -L/usr/lib/x86_64-linux-gnu -L/usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../.. -L/usr/local/bin/../lib -L/lib -L/usr/lib /tmp/a-ad0ad0.o /tmp/ct_runtime-53b280.o /tmp/ct_main-2a38a1.o /tmp/ct_nompi-49a466.o -lm -lrt -ldl -lpthread contech_state.o -lgcc --as-needed -lgcc_s --no-as-needed -lpthread -lc -lgcc --as-needed -lgcc_s --no-as-needed /usr/lib/gcc/x86_64-linux-gnu/7.5.0/crtend.o /usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../x86_64-linux-gnu/crtn.o

