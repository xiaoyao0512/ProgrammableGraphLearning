#!/usr/bin/python

import networkx as nx
G = nx.Graph()
elist = [(0, 5, 88),(1, 9, 192),(1, 26, 164),(1, 34, 148),(1, 41, 1),(1, 50, 408),(2, 13, 152),(2, 31, 160),(2, 36, 152),(2, 42, 1),(2, 51, 288),(3, 21, 168),(3, 38, 328),(3, 43, 1),(3, 52, 520),(4, 18, 248),(5, 0, 88),(5, 6, 1),(6, 5, 1),(6, 7, 1),(7, 6, 1),(7, 8, 1),(8, 7, 1),(8, 9, 192),(9, 1, 192),(9, 8, 192),(9, 10, 1),(10, 9, 1),(10, 11, 1),(11, 10, 1),(11, 12, 1),(12, 11, 1),(12, 13, 152),(13, 2, 152),(13, 12, 152),(13, 14, 1),(13, 17, 156),(14, 13, 1),(14, 15, 1),(15, 14, 1),(15, 16, 1),(16, 15, 1),(16, 17, 156),(17, 13, 156),(17, 16, 156),(17, 39, 1),(18, 4, 248),(18, 19, 156),(18, 24, 164),(18, 29, 304),(19, 18, 156),(19, 20, 1),(20, 19, 1),(20, 22, 1),(21, 3, 168),(21, 22, 1),(22, 20, 1),(22, 21, 1),(22, 23, 320),(23, 22, 320),(24, 18, 164),(24, 25, 1),(25, 24, 1),(25, 27, 1),(26, 1, 164),(26, 27, 1),(27, 25, 1),(27, 26, 1),(27, 28, 104),(28, 27, 104),(28, 41, 1),(29, 18, 304),(29, 30, 1),(30, 29, 1),(30, 32, 1),(30, 42, 1),(31, 2, 160),(31, 32, 1),(32, 30, 1),(32, 31, 1),(32, 33, 136),(33, 32, 136),(33, 43, 1),(34, 1, 148),(34, 35, 1),(35, 34, 1),(36, 2, 152),(36, 37, 1),(37, 36, 1),(38, 3, 328),(38, 39, 1),(39, 17, 1),(39, 38, 1),(39, 40, 1),(40, 39, 1),(41, 1, 1),(41, 28, 1),(42, 2, 1),(42, 30, 1),(43, 3, 1),(43, 33, 1),(43, 50, 408),(44, 53, 360),(45, 61, 140),(46, 51, 288),(46, 67, 196),(47, 74, 156),(48, 53, 360),(48, 64, 352),(49, 54, 312),(50, 1, 408),(50, 43, 408),(51, 2, 288),(51, 46, 288),(51, 52, 520),(52, 3, 520),(52, 51, 520),(53, 44, 360),(53, 48, 360),(53, 57, 1),(54, 49, 312),(54, 55, 1),(54, 56, 76),(54, 59, 336),(54, 65, 144),(54, 72, 172),(54, 78, 344),(54, 80, 312),(54, 82, 336),(55, 54, 1),(55, 56, 1),(56, 54, 76),(56, 55, 1),(56, 57, 1),(57, 53, 1),(57, 56, 1),(57, 58, 1),(58, 57, 1),(58, 59, 1),(59, 54, 336),(59, 58, 1),(59, 60, 1),(60, 59, 1),(60, 62, 1),(61, 45, 140),(61, 62, 1),(62, 60, 1),(62, 61, 1),(62, 63, 168),(63, 62, 168),(63, 71, 1),(64, 48, 352),(64, 70, 1),(65, 54, 144),(65, 66, 1),(66, 65, 1),(66, 68, 1),(67, 46, 196),(67, 68, 1),(68, 66, 1),(68, 67, 1),(68, 69, 312),(69, 68, 312),(69, 70, 1),(70, 64, 1),(70, 69, 1),(70, 71, 1),(71, 63, 1),(71, 70, 1),(71, 76, 304),(72, 54, 172),(72, 73, 1),(73, 72, 1),(73, 75, 1),(74, 47, 156),(74, 75, 1),(75, 73, 1),(75, 74, 1),(75, 76, 304),(76, 71, 304),(76, 75, 304),(76, 77, 1),(77, 76, 1),(77, 78, 1),(78, 54, 344),(78, 77, 1),(78, 79, 1),(79, 78, 1),(79, 80, 312),(80, 54, 312),(80, 79, 312),(80, 81, 1),(81, 80, 1),(81, 82, 1),(82, 54, 336),(82, 81, 1),(82, 83, 1),(83, 82, 1),(83, 84, 1),(84, 83, 1),(84, 85, 1),(85, 84, 1)]
G.add_weighted_edges_from(elist)
r = nx.degree_assortativity_coefficient(G)
print("assortativity coefficient = %3.3f"%r)
